
{.warning[UnusedImport]: off.}
{.hint[XDeclaredButNotUsed]: off.}
from macros import hint, warning, newLit, getSize

from os import parentDir

when not declared(ownSizeOf):
  macro ownSizeof(x: typed): untyped =
    newLit(x.getSize)

type
  enum_SDL_DUMMY_ENUM_1157628456* {.size: sizeof(cuint).} = enum
    DUMMY_ENUM_VALUE = 0
type
  enum_SDL_AssertState_1157628480* {.size: sizeof(cuint).} = enum
    ASSERTION_RETRY = 0, ASSERTION_BREAK = 1, ASSERTION_ABORT = 2,
    ASSERTION_IGNORE = 3, ASSERTION_ALWAYS_IGNORE = 4
type
  enum_SDL_AsyncIOTaskType_1157628492* {.size: sizeof(cuint).} = enum
    ASYNCIO_TASK_READ = 0, ASYNCIO_TASK_WRITE = 1, ASYNCIO_TASK_CLOSE = 2
type
  enum_SDL_AsyncIOResult_1157628496* {.size: sizeof(cuint).} = enum
    ASYNCIO_COMPLETE = 0, ASYNCIO_FAILURE = 1, ASYNCIO_CANCELLED = 2
type
  enum_SDL_PropertyType_1157628518* {.size: sizeof(cuint).} = enum
    PROPERTY_TYPE_INVALID = 0, PROPERTY_TYPE_POINTER = 1,
    PROPERTY_TYPE_STRING = 2, PROPERTY_TYPE_NUMBER = 3, PROPERTY_TYPE_FLOAT = 4,
    PROPERTY_TYPE_BOOLEAN = 5
type
  enum_SDL_ThreadPriority_1157628532* {.size: sizeof(cuint).} = enum
    THREAD_PRIORITY_LOW = 0, THREAD_PRIORITY_NORMAL = 1,
    THREAD_PRIORITY_HIGH = 2, THREAD_PRIORITY_TIME_CRITICAL = 3
type
  enum_SDL_InitStatus_1157628548* {.size: sizeof(cuint).} = enum
    INIT_STATUS_UNINITIALIZED = 0, INIT_STATUS_INITIALIZING = 1,
    INIT_STATUS_INITIALIZED = 2, INIT_STATUS_UNINITIALIZING = 3
type
  enum_SDL_IOStatus_1157628556* {.size: sizeof(cuint).} = enum
    IO_STATUS_READY = 0, IO_STATUS_ERROR = 1, IO_STATUS_EOF = 2,
    IO_STATUS_NOT_READY = 3, IO_STATUS_READONLY = 4, IO_STATUS_WRITEONLY = 5
type
  enum_SDL_IOWhence_1157628560* {.size: sizeof(cuint).} = enum
    IO_SEEK_SET = 0, IO_SEEK_CUR = 1, IO_SEEK_END = 2
type
  enum_SDL_AudioFormat_1157628570* {.size: sizeof(cuint).} = enum
    AUDIO_UNKNOWN = 0, AUDIO_U8_enumval = 8, AUDIO_S8_enumval = 32776,
    AUDIO_S16LE = 32784, AUDIO_S32LE = 32800, AUDIO_F32LE = 33056,
    AUDIO_S16BE = 36880, AUDIO_S32BE = 36896, AUDIO_F32BE = 37152
when not declared(AUDIO_S16_enumval):
  const
    AUDIO_S16_enumval* = enum_SDL_AudioFormat_1157628570.AUDIO_S16LE
else:
  static :
    hint("Declaration of " & "AUDIO_S16_enumval" &
        " already exists, not redeclaring")
when not declared(AUDIO_S32_enumval):
  const
    AUDIO_S32_enumval* = enum_SDL_AudioFormat_1157628570.AUDIO_S32LE
else:
  static :
    hint("Declaration of " & "AUDIO_S32_enumval" &
        " already exists, not redeclaring")
when not declared(AUDIO_F32_enumval):
  const
    AUDIO_F32_enumval* = enum_SDL_AudioFormat_1157628570.AUDIO_F32LE
else:
  static :
    hint("Declaration of " & "AUDIO_F32_enumval" &
        " already exists, not redeclaring")
type
  enum_SDL_BlendOperation_1157628588* {.size: sizeof(cuint).} = enum
    BLENDOPERATION_ADD = 1, BLENDOPERATION_SUBTRACT = 2,
    BLENDOPERATION_REV_SUBTRACT = 3, BLENDOPERATION_MINIMUM = 4,
    BLENDOPERATION_MAXIMUM = 5
type
  enum_SDL_BlendFactor_1157628592* {.size: sizeof(cuint).} = enum
    BLENDFACTOR_ZERO = 1, BLENDFACTOR_ONE = 2, BLENDFACTOR_SRC_COLOR = 3,
    BLENDFACTOR_ONE_MINUS_SRC_COLOR = 4, BLENDFACTOR_SRC_ALPHA = 5,
    BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 6, BLENDFACTOR_DST_COLOR = 7,
    BLENDFACTOR_ONE_MINUS_DST_COLOR = 8, BLENDFACTOR_DST_ALPHA = 9,
    BLENDFACTOR_ONE_MINUS_DST_ALPHA = 10
type
  enum_SDL_PixelType_1157628596* {.size: sizeof(cuint).} = enum
    PIXELTYPE_UNKNOWN = 0, PIXELTYPE_INDEX1 = 1, PIXELTYPE_INDEX4 = 2,
    PIXELTYPE_INDEX8 = 3, PIXELTYPE_PACKED8 = 4, PIXELTYPE_PACKED16 = 5,
    PIXELTYPE_PACKED32 = 6, PIXELTYPE_ARRAYU8 = 7, PIXELTYPE_ARRAYU16 = 8,
    PIXELTYPE_ARRAYU32 = 9, PIXELTYPE_ARRAYF16 = 10, PIXELTYPE_ARRAYF32 = 11,
    PIXELTYPE_INDEX2 = 12
type
  enum_SDL_BitmapOrder_1157628600* {.size: sizeof(cuint).} = enum
    BITMAPORDER_NONE = 0, BITMAPORDER_4321 = 1, BITMAPORDER_1234 = 2
type
  enum_SDL_PackedOrder_1157628604* {.size: sizeof(cuint).} = enum
    PACKEDORDER_NONE = 0, PACKEDORDER_XRGB = 1, PACKEDORDER_RGBX = 2,
    PACKEDORDER_ARGB = 3, PACKEDORDER_RGBA = 4, PACKEDORDER_XBGR = 5,
    PACKEDORDER_BGRX = 6, PACKEDORDER_ABGR = 7, PACKEDORDER_BGRA = 8
type
  enum_SDL_ArrayOrder_1157628608* {.size: sizeof(cuint).} = enum
    ARRAYORDER_NONE = 0, ARRAYORDER_RGB = 1, ARRAYORDER_RGBA = 2,
    ARRAYORDER_ARGB = 3, ARRAYORDER_BGR = 4, ARRAYORDER_BGRA = 5,
    ARRAYORDER_ABGR = 6
type
  enum_SDL_PackedLayout_1157628612* {.size: sizeof(cuint).} = enum
    PACKEDLAYOUT_NONE = 0, PACKEDLAYOUT_332 = 1, PACKEDLAYOUT_4444 = 2,
    PACKEDLAYOUT_1555 = 3, PACKEDLAYOUT_5551 = 4, PACKEDLAYOUT_565 = 5,
    PACKEDLAYOUT_8888 = 6, PACKEDLAYOUT_2101010 = 7, PACKEDLAYOUT_1010102 = 8
type
  enum_SDL_PixelFormat_1157628616* {.size: sizeof(cuint).} = enum
    PIXELFORMAT_UNKNOWN = 0, PIXELFORMAT_INDEX1LSB = 286261504,
    PIXELFORMAT_INDEX1MSB = 287310080, PIXELFORMAT_INDEX4LSB = 303039488,
    PIXELFORMAT_INDEX4MSB = 304088064, PIXELFORMAT_INDEX8 = 318769153,
    PIXELFORMAT_RGB332 = 336660481, PIXELFORMAT_XRGB4444 = 353504258,
    PIXELFORMAT_XRGB1555 = 353570562, PIXELFORMAT_RGB565 = 353701890,
    PIXELFORMAT_ARGB4444 = 355602434, PIXELFORMAT_ARGB1555 = 355667970,
    PIXELFORMAT_RGBA4444 = 356651010, PIXELFORMAT_RGBA5551 = 356782082,
    PIXELFORMAT_XBGR4444 = 357698562, PIXELFORMAT_XBGR1555 = 357764866,
    PIXELFORMAT_BGR565 = 357896194, PIXELFORMAT_ABGR4444 = 359796738,
    PIXELFORMAT_ABGR1555 = 359862274, PIXELFORMAT_BGRA4444 = 360845314,
    PIXELFORMAT_BGRA5551 = 360976386, PIXELFORMAT_XRGB8888 = 370546692,
    PIXELFORMAT_XRGB2101010 = 370614276, PIXELFORMAT_RGBX8888 = 371595268,
    PIXELFORMAT_ARGB8888 = 372645892, PIXELFORMAT_ARGB2101010 = 372711428,
    PIXELFORMAT_RGBA8888 = 373694468, PIXELFORMAT_XBGR8888 = 374740996,
    PIXELFORMAT_XBGR2101010 = 374808580, PIXELFORMAT_BGRX8888 = 375789572,
    PIXELFORMAT_ABGR8888 = 376840196, PIXELFORMAT_ABGR2101010 = 376905732,
    PIXELFORMAT_BGRA8888 = 377888772, PIXELFORMAT_RGB24 = 386930691,
    PIXELFORMAT_BGR24 = 390076419, PIXELFORMAT_RGB48 = 403714054,
    PIXELFORMAT_RGBA64 = 404766728, PIXELFORMAT_ARGB64 = 405815304,
    PIXELFORMAT_BGR48 = 406859782, PIXELFORMAT_BGRA64 = 407912456,
    PIXELFORMAT_ABGR64 = 408961032, PIXELFORMAT_RGB48_FLOAT = 437268486,
    PIXELFORMAT_RGBA64_FLOAT = 438321160, PIXELFORMAT_ARGB64_FLOAT = 439369736,
    PIXELFORMAT_BGR48_FLOAT = 440414214, PIXELFORMAT_BGRA64_FLOAT = 441466888,
    PIXELFORMAT_ABGR64_FLOAT = 442515464, PIXELFORMAT_RGB96_FLOAT = 454057996,
    PIXELFORMAT_RGBA128_FLOAT = 455114768,
    PIXELFORMAT_ARGB128_FLOAT = 456163344, PIXELFORMAT_BGR96_FLOAT = 457203724,
    PIXELFORMAT_BGRA128_FLOAT = 458260496,
    PIXELFORMAT_ABGR128_FLOAT = 459309072, PIXELFORMAT_INDEX2LSB = 470811136,
    PIXELFORMAT_INDEX2MSB = 471859712, PIXELFORMAT_EXTERNAL_OES = 542328143,
    PIXELFORMAT_P010 = 808530000, PIXELFORMAT_NV21 = 825382478,
    PIXELFORMAT_NV12 = 842094158, PIXELFORMAT_YV12 = 842094169,
    PIXELFORMAT_YUY2 = 844715353, PIXELFORMAT_YVYU = 1431918169,
    PIXELFORMAT_IYUV = 1448433993, PIXELFORMAT_UYVY = 1498831189
when not declared(PIXELFORMAT_RGBA32):
  const
    PIXELFORMAT_RGBA32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_ABGR8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGBA32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_ARGB32):
  const
    PIXELFORMAT_ARGB32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_BGRA8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_ARGB32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGRA32):
  const
    PIXELFORMAT_BGRA32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_ARGB8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGRA32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_ABGR32):
  const
    PIXELFORMAT_ABGR32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_RGBA8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_ABGR32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_RGBX32):
  const
    PIXELFORMAT_RGBX32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_XBGR8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_RGBX32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_XRGB32):
  const
    PIXELFORMAT_XRGB32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_BGRX8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_XRGB32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_BGRX32):
  const
    PIXELFORMAT_BGRX32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_XRGB8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_BGRX32" &
        " already exists, not redeclaring")
when not declared(PIXELFORMAT_XBGR32):
  const
    PIXELFORMAT_XBGR32* = enum_SDL_PixelFormat_1157628616.PIXELFORMAT_RGBX8888
else:
  static :
    hint("Declaration of " & "PIXELFORMAT_XBGR32" &
        " already exists, not redeclaring")
type
  enum_SDL_ColorType_1157628620* {.size: sizeof(cuint).} = enum
    COLOR_TYPE_UNKNOWN = 0, COLOR_TYPE_RGB = 1, COLOR_TYPE_YCBCR = 2
type
  enum_SDL_ColorRange_1157628624* {.size: sizeof(cuint).} = enum
    COLOR_RANGE_UNKNOWN = 0, COLOR_RANGE_LIMITED = 1, COLOR_RANGE_FULL = 2
type
  enum_SDL_ColorPrimaries_1157628628* {.size: sizeof(cuint).} = enum
    COLOR_PRIMARIES_UNKNOWN = 0, COLOR_PRIMARIES_BT709 = 1,
    COLOR_PRIMARIES_UNSPECIFIED = 2, COLOR_PRIMARIES_BT470M = 4,
    COLOR_PRIMARIES_BT470BG = 5, COLOR_PRIMARIES_BT601 = 6,
    COLOR_PRIMARIES_SMPTE240 = 7, COLOR_PRIMARIES_GENERIC_FILM = 8,
    COLOR_PRIMARIES_BT2020 = 9, COLOR_PRIMARIES_XYZ = 10,
    COLOR_PRIMARIES_SMPTE431 = 11, COLOR_PRIMARIES_SMPTE432 = 12,
    COLOR_PRIMARIES_EBU3213 = 22, COLOR_PRIMARIES_CUSTOM = 31
type
  enum_SDL_TransferCharacteristics_1157628632* {.size: sizeof(cuint).} = enum
    TRANSFER_CHARACTERISTICS_UNKNOWN = 0, TRANSFER_CHARACTERISTICS_BT709 = 1,
    TRANSFER_CHARACTERISTICS_UNSPECIFIED = 2,
    TRANSFER_CHARACTERISTICS_GAMMA22 = 4, TRANSFER_CHARACTERISTICS_GAMMA28 = 5,
    TRANSFER_CHARACTERISTICS_BT601 = 6, TRANSFER_CHARACTERISTICS_SMPTE240 = 7,
    TRANSFER_CHARACTERISTICS_LINEAR = 8, TRANSFER_CHARACTERISTICS_LOG100 = 9,
    TRANSFER_CHARACTERISTICS_LOG100_SQRT10 = 10,
    TRANSFER_CHARACTERISTICS_IEC61966 = 11,
    TRANSFER_CHARACTERISTICS_BT1361 = 12, TRANSFER_CHARACTERISTICS_SRGB = 13,
    TRANSFER_CHARACTERISTICS_BT2020_10BIT = 14,
    TRANSFER_CHARACTERISTICS_BT2020_12BIT = 15,
    TRANSFER_CHARACTERISTICS_PQ = 16, TRANSFER_CHARACTERISTICS_SMPTE428 = 17,
    TRANSFER_CHARACTERISTICS_HLG = 18, TRANSFER_CHARACTERISTICS_CUSTOM = 31
type
  enum_SDL_MatrixCoefficients_1157628636* {.size: sizeof(cuint).} = enum
    MATRIX_COEFFICIENTS_IDENTITY = 0, MATRIX_COEFFICIENTS_BT709 = 1,
    MATRIX_COEFFICIENTS_UNSPECIFIED = 2, MATRIX_COEFFICIENTS_FCC = 4,
    MATRIX_COEFFICIENTS_BT470BG = 5, MATRIX_COEFFICIENTS_BT601 = 6,
    MATRIX_COEFFICIENTS_SMPTE240 = 7, MATRIX_COEFFICIENTS_YCGCO = 8,
    MATRIX_COEFFICIENTS_BT2020_NCL = 9, MATRIX_COEFFICIENTS_BT2020_CL = 10,
    MATRIX_COEFFICIENTS_SMPTE2085 = 11,
    MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL = 12,
    MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL = 13, MATRIX_COEFFICIENTS_ICTCP = 14,
    MATRIX_COEFFICIENTS_CUSTOM = 31
type
  enum_SDL_ChromaLocation_1157628640* {.size: sizeof(cuint).} = enum
    CHROMA_LOCATION_NONE = 0, CHROMA_LOCATION_LEFT = 1,
    CHROMA_LOCATION_CENTER = 2, CHROMA_LOCATION_TOPLEFT = 3
type
  enum_SDL_Colorspace_1157628644* {.size: sizeof(cuint).} = enum
    COLORSPACE_UNKNOWN = 0, COLORSPACE_SRGB_LINEAR = 301991168,
    COLORSPACE_SRGB = 301991328, COLORSPACE_HDR10 = 301999616,
    COLORSPACE_BT709_LIMITED = 554697761, COLORSPACE_BT601_LIMITED = 554703046,
    COLORSPACE_BT2020_LIMITED = 554706441, COLORSPACE_JPEG = 570426566,
    COLORSPACE_BT709_FULL = 571474977, COLORSPACE_BT601_FULL = 571480262,
    COLORSPACE_BT2020_FULL = 571483657
when not declared(COLORSPACE_RGB_DEFAULT):
  const
    COLORSPACE_RGB_DEFAULT* = enum_SDL_Colorspace_1157628644.COLORSPACE_SRGB
else:
  static :
    hint("Declaration of " & "COLORSPACE_RGB_DEFAULT" &
        " already exists, not redeclaring")
when not declared(COLORSPACE_YUV_DEFAULT):
  const
    COLORSPACE_YUV_DEFAULT* = enum_SDL_Colorspace_1157628644.COLORSPACE_JPEG
else:
  static :
    hint("Declaration of " & "COLORSPACE_YUV_DEFAULT" &
        " already exists, not redeclaring")
type
  enum_SDL_ScaleMode_1157628682* {.size: sizeof(cuint).} = enum
    SCALEMODE_NEAREST_enumval = 0, SCALEMODE_LINEAR_enumval = 1
type
  enum_SDL_FlipMode_1157628686* {.size: sizeof(cuint).} = enum
    FLIP_NONE = 0, FLIP_HORIZONTAL = 1, FLIP_VERTICAL = 2
type
  enum_SDL_CameraPosition_1157628702* {.size: sizeof(cuint).} = enum
    CAMERA_POSITION_UNKNOWN = 0, CAMERA_POSITION_FRONT_FACING = 1,
    CAMERA_POSITION_BACK_FACING = 2
type
  enum_SDL_SystemTheme_1157628714* {.size: sizeof(cuint).} = enum
    SYSTEM_THEME_UNKNOWN = 0, SYSTEM_THEME_LIGHT = 1, SYSTEM_THEME_DARK = 2
type
  enum_SDL_DisplayOrientation_1157628724* {.size: sizeof(cuint).} = enum
    ORIENTATION_UNKNOWN = 0, ORIENTATION_LANDSCAPE = 1,
    ORIENTATION_LANDSCAPE_FLIPPED = 2, ORIENTATION_PORTRAIT = 3,
    ORIENTATION_PORTRAIT_FLIPPED = 4
type
  enum_SDL_FlashOperation_1157628732* {.size: sizeof(cuint).} = enum
    FLASH_CANCEL = 0, FLASH_BRIEFLY = 1, FLASH_UNTIL_FOCUSED = 2
type
  enum_SDL_GLAttr_1157628754* {.size: sizeof(cuint).} = enum
    GL_RED_SIZE = 0, GL_GREEN_SIZE = 1, GL_BLUE_SIZE = 2, GL_ALPHA_SIZE = 3,
    GL_BUFFER_SIZE = 4, GL_DOUBLEBUFFER = 5, GL_DEPTH_SIZE = 6,
    GL_STENCIL_SIZE = 7, GL_ACCUM_RED_SIZE = 8, GL_ACCUM_GREEN_SIZE = 9,
    GL_ACCUM_BLUE_SIZE = 10, GL_ACCUM_ALPHA_SIZE = 11, GL_STEREO = 12,
    GL_MULTISAMPLEBUFFERS = 13, GL_MULTISAMPLESAMPLES = 14,
    GL_ACCELERATED_VISUAL = 15, GL_RETAINED_BACKING = 16,
    GL_CONTEXT_MAJOR_VERSION = 17, GL_CONTEXT_MINOR_VERSION = 18,
    GL_CONTEXT_FLAGS = 19, GL_CONTEXT_PROFILE_MASK = 20,
    GL_SHARE_WITH_CURRENT_CONTEXT = 21, GL_FRAMEBUFFER_SRGB_CAPABLE = 22,
    GL_CONTEXT_RELEASE_BEHAVIOR = 23,
    GL_CONTEXT_RESET_NOTIFICATION_enumval = 24, GL_CONTEXT_NO_ERROR = 25,
    GL_FLOATBUFFERS = 26, GL_EGL_PLATFORM = 27
type
  enum_SDL_HitTestResult_1157628766* {.size: sizeof(cuint).} = enum
    HITTEST_NORMAL = 0, HITTEST_DRAGGABLE = 1, HITTEST_RESIZE_TOPLEFT = 2,
    HITTEST_RESIZE_TOP = 3, HITTEST_RESIZE_TOPRIGHT = 4,
    HITTEST_RESIZE_RIGHT = 5, HITTEST_RESIZE_BOTTOMRIGHT = 6,
    HITTEST_RESIZE_BOTTOM = 7, HITTEST_RESIZE_BOTTOMLEFT = 8,
    HITTEST_RESIZE_LEFT = 9
type
  enum_SDL_FileDialogType_1157628778* {.size: sizeof(cuint).} = enum
    FILEDIALOG_OPENFILE = 0, FILEDIALOG_SAVEFILE = 1, FILEDIALOG_OPENFOLDER = 2
type
  enum_SDL_PowerState_1157628786* {.size: sizeof(cint).} = enum
    POWERSTATE_ERROR = -1, POWERSTATE_UNKNOWN = 0, POWERSTATE_ON_BATTERY = 1,
    POWERSTATE_NO_BATTERY = 2, POWERSTATE_CHARGING = 3, POWERSTATE_CHARGED = 4
type
  enum_SDL_SensorType_1157628794* {.size: sizeof(cint).} = enum
    SENSOR_INVALID = -1, SENSOR_UNKNOWN = 0, SENSOR_ACCEL = 1, SENSOR_GYRO = 2,
    SENSOR_ACCEL_L = 3, SENSOR_GYRO_L = 4, SENSOR_ACCEL_R = 5, SENSOR_GYRO_R = 6
type
  enum_SDL_JoystickType_1157628802* {.size: sizeof(cuint).} = enum
    JOYSTICK_TYPE_UNKNOWN = 0, JOYSTICK_TYPE_GAMEPAD = 1,
    JOYSTICK_TYPE_WHEEL = 2, JOYSTICK_TYPE_ARCADE_STICK = 3,
    JOYSTICK_TYPE_FLIGHT_STICK = 4, JOYSTICK_TYPE_DANCE_PAD = 5,
    JOYSTICK_TYPE_GUITAR = 6, JOYSTICK_TYPE_DRUM_KIT = 7,
    JOYSTICK_TYPE_ARCADE_PAD = 8, JOYSTICK_TYPE_THROTTLE = 9,
    JOYSTICK_TYPE_COUNT = 10
type
  enum_SDL_JoystickConnectionState_1157628806* {.size: sizeof(cint).} = enum
    JOYSTICK_CONNECTION_INVALID = -1, JOYSTICK_CONNECTION_UNKNOWN = 0,
    JOYSTICK_CONNECTION_WIRED = 1, JOYSTICK_CONNECTION_WIRELESS = 2
type
  enum_SDL_GamepadType_1157628824* {.size: sizeof(cuint).} = enum
    GAMEPAD_TYPE_UNKNOWN = 0, GAMEPAD_TYPE_STANDARD = 1,
    GAMEPAD_TYPE_XBOX360 = 2, GAMEPAD_TYPE_XBOXONE = 3, GAMEPAD_TYPE_PS3 = 4,
    GAMEPAD_TYPE_PS4 = 5, GAMEPAD_TYPE_PS5 = 6,
    GAMEPAD_TYPE_NINTENDO_SWITCH_PRO = 7,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT = 8,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT = 9,
    GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR = 10, GAMEPAD_TYPE_COUNT = 11
type
  enum_SDL_GamepadButton_1157628828* {.size: sizeof(cint).} = enum
    GAMEPAD_BUTTON_INVALID = -1, GAMEPAD_BUTTON_SOUTH = 0,
    GAMEPAD_BUTTON_EAST = 1, GAMEPAD_BUTTON_WEST = 2, GAMEPAD_BUTTON_NORTH = 3,
    GAMEPAD_BUTTON_BACK = 4, GAMEPAD_BUTTON_GUIDE = 5, GAMEPAD_BUTTON_START = 6,
    GAMEPAD_BUTTON_LEFT_STICK = 7, GAMEPAD_BUTTON_RIGHT_STICK = 8,
    GAMEPAD_BUTTON_LEFT_SHOULDER = 9, GAMEPAD_BUTTON_RIGHT_SHOULDER = 10,
    GAMEPAD_BUTTON_DPAD_UP = 11, GAMEPAD_BUTTON_DPAD_DOWN = 12,
    GAMEPAD_BUTTON_DPAD_LEFT = 13, GAMEPAD_BUTTON_DPAD_RIGHT = 14,
    GAMEPAD_BUTTON_MISC1 = 15, GAMEPAD_BUTTON_RIGHT_PADDLE1 = 16,
    GAMEPAD_BUTTON_LEFT_PADDLE1 = 17, GAMEPAD_BUTTON_RIGHT_PADDLE2 = 18,
    GAMEPAD_BUTTON_LEFT_PADDLE2 = 19, GAMEPAD_BUTTON_TOUCHPAD = 20,
    GAMEPAD_BUTTON_MISC2 = 21, GAMEPAD_BUTTON_MISC3 = 22,
    GAMEPAD_BUTTON_MISC4 = 23, GAMEPAD_BUTTON_MISC5 = 24,
    GAMEPAD_BUTTON_MISC6 = 25, GAMEPAD_BUTTON_COUNT = 26
type
  enum_SDL_GamepadButtonLabel_1157628832* {.size: sizeof(cuint).} = enum
    GAMEPAD_BUTTON_LABEL_UNKNOWN = 0, GAMEPAD_BUTTON_LABEL_A = 1,
    GAMEPAD_BUTTON_LABEL_B = 2, GAMEPAD_BUTTON_LABEL_X = 3,
    GAMEPAD_BUTTON_LABEL_Y = 4, GAMEPAD_BUTTON_LABEL_CROSS = 5,
    GAMEPAD_BUTTON_LABEL_CIRCLE = 6, GAMEPAD_BUTTON_LABEL_SQUARE = 7,
    GAMEPAD_BUTTON_LABEL_TRIANGLE = 8
type
  enum_SDL_GamepadAxis_1157628836* {.size: sizeof(cint).} = enum
    GAMEPAD_AXIS_INVALID = -1, GAMEPAD_AXIS_LEFTX = 0, GAMEPAD_AXIS_LEFTY = 1,
    GAMEPAD_AXIS_RIGHTX = 2, GAMEPAD_AXIS_RIGHTY = 3,
    GAMEPAD_AXIS_LEFT_TRIGGER = 4, GAMEPAD_AXIS_RIGHT_TRIGGER = 5,
    GAMEPAD_AXIS_COUNT = 6
type
  enum_SDL_GamepadBindingType_1157628840* {.size: sizeof(cuint).} = enum
    GAMEPAD_BINDTYPE_NONE = 0, GAMEPAD_BINDTYPE_BUTTON = 1,
    GAMEPAD_BINDTYPE_AXIS = 2, GAMEPAD_BINDTYPE_HAT = 3
type
  enum_SDL_Scancode_1157628848* {.size: sizeof(cuint).} = enum
    SCANCODE_UNKNOWN = 0, SCANCODE_A = 4, SCANCODE_B = 5, SCANCODE_C = 6,
    SCANCODE_D = 7, SCANCODE_E = 8, SCANCODE_F = 9, SCANCODE_G = 10,
    SCANCODE_H = 11, SCANCODE_I = 12, SCANCODE_J = 13, SCANCODE_K = 14,
    SCANCODE_L = 15, SCANCODE_M = 16, SCANCODE_N = 17, SCANCODE_O = 18,
    SCANCODE_P = 19, SCANCODE_Q = 20, SCANCODE_R = 21, SCANCODE_S = 22,
    SCANCODE_T = 23, SCANCODE_U = 24, SCANCODE_V = 25, SCANCODE_W = 26,
    SCANCODE_X = 27, SCANCODE_Y = 28, SCANCODE_Z = 29, SCANCODE_1 = 30,
    SCANCODE_2 = 31, SCANCODE_3 = 32, SCANCODE_4 = 33, SCANCODE_5 = 34,
    SCANCODE_6 = 35, SCANCODE_7 = 36, SCANCODE_8 = 37, SCANCODE_9 = 38,
    SCANCODE_0 = 39, SCANCODE_RETURN = 40, SCANCODE_ESCAPE = 41,
    SCANCODE_BACKSPACE = 42, SCANCODE_TAB = 43, SCANCODE_SPACE = 44,
    SCANCODE_MINUS = 45, SCANCODE_EQUALS = 46, SCANCODE_LEFTBRACKET = 47,
    SCANCODE_RIGHTBRACKET = 48, SCANCODE_BACKSLASH = 49,
    SCANCODE_NONUSHASH = 50, SCANCODE_SEMICOLON = 51, SCANCODE_APOSTROPHE = 52,
    SCANCODE_GRAVE = 53, SCANCODE_COMMA = 54, SCANCODE_PERIOD = 55,
    SCANCODE_SLASH = 56, SCANCODE_CAPSLOCK = 57, SCANCODE_F1 = 58,
    SCANCODE_F2 = 59, SCANCODE_F3 = 60, SCANCODE_F4 = 61, SCANCODE_F5 = 62,
    SCANCODE_F6 = 63, SCANCODE_F7 = 64, SCANCODE_F8 = 65, SCANCODE_F9 = 66,
    SCANCODE_F10 = 67, SCANCODE_F11 = 68, SCANCODE_F12 = 69,
    SCANCODE_PRINTSCREEN = 70, SCANCODE_SCROLLLOCK = 71, SCANCODE_PAUSE = 72,
    SCANCODE_INSERT = 73, SCANCODE_HOME = 74, SCANCODE_PAGEUP = 75,
    SCANCODE_DELETE = 76, SCANCODE_END = 77, SCANCODE_PAGEDOWN = 78,
    SCANCODE_RIGHT = 79, SCANCODE_LEFT = 80, SCANCODE_DOWN = 81,
    SCANCODE_UP = 82, SCANCODE_NUMLOCKCLEAR = 83, SCANCODE_KP_DIVIDE = 84,
    SCANCODE_KP_MULTIPLY = 85, SCANCODE_KP_MINUS = 86, SCANCODE_KP_PLUS = 87,
    SCANCODE_KP_ENTER = 88, SCANCODE_KP_1 = 89, SCANCODE_KP_2 = 90,
    SCANCODE_KP_3 = 91, SCANCODE_KP_4 = 92, SCANCODE_KP_5 = 93,
    SCANCODE_KP_6 = 94, SCANCODE_KP_7 = 95, SCANCODE_KP_8 = 96,
    SCANCODE_KP_9 = 97, SCANCODE_KP_0 = 98, SCANCODE_KP_PERIOD = 99,
    SCANCODE_NONUSBACKSLASH = 100, SCANCODE_APPLICATION = 101,
    SCANCODE_POWER = 102, SCANCODE_KP_EQUALS = 103, SCANCODE_F13 = 104,
    SCANCODE_F14 = 105, SCANCODE_F15 = 106, SCANCODE_F16 = 107,
    SCANCODE_F17 = 108, SCANCODE_F18 = 109, SCANCODE_F19 = 110,
    SCANCODE_F20 = 111, SCANCODE_F21 = 112, SCANCODE_F22 = 113,
    SCANCODE_F23 = 114, SCANCODE_F24 = 115, SCANCODE_EXECUTE = 116,
    SCANCODE_HELP = 117, SCANCODE_MENU = 118, SCANCODE_SELECT = 119,
    SCANCODE_STOP = 120, SCANCODE_AGAIN = 121, SCANCODE_UNDO = 122,
    SCANCODE_CUT = 123, SCANCODE_COPY = 124, SCANCODE_PASTE = 125,
    SCANCODE_FIND = 126, SCANCODE_MUTE = 127, SCANCODE_VOLUMEUP = 128,
    SCANCODE_VOLUMEDOWN = 129, SCANCODE_KP_COMMA = 133,
    SCANCODE_KP_EQUALSAS400 = 134, SCANCODE_INTERNATIONAL1 = 135,
    SCANCODE_INTERNATIONAL2 = 136, SCANCODE_INTERNATIONAL3 = 137,
    SCANCODE_INTERNATIONAL4 = 138, SCANCODE_INTERNATIONAL5 = 139,
    SCANCODE_INTERNATIONAL6 = 140, SCANCODE_INTERNATIONAL7 = 141,
    SCANCODE_INTERNATIONAL8 = 142, SCANCODE_INTERNATIONAL9 = 143,
    SCANCODE_LANG1 = 144, SCANCODE_LANG2 = 145, SCANCODE_LANG3 = 146,
    SCANCODE_LANG4 = 147, SCANCODE_LANG5 = 148, SCANCODE_LANG6 = 149,
    SCANCODE_LANG7 = 150, SCANCODE_LANG8 = 151, SCANCODE_LANG9 = 152,
    SCANCODE_ALTERASE = 153, SCANCODE_SYSREQ = 154, SCANCODE_CANCEL = 155,
    SCANCODE_CLEAR = 156, SCANCODE_PRIOR = 157, SCANCODE_RETURN2 = 158,
    SCANCODE_SEPARATOR = 159, SCANCODE_OUT = 160, SCANCODE_OPER = 161,
    SCANCODE_CLEARAGAIN = 162, SCANCODE_CRSEL = 163, SCANCODE_EXSEL = 164,
    SCANCODE_KP_00 = 176, SCANCODE_KP_000 = 177,
    SCANCODE_THOUSANDSSEPARATOR = 178, SCANCODE_DECIMALSEPARATOR = 179,
    SCANCODE_CURRENCYUNIT = 180, SCANCODE_CURRENCYSUBUNIT = 181,
    SCANCODE_KP_LEFTPAREN = 182, SCANCODE_KP_RIGHTPAREN = 183,
    SCANCODE_KP_LEFTBRACE = 184, SCANCODE_KP_RIGHTBRACE = 185,
    SCANCODE_KP_TAB = 186, SCANCODE_KP_BACKSPACE = 187, SCANCODE_KP_A = 188,
    SCANCODE_KP_B = 189, SCANCODE_KP_C = 190, SCANCODE_KP_D = 191,
    SCANCODE_KP_E = 192, SCANCODE_KP_F = 193, SCANCODE_KP_XOR = 194,
    SCANCODE_KP_POWER = 195, SCANCODE_KP_PERCENT = 196, SCANCODE_KP_LESS = 197,
    SCANCODE_KP_GREATER = 198, SCANCODE_KP_AMPERSAND = 199,
    SCANCODE_KP_DBLAMPERSAND = 200, SCANCODE_KP_VERTICALBAR = 201,
    SCANCODE_KP_DBLVERTICALBAR = 202, SCANCODE_KP_COLON = 203,
    SCANCODE_KP_HASH = 204, SCANCODE_KP_SPACE = 205, SCANCODE_KP_AT = 206,
    SCANCODE_KP_EXCLAM = 207, SCANCODE_KP_MEMSTORE = 208,
    SCANCODE_KP_MEMRECALL = 209, SCANCODE_KP_MEMCLEAR = 210,
    SCANCODE_KP_MEMADD = 211, SCANCODE_KP_MEMSUBTRACT = 212,
    SCANCODE_KP_MEMMULTIPLY = 213, SCANCODE_KP_MEMDIVIDE = 214,
    SCANCODE_KP_PLUSMINUS = 215, SCANCODE_KP_CLEAR = 216,
    SCANCODE_KP_CLEARENTRY = 217, SCANCODE_KP_BINARY = 218,
    SCANCODE_KP_OCTAL = 219, SCANCODE_KP_DECIMAL = 220,
    SCANCODE_KP_HEXADECIMAL = 221, SCANCODE_LCTRL = 224, SCANCODE_LSHIFT = 225,
    SCANCODE_LALT = 226, SCANCODE_LGUI = 227, SCANCODE_RCTRL = 228,
    SCANCODE_RSHIFT = 229, SCANCODE_RALT = 230, SCANCODE_RGUI = 231,
    SCANCODE_MODE = 257, SCANCODE_SLEEP = 258, SCANCODE_WAKE = 259,
    SCANCODE_CHANNEL_INCREMENT = 260, SCANCODE_CHANNEL_DECREMENT = 261,
    SCANCODE_MEDIA_PLAY = 262, SCANCODE_MEDIA_PAUSE = 263,
    SCANCODE_MEDIA_RECORD = 264, SCANCODE_MEDIA_FAST_FORWARD = 265,
    SCANCODE_MEDIA_REWIND = 266, SCANCODE_MEDIA_NEXT_TRACK = 267,
    SCANCODE_MEDIA_PREVIOUS_TRACK = 268, SCANCODE_MEDIA_STOP = 269,
    SCANCODE_MEDIA_EJECT = 270, SCANCODE_MEDIA_PLAY_PAUSE = 271,
    SCANCODE_MEDIA_SELECT_enumval = 272, SCANCODE_AC_NEW = 273,
    SCANCODE_AC_OPEN = 274, SCANCODE_AC_CLOSE = 275, SCANCODE_AC_EXIT = 276,
    SCANCODE_AC_SAVE = 277, SCANCODE_AC_PRINT = 278,
    SCANCODE_AC_PROPERTIES = 279, SCANCODE_AC_SEARCH = 280,
    SCANCODE_AC_HOME = 281, SCANCODE_AC_BACK = 282, SCANCODE_AC_FORWARD = 283,
    SCANCODE_AC_STOP = 284, SCANCODE_AC_REFRESH = 285,
    SCANCODE_AC_BOOKMARKS = 286, SCANCODE_SOFTLEFT = 287,
    SCANCODE_SOFTRIGHT = 288, SCANCODE_CALL = 289, SCANCODE_ENDCALL = 290,
    SCANCODE_RESERVED = 400, SCANCODE_COUNT = 512
type
  enum_SDL_TextInputType_1157628858* {.size: sizeof(cuint).} = enum
    TEXTINPUT_TYPE_TEXT = 0, TEXTINPUT_TYPE_TEXT_NAME = 1,
    TEXTINPUT_TYPE_TEXT_EMAIL = 2, TEXTINPUT_TYPE_TEXT_USERNAME = 3,
    TEXTINPUT_TYPE_TEXT_PASSWORD_HIDDEN = 4,
    TEXTINPUT_TYPE_TEXT_PASSWORD_VISIBLE = 5, TEXTINPUT_TYPE_NUMBER = 6,
    TEXTINPUT_TYPE_NUMBER_PASSWORD_HIDDEN = 7,
    TEXTINPUT_TYPE_NUMBER_PASSWORD_VISIBLE = 8
type
  enum_SDL_Capitalization_1157628862* {.size: sizeof(cuint).} = enum
    CAPITALIZE_NONE = 0, CAPITALIZE_SENTENCES = 1, CAPITALIZE_WORDS = 2,
    CAPITALIZE_LETTERS = 3
type
  enum_SDL_SystemCursor_1157628870* {.size: sizeof(cuint).} = enum
    SYSTEM_CURSOR_DEFAULT = 0, SYSTEM_CURSOR_TEXT = 1, SYSTEM_CURSOR_WAIT = 2,
    SYSTEM_CURSOR_CROSSHAIR = 3, SYSTEM_CURSOR_PROGRESS = 4,
    SYSTEM_CURSOR_NWSE_RESIZE = 5, SYSTEM_CURSOR_NESW_RESIZE = 6,
    SYSTEM_CURSOR_EW_RESIZE = 7, SYSTEM_CURSOR_NS_RESIZE = 8,
    SYSTEM_CURSOR_MOVE = 9, SYSTEM_CURSOR_NOT_ALLOWED = 10,
    SYSTEM_CURSOR_POINTER = 11, SYSTEM_CURSOR_NW_RESIZE = 12,
    SYSTEM_CURSOR_N_RESIZE = 13, SYSTEM_CURSOR_NE_RESIZE = 14,
    SYSTEM_CURSOR_E_RESIZE = 15, SYSTEM_CURSOR_SE_RESIZE = 16,
    SYSTEM_CURSOR_S_RESIZE = 17, SYSTEM_CURSOR_SW_RESIZE = 18,
    SYSTEM_CURSOR_W_RESIZE = 19, SYSTEM_CURSOR_COUNT = 20
type
  enum_SDL_MouseWheelDirection_1157628874* {.size: sizeof(cuint).} = enum
    MOUSEWHEEL_NORMAL = 0, MOUSEWHEEL_FLIPPED = 1
type
  enum_SDL_PenAxis_1157628884* {.size: sizeof(cuint).} = enum
    PEN_AXIS_PRESSURE = 0, PEN_AXIS_XTILT = 1, PEN_AXIS_YTILT = 2,
    PEN_AXIS_DISTANCE = 3, PEN_AXIS_ROTATION = 4, PEN_AXIS_SLIDER = 5,
    PEN_AXIS_TANGENTIAL_PRESSURE = 6, PEN_AXIS_COUNT = 7
type
  enum_SDL_TouchDeviceType_1157628892* {.size: sizeof(cint).} = enum
    TOUCH_DEVICE_INVALID = -1, TOUCH_DEVICE_DIRECT = 0,
    TOUCH_DEVICE_INDIRECT_ABSOLUTE = 1, TOUCH_DEVICE_INDIRECT_RELATIVE = 2
type
  enum_SDL_EventType_1157628900* {.size: sizeof(cuint).} = enum
    EVENT_FIRST = 0, EVENT_QUIT = 256, EVENT_TERMINATING = 257,
    EVENT_LOW_MEMORY = 258, EVENT_WILL_ENTER_BACKGROUND = 259,
    EVENT_DID_ENTER_BACKGROUND = 260, EVENT_WILL_ENTER_FOREGROUND = 261,
    EVENT_DID_ENTER_FOREGROUND = 262, EVENT_LOCALE_CHANGED = 263,
    EVENT_SYSTEM_THEME_CHANGED = 264, EVENT_DISPLAY_ORIENTATION = 337,
    EVENT_DISPLAY_ADDED = 338, EVENT_DISPLAY_REMOVED = 339,
    EVENT_DISPLAY_MOVED = 340, EVENT_DISPLAY_DESKTOP_MODE_CHANGED = 341,
    EVENT_DISPLAY_CURRENT_MODE_CHANGED = 342,
    EVENT_DISPLAY_CONTENT_SCALE_CHANGED = 343, EVENT_WINDOW_SHOWN = 514,
    EVENT_WINDOW_HIDDEN = 515, EVENT_WINDOW_EXPOSED = 516,
    EVENT_WINDOW_MOVED = 517, EVENT_WINDOW_RESIZED = 518,
    EVENT_WINDOW_PIXEL_SIZE_CHANGED = 519,
    EVENT_WINDOW_METAL_VIEW_RESIZED = 520, EVENT_WINDOW_MINIMIZED = 521,
    EVENT_WINDOW_MAXIMIZED = 522, EVENT_WINDOW_RESTORED = 523,
    EVENT_WINDOW_MOUSE_ENTER = 524, EVENT_WINDOW_MOUSE_LEAVE = 525,
    EVENT_WINDOW_FOCUS_GAINED = 526, EVENT_WINDOW_FOCUS_LOST = 527,
    EVENT_WINDOW_CLOSE_REQUESTED = 528, EVENT_WINDOW_HIT_TEST = 529,
    EVENT_WINDOW_ICCPROF_CHANGED = 530, EVENT_WINDOW_DISPLAY_CHANGED = 531,
    EVENT_WINDOW_DISPLAY_SCALE_CHANGED = 532,
    EVENT_WINDOW_SAFE_AREA_CHANGED = 533, EVENT_WINDOW_OCCLUDED = 534,
    EVENT_WINDOW_ENTER_FULLSCREEN = 535, EVENT_WINDOW_LEAVE_FULLSCREEN = 536,
    EVENT_WINDOW_DESTROYED = 537, EVENT_WINDOW_HDR_STATE_CHANGED = 538,
    EVENT_KEY_DOWN = 768, EVENT_KEY_UP = 769, EVENT_TEXT_EDITING = 770,
    EVENT_TEXT_INPUT = 771, EVENT_KEYMAP_CHANGED = 772,
    EVENT_KEYBOARD_ADDED = 773, EVENT_KEYBOARD_REMOVED = 774,
    EVENT_TEXT_EDITING_CANDIDATES = 775, EVENT_MOUSE_MOTION = 1024,
    EVENT_MOUSE_BUTTON_DOWN = 1025, EVENT_MOUSE_BUTTON_UP = 1026,
    EVENT_MOUSE_WHEEL = 1027, EVENT_MOUSE_ADDED = 1028,
    EVENT_MOUSE_REMOVED = 1029, EVENT_JOYSTICK_AXIS_MOTION = 1536,
    EVENT_JOYSTICK_BALL_MOTION = 1537, EVENT_JOYSTICK_HAT_MOTION = 1538,
    EVENT_JOYSTICK_BUTTON_DOWN = 1539, EVENT_JOYSTICK_BUTTON_UP = 1540,
    EVENT_JOYSTICK_ADDED = 1541, EVENT_JOYSTICK_REMOVED = 1542,
    EVENT_JOYSTICK_BATTERY_UPDATED = 1543,
    EVENT_JOYSTICK_UPDATE_COMPLETE = 1544, EVENT_GAMEPAD_AXIS_MOTION = 1616,
    EVENT_GAMEPAD_BUTTON_DOWN = 1617, EVENT_GAMEPAD_BUTTON_UP = 1618,
    EVENT_GAMEPAD_ADDED = 1619, EVENT_GAMEPAD_REMOVED = 1620,
    EVENT_GAMEPAD_REMAPPED = 1621, EVENT_GAMEPAD_TOUCHPAD_DOWN = 1622,
    EVENT_GAMEPAD_TOUCHPAD_MOTION = 1623, EVENT_GAMEPAD_TOUCHPAD_UP = 1624,
    EVENT_GAMEPAD_SENSOR_UPDATE = 1625, EVENT_GAMEPAD_UPDATE_COMPLETE = 1626,
    EVENT_GAMEPAD_STEAM_HANDLE_UPDATED = 1627, EVENT_FINGER_DOWN = 1792,
    EVENT_FINGER_UP = 1793, EVENT_FINGER_MOTION = 1794,
    EVENT_CLIPBOARD_UPDATE = 2304, EVENT_DROP_FILE = 4096,
    EVENT_DROP_TEXT = 4097, EVENT_DROP_BEGIN = 4098, EVENT_DROP_COMPLETE = 4099,
    EVENT_DROP_POSITION = 4100, EVENT_AUDIO_DEVICE_ADDED = 4352,
    EVENT_AUDIO_DEVICE_REMOVED = 4353, EVENT_AUDIO_DEVICE_FORMAT_CHANGED = 4354,
    EVENT_SENSOR_UPDATE = 4608, EVENT_PEN_PROXIMITY_IN = 4864,
    EVENT_PEN_PROXIMITY_OUT = 4865, EVENT_PEN_DOWN = 4866, EVENT_PEN_UP = 4867,
    EVENT_PEN_BUTTON_DOWN = 4868, EVENT_PEN_BUTTON_UP = 4869,
    EVENT_PEN_MOTION = 4870, EVENT_PEN_AXIS = 4871,
    EVENT_CAMERA_DEVICE_ADDED = 5120, EVENT_CAMERA_DEVICE_REMOVED = 5121,
    EVENT_CAMERA_DEVICE_APPROVED = 5122, EVENT_CAMERA_DEVICE_DENIED = 5123,
    EVENT_RENDER_TARGETS_RESET = 8192, EVENT_RENDER_DEVICE_RESET = 8193,
    EVENT_RENDER_DEVICE_LOST = 8194, EVENT_PRIVATE0 = 16384,
    EVENT_PRIVATE1 = 16385, EVENT_PRIVATE2 = 16386, EVENT_PRIVATE3 = 16387,
    EVENT_POLL_SENTINEL = 32512, EVENT_USER = 32768, EVENT_LAST = 65535,
    EVENT_ENUM_PADDING = 2147483647
when not declared(EVENT_DISPLAY_FIRST):
  const
    EVENT_DISPLAY_FIRST* = enum_SDL_EventType_1157628900.EVENT_DISPLAY_ORIENTATION
else:
  static :
    hint("Declaration of " & "EVENT_DISPLAY_FIRST" &
        " already exists, not redeclaring")
when not declared(EVENT_DISPLAY_LAST):
  const
    EVENT_DISPLAY_LAST* = enum_SDL_EventType_1157628900.EVENT_DISPLAY_CONTENT_SCALE_CHANGED
else:
  static :
    hint("Declaration of " & "EVENT_DISPLAY_LAST" &
        " already exists, not redeclaring")
when not declared(EVENT_WINDOW_FIRST):
  const
    EVENT_WINDOW_FIRST* = enum_SDL_EventType_1157628900.EVENT_WINDOW_SHOWN
else:
  static :
    hint("Declaration of " & "EVENT_WINDOW_FIRST" &
        " already exists, not redeclaring")
when not declared(EVENT_WINDOW_LAST):
  const
    EVENT_WINDOW_LAST* = enum_SDL_EventType_1157628900.EVENT_WINDOW_HDR_STATE_CHANGED
else:
  static :
    hint("Declaration of " & "EVENT_WINDOW_LAST" &
        " already exists, not redeclaring")
type
  enum_SDL_EventAction_1157629056* {.size: sizeof(cuint).} = enum
    ADDEVENT = 0, PEEKEVENT = 1, GETEVENT = 2
type
  enum_SDL_Folder_1157629062* {.size: sizeof(cuint).} = enum
    FOLDER_HOME = 0, FOLDER_DESKTOP = 1, FOLDER_DOCUMENTS = 2,
    FOLDER_DOWNLOADS = 3, FOLDER_MUSIC = 4, FOLDER_PICTURES = 5,
    FOLDER_PUBLICSHARE = 6, FOLDER_SAVEDGAMES = 7, FOLDER_SCREENSHOTS = 8,
    FOLDER_TEMPLATES = 9, FOLDER_VIDEOS = 10, FOLDER_COUNT = 11
type
  enum_SDL_PathType_1157629066* {.size: sizeof(cuint).} = enum
    PATHTYPE_NONE = 0, PATHTYPE_FILE = 1, PATHTYPE_DIRECTORY = 2,
    PATHTYPE_OTHER = 3
type
  enum_SDL_EnumerationResult_1157629076* {.size: sizeof(cuint).} = enum
    ENUM_CONTINUE = 0, ENUM_SUCCESS = 1, ENUM_FAILURE = 2
type
  enum_SDL_GPUPrimitiveType_1157629108* {.size: sizeof(cuint).} = enum
    GPU_PRIMITIVETYPE_TRIANGLELIST = 0, GPU_PRIMITIVETYPE_TRIANGLESTRIP = 1,
    GPU_PRIMITIVETYPE_LINELIST = 2, GPU_PRIMITIVETYPE_LINESTRIP = 3,
    GPU_PRIMITIVETYPE_POINTLIST = 4
type
  enum_SDL_GPULoadOp_1157629112* {.size: sizeof(cuint).} = enum
    GPU_LOADOP_LOAD = 0, GPU_LOADOP_CLEAR = 1, GPU_LOADOP_DONT_CARE = 2
type
  enum_SDL_GPUStoreOp_1157629116* {.size: sizeof(cuint).} = enum
    GPU_STOREOP_STORE = 0, GPU_STOREOP_DONT_CARE = 1, GPU_STOREOP_RESOLVE = 2,
    GPU_STOREOP_RESOLVE_AND_STORE = 3
type
  enum_SDL_GPUIndexElementSize_1157629120* {.size: sizeof(cuint).} = enum
    GPU_INDEXELEMENTSIZE_16BIT = 0, GPU_INDEXELEMENTSIZE_32BIT = 1
type
  enum_SDL_GPUTextureFormat_1157629124* {.size: sizeof(cuint).} = enum
    GPU_TEXTUREFORMAT_INVALID = 0, GPU_TEXTUREFORMAT_A8_UNORM = 1,
    GPU_TEXTUREFORMAT_R8_UNORM = 2, GPU_TEXTUREFORMAT_R8G8_UNORM = 3,
    GPU_TEXTUREFORMAT_R8G8B8A8_UNORM = 4, GPU_TEXTUREFORMAT_R16_UNORM = 5,
    GPU_TEXTUREFORMAT_R16G16_UNORM = 6,
    GPU_TEXTUREFORMAT_R16G16B16A16_UNORM = 7,
    GPU_TEXTUREFORMAT_R10G10B10A2_UNORM = 8, GPU_TEXTUREFORMAT_B5G6R5_UNORM = 9,
    GPU_TEXTUREFORMAT_B5G5R5A1_UNORM = 10,
    GPU_TEXTUREFORMAT_B4G4R4A4_UNORM = 11,
    GPU_TEXTUREFORMAT_B8G8R8A8_UNORM = 12,
    GPU_TEXTUREFORMAT_BC1_RGBA_UNORM = 13,
    GPU_TEXTUREFORMAT_BC2_RGBA_UNORM = 14,
    GPU_TEXTUREFORMAT_BC3_RGBA_UNORM = 15, GPU_TEXTUREFORMAT_BC4_R_UNORM = 16,
    GPU_TEXTUREFORMAT_BC5_RG_UNORM = 17, GPU_TEXTUREFORMAT_BC7_RGBA_UNORM = 18,
    GPU_TEXTUREFORMAT_BC6H_RGB_FLOAT = 19,
    GPU_TEXTUREFORMAT_BC6H_RGB_UFLOAT = 20, GPU_TEXTUREFORMAT_R8_SNORM = 21,
    GPU_TEXTUREFORMAT_R8G8_SNORM = 22, GPU_TEXTUREFORMAT_R8G8B8A8_SNORM = 23,
    GPU_TEXTUREFORMAT_R16_SNORM = 24, GPU_TEXTUREFORMAT_R16G16_SNORM = 25,
    GPU_TEXTUREFORMAT_R16G16B16A16_SNORM = 26, GPU_TEXTUREFORMAT_R16_FLOAT = 27,
    GPU_TEXTUREFORMAT_R16G16_FLOAT = 28,
    GPU_TEXTUREFORMAT_R16G16B16A16_FLOAT = 29, GPU_TEXTUREFORMAT_R32_FLOAT = 30,
    GPU_TEXTUREFORMAT_R32G32_FLOAT = 31,
    GPU_TEXTUREFORMAT_R32G32B32A32_FLOAT = 32,
    GPU_TEXTUREFORMAT_R11G11B10_UFLOAT = 33, GPU_TEXTUREFORMAT_R8_UINT = 34,
    GPU_TEXTUREFORMAT_R8G8_UINT = 35, GPU_TEXTUREFORMAT_R8G8B8A8_UINT = 36,
    GPU_TEXTUREFORMAT_R16_UINT = 37, GPU_TEXTUREFORMAT_R16G16_UINT = 38,
    GPU_TEXTUREFORMAT_R16G16B16A16_UINT = 39, GPU_TEXTUREFORMAT_R32_UINT = 40,
    GPU_TEXTUREFORMAT_R32G32_UINT = 41,
    GPU_TEXTUREFORMAT_R32G32B32A32_UINT = 42, GPU_TEXTUREFORMAT_R8_INT = 43,
    GPU_TEXTUREFORMAT_R8G8_INT = 44, GPU_TEXTUREFORMAT_R8G8B8A8_INT = 45,
    GPU_TEXTUREFORMAT_R16_INT = 46, GPU_TEXTUREFORMAT_R16G16_INT = 47,
    GPU_TEXTUREFORMAT_R16G16B16A16_INT = 48, GPU_TEXTUREFORMAT_R32_INT = 49,
    GPU_TEXTUREFORMAT_R32G32_INT = 50, GPU_TEXTUREFORMAT_R32G32B32A32_INT = 51,
    GPU_TEXTUREFORMAT_R8G8B8A8_UNORM_SRGB = 52,
    GPU_TEXTUREFORMAT_B8G8R8A8_UNORM_SRGB = 53,
    GPU_TEXTUREFORMAT_BC1_RGBA_UNORM_SRGB = 54,
    GPU_TEXTUREFORMAT_BC2_RGBA_UNORM_SRGB = 55,
    GPU_TEXTUREFORMAT_BC3_RGBA_UNORM_SRGB = 56,
    GPU_TEXTUREFORMAT_BC7_RGBA_UNORM_SRGB = 57,
    GPU_TEXTUREFORMAT_D16_UNORM = 58, GPU_TEXTUREFORMAT_D24_UNORM = 59,
    GPU_TEXTUREFORMAT_D32_FLOAT = 60, GPU_TEXTUREFORMAT_D24_UNORM_S8_UINT = 61,
    GPU_TEXTUREFORMAT_D32_FLOAT_S8_UINT = 62,
    GPU_TEXTUREFORMAT_ASTC_4x4_UNORM = 63,
    GPU_TEXTUREFORMAT_ASTC_5x4_UNORM = 64,
    GPU_TEXTUREFORMAT_ASTC_5x5_UNORM = 65,
    GPU_TEXTUREFORMAT_ASTC_6x5_UNORM = 66,
    GPU_TEXTUREFORMAT_ASTC_6x6_UNORM = 67,
    GPU_TEXTUREFORMAT_ASTC_8x5_UNORM = 68,
    GPU_TEXTUREFORMAT_ASTC_8x6_UNORM = 69,
    GPU_TEXTUREFORMAT_ASTC_8x8_UNORM = 70,
    GPU_TEXTUREFORMAT_ASTC_10x5_UNORM = 71,
    GPU_TEXTUREFORMAT_ASTC_10x6_UNORM = 72,
    GPU_TEXTUREFORMAT_ASTC_10x8_UNORM = 73,
    GPU_TEXTUREFORMAT_ASTC_10x10_UNORM = 74,
    GPU_TEXTUREFORMAT_ASTC_12x10_UNORM = 75,
    GPU_TEXTUREFORMAT_ASTC_12x12_UNORM = 76,
    GPU_TEXTUREFORMAT_ASTC_4x4_UNORM_SRGB = 77,
    GPU_TEXTUREFORMAT_ASTC_5x4_UNORM_SRGB = 78,
    GPU_TEXTUREFORMAT_ASTC_5x5_UNORM_SRGB = 79,
    GPU_TEXTUREFORMAT_ASTC_6x5_UNORM_SRGB = 80,
    GPU_TEXTUREFORMAT_ASTC_6x6_UNORM_SRGB = 81,
    GPU_TEXTUREFORMAT_ASTC_8x5_UNORM_SRGB = 82,
    GPU_TEXTUREFORMAT_ASTC_8x6_UNORM_SRGB = 83,
    GPU_TEXTUREFORMAT_ASTC_8x8_UNORM_SRGB = 84,
    GPU_TEXTUREFORMAT_ASTC_10x5_UNORM_SRGB = 85,
    GPU_TEXTUREFORMAT_ASTC_10x6_UNORM_SRGB = 86,
    GPU_TEXTUREFORMAT_ASTC_10x8_UNORM_SRGB = 87,
    GPU_TEXTUREFORMAT_ASTC_10x10_UNORM_SRGB = 88,
    GPU_TEXTUREFORMAT_ASTC_12x10_UNORM_SRGB = 89,
    GPU_TEXTUREFORMAT_ASTC_12x12_UNORM_SRGB = 90,
    GPU_TEXTUREFORMAT_ASTC_4x4_FLOAT = 91,
    GPU_TEXTUREFORMAT_ASTC_5x4_FLOAT = 92,
    GPU_TEXTUREFORMAT_ASTC_5x5_FLOAT = 93,
    GPU_TEXTUREFORMAT_ASTC_6x5_FLOAT = 94,
    GPU_TEXTUREFORMAT_ASTC_6x6_FLOAT = 95,
    GPU_TEXTUREFORMAT_ASTC_8x5_FLOAT = 96,
    GPU_TEXTUREFORMAT_ASTC_8x6_FLOAT = 97,
    GPU_TEXTUREFORMAT_ASTC_8x8_FLOAT = 98,
    GPU_TEXTUREFORMAT_ASTC_10x5_FLOAT = 99,
    GPU_TEXTUREFORMAT_ASTC_10x6_FLOAT = 100,
    GPU_TEXTUREFORMAT_ASTC_10x8_FLOAT = 101,
    GPU_TEXTUREFORMAT_ASTC_10x10_FLOAT = 102,
    GPU_TEXTUREFORMAT_ASTC_12x10_FLOAT = 103,
    GPU_TEXTUREFORMAT_ASTC_12x12_FLOAT = 104
type
  enum_SDL_GPUTextureType_1157629130* {.size: sizeof(cuint).} = enum
    GPU_TEXTURETYPE_2D = 0, GPU_TEXTURETYPE_2D_ARRAY = 1,
    GPU_TEXTURETYPE_3D = 2, GPU_TEXTURETYPE_CUBE = 3,
    GPU_TEXTURETYPE_CUBE_ARRAY = 4
type
  enum_SDL_GPUSampleCount_1157629134* {.size: sizeof(cuint).} = enum
    GPU_SAMPLECOUNT_1 = 0, GPU_SAMPLECOUNT_2 = 1, GPU_SAMPLECOUNT_4 = 2,
    GPU_SAMPLECOUNT_8 = 3
type
  enum_SDL_GPUCubeMapFace_1157629138* {.size: sizeof(cuint).} = enum
    GPU_CUBEMAPFACE_POSITIVEX = 0, GPU_CUBEMAPFACE_NEGATIVEX = 1,
    GPU_CUBEMAPFACE_POSITIVEY = 2, GPU_CUBEMAPFACE_NEGATIVEY = 3,
    GPU_CUBEMAPFACE_POSITIVEZ = 4, GPU_CUBEMAPFACE_NEGATIVEZ = 5
type
  enum_SDL_GPUTransferBufferUsage_1157629144* {.size: sizeof(cuint).} = enum
    GPU_TRANSFERBUFFERUSAGE_UPLOAD = 0, GPU_TRANSFERBUFFERUSAGE_DOWNLOAD = 1
type
  enum_SDL_GPUShaderStage_1157629148* {.size: sizeof(cuint).} = enum
    GPU_SHADERSTAGE_VERTEX = 0, GPU_SHADERSTAGE_FRAGMENT = 1
type
  enum_SDL_GPUVertexElementFormat_1157629154* {.size: sizeof(cuint).} = enum
    GPU_VERTEXELEMENTFORMAT_INVALID = 0, GPU_VERTEXELEMENTFORMAT_INT = 1,
    GPU_VERTEXELEMENTFORMAT_INT2 = 2, GPU_VERTEXELEMENTFORMAT_INT3 = 3,
    GPU_VERTEXELEMENTFORMAT_INT4 = 4, GPU_VERTEXELEMENTFORMAT_UINT = 5,
    GPU_VERTEXELEMENTFORMAT_UINT2 = 6, GPU_VERTEXELEMENTFORMAT_UINT3 = 7,
    GPU_VERTEXELEMENTFORMAT_UINT4 = 8, GPU_VERTEXELEMENTFORMAT_FLOAT = 9,
    GPU_VERTEXELEMENTFORMAT_FLOAT2 = 10, GPU_VERTEXELEMENTFORMAT_FLOAT3 = 11,
    GPU_VERTEXELEMENTFORMAT_FLOAT4 = 12, GPU_VERTEXELEMENTFORMAT_BYTE2 = 13,
    GPU_VERTEXELEMENTFORMAT_BYTE4 = 14, GPU_VERTEXELEMENTFORMAT_UBYTE2 = 15,
    GPU_VERTEXELEMENTFORMAT_UBYTE4 = 16,
    GPU_VERTEXELEMENTFORMAT_BYTE2_NORM = 17,
    GPU_VERTEXELEMENTFORMAT_BYTE4_NORM = 18,
    GPU_VERTEXELEMENTFORMAT_UBYTE2_NORM = 19,
    GPU_VERTEXELEMENTFORMAT_UBYTE4_NORM = 20,
    GPU_VERTEXELEMENTFORMAT_SHORT2 = 21, GPU_VERTEXELEMENTFORMAT_SHORT4 = 22,
    GPU_VERTEXELEMENTFORMAT_USHORT2 = 23, GPU_VERTEXELEMENTFORMAT_USHORT4 = 24,
    GPU_VERTEXELEMENTFORMAT_SHORT2_NORM = 25,
    GPU_VERTEXELEMENTFORMAT_SHORT4_NORM = 26,
    GPU_VERTEXELEMENTFORMAT_USHORT2_NORM = 27,
    GPU_VERTEXELEMENTFORMAT_USHORT4_NORM = 28,
    GPU_VERTEXELEMENTFORMAT_HALF2 = 29, GPU_VERTEXELEMENTFORMAT_HALF4 = 30
type
  enum_SDL_GPUVertexInputRate_1157629158* {.size: sizeof(cuint).} = enum
    GPU_VERTEXINPUTRATE_VERTEX = 0, GPU_VERTEXINPUTRATE_INSTANCE = 1
type
  enum_SDL_GPUFillMode_1157629162* {.size: sizeof(cuint).} = enum
    GPU_FILLMODE_FILL = 0, GPU_FILLMODE_LINE = 1
type
  enum_SDL_GPUCullMode_1157629166* {.size: sizeof(cuint).} = enum
    GPU_CULLMODE_NONE = 0, GPU_CULLMODE_FRONT = 1, GPU_CULLMODE_BACK = 2
type
  enum_SDL_GPUFrontFace_1157629170* {.size: sizeof(cuint).} = enum
    GPU_FRONTFACE_COUNTER_CLOCKWISE = 0, GPU_FRONTFACE_CLOCKWISE = 1
type
  enum_SDL_GPUCompareOp_1157629174* {.size: sizeof(cuint).} = enum
    GPU_COMPAREOP_INVALID = 0, GPU_COMPAREOP_NEVER = 1, GPU_COMPAREOP_LESS = 2,
    GPU_COMPAREOP_EQUAL = 3, GPU_COMPAREOP_LESS_OR_EQUAL = 4,
    GPU_COMPAREOP_GREATER = 5, GPU_COMPAREOP_NOT_EQUAL = 6,
    GPU_COMPAREOP_GREATER_OR_EQUAL = 7, GPU_COMPAREOP_ALWAYS = 8
type
  enum_SDL_GPUStencilOp_1157629178* {.size: sizeof(cuint).} = enum
    GPU_STENCILOP_INVALID = 0, GPU_STENCILOP_KEEP = 1, GPU_STENCILOP_ZERO = 2,
    GPU_STENCILOP_REPLACE = 3, GPU_STENCILOP_INCREMENT_AND_CLAMP = 4,
    GPU_STENCILOP_DECREMENT_AND_CLAMP = 5, GPU_STENCILOP_INVERT = 6,
    GPU_STENCILOP_INCREMENT_AND_WRAP = 7, GPU_STENCILOP_DECREMENT_AND_WRAP = 8
type
  enum_SDL_GPUBlendOp_1157629182* {.size: sizeof(cuint).} = enum
    GPU_BLENDOP_INVALID = 0, GPU_BLENDOP_ADD = 1, GPU_BLENDOP_SUBTRACT = 2,
    GPU_BLENDOP_REVERSE_SUBTRACT = 3, GPU_BLENDOP_MIN = 4, GPU_BLENDOP_MAX = 5
type
  enum_SDL_GPUBlendFactor_1157629186* {.size: sizeof(cuint).} = enum
    GPU_BLENDFACTOR_INVALID = 0, GPU_BLENDFACTOR_ZERO = 1,
    GPU_BLENDFACTOR_ONE = 2, GPU_BLENDFACTOR_SRC_COLOR = 3,
    GPU_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 4, GPU_BLENDFACTOR_DST_COLOR = 5,
    GPU_BLENDFACTOR_ONE_MINUS_DST_COLOR = 6, GPU_BLENDFACTOR_SRC_ALPHA = 7,
    GPU_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 8, GPU_BLENDFACTOR_DST_ALPHA = 9,
    GPU_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 10,
    GPU_BLENDFACTOR_CONSTANT_COLOR = 11,
    GPU_BLENDFACTOR_ONE_MINUS_CONSTANT_COLOR = 12,
    GPU_BLENDFACTOR_SRC_ALPHA_SATURATE = 13
type
  enum_SDL_GPUFilter_1157629192* {.size: sizeof(cuint).} = enum
    GPU_FILTER_NEAREST = 0, GPU_FILTER_LINEAR = 1
type
  enum_SDL_GPUSamplerMipmapMode_1157629196* {.size: sizeof(cuint).} = enum
    GPU_SAMPLERMIPMAPMODE_NEAREST = 0, GPU_SAMPLERMIPMAPMODE_LINEAR = 1
type
  enum_SDL_GPUSamplerAddressMode_1157629200* {.size: sizeof(cuint).} = enum
    GPU_SAMPLERADDRESSMODE_REPEAT = 0,
    GPU_SAMPLERADDRESSMODE_MIRRORED_REPEAT = 1,
    GPU_SAMPLERADDRESSMODE_CLAMP_TO_EDGE = 2
type
  enum_SDL_GPUPresentMode_1157629204* {.size: sizeof(cuint).} = enum
    GPU_PRESENTMODE_VSYNC = 0, GPU_PRESENTMODE_IMMEDIATE = 1,
    GPU_PRESENTMODE_MAILBOX = 2
type
  enum_SDL_GPUSwapchainComposition_1157629208* {.size: sizeof(cuint).} = enum
    GPU_SWAPCHAINCOMPOSITION_SDR = 0, GPU_SWAPCHAINCOMPOSITION_SDR_LINEAR = 1,
    GPU_SWAPCHAINCOMPOSITION_HDR_EXTENDED_LINEAR = 2,
    GPU_SWAPCHAINCOMPOSITION_HDR10_ST2048 = 3
type
  enum_SDL_hid_bus_type_1157629390* {.size: sizeof(cuint).} = enum
    HID_API_BUS_UNKNOWN = 0, HID_API_BUS_USB = 1, HID_API_BUS_BLUETOOTH = 2,
    HID_API_BUS_I2C = 3, HID_API_BUS_SPI = 4
type
  enum_SDL_HintPriority_1157629398* {.size: sizeof(cuint).} = enum
    HINT_DEFAULT = 0, HINT_NORMAL = 1, HINT_OVERRIDE = 2
type
  enum_SDL_AppResult_1157629406* {.size: sizeof(cuint).} = enum
    APP_CONTINUE = 0, APP_SUCCESS = 1, APP_FAILURE = 2
type
  enum_SDL_LogCategory_1157629426* {.size: sizeof(cuint).} = enum
    LOG_CATEGORY_APPLICATION = 0, LOG_CATEGORY_ERROR = 1,
    LOG_CATEGORY_ASSERT = 2, LOG_CATEGORY_SYSTEM = 3, LOG_CATEGORY_AUDIO = 4,
    LOG_CATEGORY_VIDEO = 5, LOG_CATEGORY_RENDER = 6, LOG_CATEGORY_INPUT = 7,
    LOG_CATEGORY_TEST = 8, LOG_CATEGORY_GPU = 9, LOG_CATEGORY_RESERVED2 = 10,
    LOG_CATEGORY_RESERVED3 = 11, LOG_CATEGORY_RESERVED4 = 12,
    LOG_CATEGORY_RESERVED5 = 13, LOG_CATEGORY_RESERVED6 = 14,
    LOG_CATEGORY_RESERVED7 = 15, LOG_CATEGORY_RESERVED8 = 16,
    LOG_CATEGORY_RESERVED9 = 17, LOG_CATEGORY_RESERVED10 = 18,
    LOG_CATEGORY_CUSTOM = 19
type
  enum_SDL_LogPriority_1157629430* {.size: sizeof(cuint).} = enum
    LOG_PRIORITY_INVALID = 0, LOG_PRIORITY_TRACE = 1, LOG_PRIORITY_VERBOSE = 2,
    LOG_PRIORITY_DEBUG = 3, LOG_PRIORITY_INFO = 4, LOG_PRIORITY_WARN = 5,
    LOG_PRIORITY_ERROR = 6, LOG_PRIORITY_CRITICAL = 7, LOG_PRIORITY_COUNT = 8
type
  enum_SDL_MessageBoxColorType_1157629448* {.size: sizeof(cuint).} = enum
    MESSAGEBOX_COLOR_BACKGROUND = 0, MESSAGEBOX_COLOR_TEXT = 1,
    MESSAGEBOX_COLOR_BUTTON_BORDER = 2, MESSAGEBOX_COLOR_BUTTON_BACKGROUND = 3,
    MESSAGEBOX_COLOR_BUTTON_SELECTED = 4, MESSAGEBOX_COLOR_COUNT = 5
type
  enum_SDL_ProcessIO_1157629464* {.size: sizeof(cuint).} = enum
    PROCESS_STDIO_INHERITED = 0, PROCESS_STDIO_NULL = 1, PROCESS_STDIO_APP = 2,
    PROCESS_STDIO_REDIRECT = 3
type
  enum_SDL_TextureAccess_1157629472* {.size: sizeof(cuint).} = enum
    TEXTUREACCESS_STATIC = 0, TEXTUREACCESS_STREAMING = 1,
    TEXTUREACCESS_TARGET = 2
type
  enum_SDL_RendererLogicalPresentation_1157629476* {.size: sizeof(cuint).} = enum
    LOGICAL_PRESENTATION_DISABLED = 0, LOGICAL_PRESENTATION_STRETCH = 1,
    LOGICAL_PRESENTATION_LETTERBOX = 2, LOGICAL_PRESENTATION_OVERSCAN = 3,
    LOGICAL_PRESENTATION_INTEGER_SCALE = 4
type
  enum_SDL_Sandbox_1157629496* {.size: sizeof(cuint).} = enum
    SANDBOX_NONE = 0, SANDBOX_UNKNOWN_CONTAINER = 1, SANDBOX_FLATPAK = 2,
    SANDBOX_SNAP = 3, SANDBOX_MACOS = 4
type
  enum_SDL_DateFormat_1157629504* {.size: sizeof(cuint).} = enum
    DATE_FORMAT_YYYYMMDD = 0, DATE_FORMAT_DDMMYYYY = 1, DATE_FORMAT_MMDDYYYY = 2
type
  enum_SDL_TimeFormat_1157629508* {.size: sizeof(cuint).} = enum
    TIME_FORMAT_24HR = 0, TIME_FORMAT_12HR = 1
when not declared(sDL_WriteU64LE):
  type
    sDL_WriteU64LE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU64LE" &
        " already exists, not redeclaring")
when not declared(sDL_Swap16LE):
  type
    sDL_Swap16LE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap16LE" & " already exists, not redeclaring")
when not declared(sDL_EVENT_TEXT_EDITING):
  type
    sDL_EVENT_TEXT_EDITING* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_TEXT_EDITING" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_RIGHT_PADDLE2):
  type
    sDL_GAMEPAD_BUTTON_RIGHT_PADDLE2* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_RIGHT_PADDLE2" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_ADDED):
  type
    sDL_EVENT_GAMEPAD_ADDED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_ADDED" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderWindow):
  type
    sDL_GetRenderWindow* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderWindow" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S32LE):
  type
    sDL_AUDIO_S32LE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S32LE" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_DIRECTINPUT):
  type
    sDL_HINT_JOYSTICK_DIRECTINPUT* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_DIRECTINPUT" &
        " already exists, not redeclaring")
when not declared(sDL_RenderRect):
  type
    sDL_RenderRect* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderRect" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_CLIPBOARD_UPDATE):
  type
    sDL_EVENT_CLIPBOARD_UPDATE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_CLIPBOARD_UPDATE" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadTouchpadFinger):
  type
    sDL_GetGamepadTouchpadFinger* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadTouchpadFinger" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadHasAxis):
  type
    sDL_GamepadHasAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadHasAxis" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XBGR4444):
  type
    sDL_PIXELFORMAT_XBGR4444* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XBGR4444" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_F32):
  type
    sDL_AUDIO_F32* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_F32" &
        " already exists, not redeclaring")
when not declared(sDL_GetDisplayForPoint):
  type
    sDL_GetDisplayForPoint* = object
else:
  static :
    hint("Declaration of " & "sDL_GetDisplayForPoint" &
        " already exists, not redeclaring")
when not declared(struct_SDL_AsyncIOQueue):
  type
    struct_SDL_AsyncIOQueue* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_AsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(sDL_GetTicks):
  type
    sDL_GetTicks* = object
else:
  static :
    hint("Declaration of " & "sDL_GetTicks" & " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT):
  type
    sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_PS4):
  type
    sDL_GAMEPAD_TYPE_PS4* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_PS4" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_SENSOR_UPDATE):
  type
    sDL_EVENT_SENSOR_UPDATE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_SENSOR_UPDATE" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Storage):
  type
    struct_SDL_Storage* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Storage" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_PS5):
  type
    sDL_GAMEPAD_TYPE_PS5* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_PS5" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectUnion):
  type
    sDL_GetRectUnion* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectUnion" &
        " already exists, not redeclaring")
when not declared(sDL_AddGamepadMappingsFromIO):
  type
    sDL_AddGamepadMappingsFromIO* = object
else:
  static :
    hint("Declaration of " & "sDL_AddGamepadMappingsFromIO" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S16LE_anon):
  type
    sDL_AUDIO_S16LE_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S16LE_anon" &
        " already exists, not redeclaring")
when not declared(sDL_GetSIMDAlignment):
  type
    sDL_GetSIMDAlignment* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSIMDAlignment" &
        " already exists, not redeclaring")
when not declared(sDL_Semaphore):
  type
    sDL_Semaphore* = object
else:
  static :
    hint("Declaration of " & "sDL_Semaphore" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU32LE):
  type
    sDL_ReadU32LE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU32LE" &
        " already exists, not redeclaring")
when not declared(sDL_UpdateSensors):
  type
    sDL_UpdateSensors* = object
else:
  static :
    hint("Declaration of " & "sDL_UpdateSensors" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadMappingForDeviceIndex):
  type
    sDL_GetGamepadMappingForDeviceIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadMappingForDeviceIndex" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUSampler):
  type
    struct_SDL_GPUSampler* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUSampler" &
        " already exists, not redeclaring")
when not declared(sDL_HasRectIntersection):
  type
    sDL_HasRectIntersection* = object
else:
  static :
    hint("Declaration of " & "sDL_HasRectIntersection" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT):
  type
    sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT" &
        " already exists, not redeclaring")
when not declared(sDL_RunHapticEffect):
  type
    sDL_RunHapticEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_RunHapticEffect" &
        " already exists, not redeclaring")
when not declared(sDLK_Z):
  type
    sDLK_Z* = object
else:
  static :
    hint("Declaration of " & "sDLK_Z" & " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_S_RESIZE):
  type
    sDL_SYSTEM_CURSOR_S_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_S_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDLK_APOSTROPHE):
  type
    sDLK_APOSTROPHE* = object
else:
  static :
    hint("Declaration of " & "sDLK_APOSTROPHE" &
        " already exists, not redeclaring")
when not declared(sDL_SetRenderScale):
  type
    sDL_SetRenderScale* = object
else:
  static :
    hint("Declaration of " & "sDL_SetRenderScale" &
        " already exists, not redeclaring")
when not declared(sDL_GetHapticFeatures):
  type
    sDL_GetHapticFeatures* = object
else:
  static :
    hint("Declaration of " & "sDL_GetHapticFeatures" &
        " already exists, not redeclaring")
when not declared(sDL_MICRO_VERSION):
  type
    sDL_MICRO_VERSION* = object
else:
  static :
    hint("Declaration of " & "sDL_MICRO_VERSION" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_EW_RESIZE):
  type
    sDL_SYSTEM_CURSOR_EW_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_EW_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_RectEmptyFloat):
  type
    sDL_RectEmptyFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_RectEmptyFloat" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadProductVersion):
  type
    sDL_GetGamepadProductVersion* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadProductVersion" &
        " already exists, not redeclaring")
when not declared(sDL_SetGamepadSensorEnabled):
  type
    sDL_SetGamepadSensorEnabled* = object
else:
  static :
    hint("Declaration of " & "sDL_SetGamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_LSHIFT):
  type
    sDL_KMOD_LSHIFT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_LSHIFT" &
        " already exists, not redeclaring")
when not declared(sDL_SetGamepadPlayerIndex):
  type
    sDL_SetGamepadPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_SetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(sDL_MESSAGEBOX_COLOR_COUNT):
  type
    sDL_MESSAGEBOX_COLOR_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_MESSAGEBOX_COLOR_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_SetAtomicInt):
  type
    sDL_SetAtomicInt* = object
else:
  static :
    hint("Declaration of " & "sDL_SetAtomicInt" &
        " already exists, not redeclaring")
when not declared(sDLK_T):
  type
    sDLK_T* = object
else:
  static :
    hint("Declaration of " & "sDLK_T" & " already exists, not redeclaring")
when not declared(sDL_GetAudioStreamData):
  type
    sDL_GetAudioStreamData* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAudioStreamData" &
        " already exists, not redeclaring")
when not declared(sDLK_N):
  type
    sDLK_N* = object
else:
  static :
    hint("Declaration of " & "sDLK_N" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUCopyPass):
  type
    struct_SDL_GPUCopyPass* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUCopyPass" &
        " already exists, not redeclaring")
when not declared(sDL_SetHapticAutocenter):
  type
    sDL_SetHapticAutocenter* = object
else:
  static :
    hint("Declaration of " & "sDL_SetHapticAutocenter" &
        " already exists, not redeclaring")
when not declared(sDL_SendGamepadEffect):
  type
    sDL_SendGamepadEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_SendGamepadEffect" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BINDTYPE_HAT):
  type
    sDL_GAMEPAD_BINDTYPE_HAT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BINDTYPE_HAT" &
        " already exists, not redeclaring")
when not declared(sDL_Condition):
  type
    sDL_Condition* = object
else:
  static :
    hint("Declaration of " & "sDL_Condition" &
        " already exists, not redeclaring")
when not declared(sDL_IOFromFile):
  type
    sDL_IOFromFile* = object
else:
  static :
    hint("Declaration of " & "sDL_IOFromFile" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_SELECT):
  type
    sDL_SCANCODE_MEDIA_SELECT* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(sDL_GLContextFlag):
  type
    sDL_GLContextFlag* = object
else:
  static :
    hint("Declaration of " & "sDL_GLContextFlag" &
        " already exists, not redeclaring")
when not declared(struct_SDL_hid_device):
  type
    struct_SDL_hid_device* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_hid_device" &
        " already exists, not redeclaring")
when not declared(sDL_StopHapticEffects):
  type
    sDL_StopHapticEffects* = object
else:
  static :
    hint("Declaration of " & "sDL_StopHapticEffects" &
        " already exists, not redeclaring")
when not declared(sDL_FlipMode):
  type
    sDL_FlipMode* = object
else:
  static :
    hint("Declaration of " & "sDL_FlipMode" & " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_REWIND):
  type
    sDL_SCANCODE_MEDIA_REWIND* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(sDL_WaitCondition):
  type
    sDL_WaitCondition* = object
else:
  static :
    hint("Declaration of " & "sDL_WaitCondition" &
        " already exists, not redeclaring")
when not declared(sDL_IsJoystickVirtual):
  type
    sDL_IsJoystickVirtual* = object
else:
  static :
    hint("Declaration of " & "sDL_IsJoystickVirtual" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorType):
  type
    sDL_GetSensorType* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorType" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_LEFT_PADDLE2):
  type
    sDL_GAMEPAD_BUTTON_LEFT_PADDLE2* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_LEFT_PADDLE2" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadPlayerIndex):
  type
    sDL_GetGamepadPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DID_ENTER_BACKGROUND):
  type
    sDL_EVENT_DID_ENTER_BACKGROUND* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DID_ENTER_BACKGROUND" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_LEFT_PADDLE1):
  type
    sDL_GAMEPAD_BUTTON_LEFT_PADDLE1* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_LEFT_PADDLE1" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_LEFTX):
  type
    sDL_GAMEPAD_AXIS_LEFTX* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_LEFTX" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DisplayModeData):
  type
    struct_SDL_DisplayModeData* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_DisplayModeData" &
        " already exists, not redeclaring")
when not declared(compiler_inline_private):
  type
    compiler_inline_private* = object
else:
  static :
    hint("Declaration of " & "compiler_inline_private" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_TEXT_EDITING_EXT):
  type
    sDL_EVENT_TEXT_EDITING_EXT* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_TEXT_EDITING_EXT" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GLContextState):
  type
    struct_SDL_GLContextState* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GLContextState" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_MODE):
  type
    sDL_KMOD_MODE* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_MODE" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_XBOXONE):
  type
    sDL_GAMEPAD_TYPE_XBOXONE* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_XBOXONE" &
        " already exists, not redeclaring")
when not declared(sDL_OpenSensor):
  type
    sDL_OpenSensor* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenSensor" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadButton):
  type
    sDL_GamepadButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadButton" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadAxisFromString):
  type
    sDL_GetGamepadAxisFromString* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadAxisFromString" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_CAPS):
  type
    sDL_KMOD_CAPS* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_CAPS" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickBall):
  type
    sDL_GetJoystickBall* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickBall" &
        " already exists, not redeclaring")
when not declared(sDL_GetAndroidExternalStoragePath):
  type
    sDL_GetAndroidExternalStoragePath* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAndroidExternalStoragePath" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadMapping):
  type
    sDL_GetGamepadMapping* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_LINUX_HAT_DEADZONES):
  type
    sDL_HINT_JOYSTICK_LINUX_HAT_DEADZONES* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_LINUX_HAT_DEADZONES" &
        " already exists, not redeclaring")
when not declared(sDL_RenderPoint_anon):
  type
    sDL_RenderPoint_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderPoint_anon" &
        " already exists, not redeclaring")
when not declared(sDL_OnApplicationWillEnterBackground):
  type
    sDL_OnApplicationWillEnterBackground* = object
else:
  static :
    hint("Declaration of " & "sDL_OnApplicationWillEnterBackground" &
        " already exists, not redeclaring")
when not declared(sDL_RenderLines_anon):
  type
    sDL_RenderLines_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderLines_anon" &
        " already exists, not redeclaring")
when not declared(PRIu64_anon):
  type
    PRIu64_anon* = object
else:
  static :
    hint("Declaration of " & "PRIu64_anon" & " already exists, not redeclaring")
when not declared(sDLK_MEDIA_SELECT):
  type
    sDLK_MEDIA_SELECT* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(sDL_SCALEMODE_NEAREST):
  type
    sDL_SCALEMODE_NEAREST* = object
else:
  static :
    hint("Declaration of " & "sDL_SCALEMODE_NEAREST" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WILL_ENTER_FOREGROUND):
  type
    sDL_EVENT_WILL_ENTER_FOREGROUND* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WILL_ENTER_FOREGROUND" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_REMOVED):
  type
    sDL_EVENT_JOYSTICK_REMOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_REMOVED" &
        " already exists, not redeclaring")
when not declared(sDL_SendAndroidMessage):
  type
    sDL_SendAndroidMessage* = object
else:
  static :
    hint("Declaration of " & "sDL_SendAndroidMessage" &
        " already exists, not redeclaring")
when not declared(sDLK_I):
  type
    sDLK_I* = object
else:
  static :
    hint("Declaration of " & "sDLK_I" & " already exists, not redeclaring")
when not declared(sDL_GetGDKDefaultUser):
  type
    sDL_GetGDKDefaultUser* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGDKDefaultUser" &
        " already exists, not redeclaring")
when not declared(sDL_WINDOW_UTILITY):
  type
    sDL_WINDOW_UTILITY* = object
else:
  static :
    hint("Declaration of " & "sDL_WINDOW_UTILITY" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUFence):
  type
    struct_SDL_GPUFence* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUFence" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadAppleSFSymbolsNameForAxis):
  type
    sDL_GetGamepadAppleSFSymbolsNameForAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadAppleSFSymbolsNameForAxis" &
        " already exists, not redeclaring")
when not declared(sDL_GetLogOutputFunction):
  type
    sDL_GetLogOutputFunction* = object
else:
  static :
    hint("Declaration of " & "sDL_GetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(sDL_GetClosestFullscreenDisplayMode):
  type
    sDL_GetClosestFullscreenDisplayMode* = object
else:
  static :
    hint("Declaration of " & "sDL_GetClosestFullscreenDisplayMode" &
        " already exists, not redeclaring")
when not declared(sDL_ShowAndroidToast):
  type
    sDL_ShowAndroidToast* = object
else:
  static :
    hint("Declaration of " & "sDL_ShowAndroidToast" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_USER):
  type
    sDL_EVENT_USER* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_USER" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XRGB1555):
  type
    sDL_PIXELFORMAT_XRGB1555* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XRGB1555" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_VIRTUAL):
  type
    sDL_GAMEPAD_TYPE_VIRTUAL* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_VIRTUAL" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadFirmwareVersion):
  type
    sDL_GetGamepadFirmwareVersion* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(sDL_CloseGamepad):
  type
    sDL_CloseGamepad* = object
else:
  static :
    hint("Declaration of " & "sDL_CloseGamepad" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadMappingForGUID):
  type
    sDL_GetGamepadMappingForGUID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadMappingForGUID" &
        " already exists, not redeclaring")
when not declared(MIN_SINT64):
  type
    MIN_SINT64* = object
else:
  static :
    hint("Declaration of " & "MIN_SINT64" & " already exists, not redeclaring")
when not declared(sDL_DestroyCondition):
  type
    sDL_DestroyCondition* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroyCondition" &
        " already exists, not redeclaring")
when not declared(sDL_RenderLine_anon):
  type
    sDL_RenderLine_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderLine_anon" &
        " already exists, not redeclaring")
when not declared(sDLK_W):
  type
    sDLK_W* = object
else:
  static :
    hint("Declaration of " & "sDLK_W" & " already exists, not redeclaring")
when not declared(sDL_GamepadAxis):
  type
    sDL_GamepadAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadAxis" &
        " already exists, not redeclaring")
when not declared(sDL_CloseIO):
  type
    sDL_CloseIO* = object
else:
  static :
    hint("Declaration of " & "sDL_CloseIO" & " already exists, not redeclaring")
when not declared(sDL_EVENT_KEY_UP):
  type
    sDL_EVENT_KEY_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_KEY_UP" &
        " already exists, not redeclaring")
when not declared(sDL_WriteU32LE):
  type
    sDL_WriteU32LE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU32LE" &
        " already exists, not redeclaring")
when not declared(sDL_GetPixelFormatForMasks):
  type
    sDL_GetPixelFormatForMasks* = object
else:
  static :
    hint("Declaration of " & "sDL_GetPixelFormatForMasks" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_RENDER_DEVICE_RESET):
  type
    sDL_EVENT_RENDER_DEVICE_RESET* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_RENDER_DEVICE_RESET" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickType):
  type
    sDL_GetJoystickType* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickType" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorData):
  type
    sDL_GetSensorData* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorData" &
        " already exists, not redeclaring")
when not declared(sDL_RenderRects):
  type
    sDL_RenderRects* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderRects" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_MAXIMIZED):
  type
    sDL_EVENT_WINDOW_MAXIMIZED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_MAXIMIZED" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_AXIS_MOTION):
  type
    sDL_EVENT_JOYSTICK_AXIS_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_AXIS_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_LAST):
  type
    sDL_EVENT_LAST* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_LAST" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NESW_RESIZE):
  type
    sDL_SYSTEM_CURSOR_NESW_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NESW_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDLK_B):
  type
    sDLK_B* = object
else:
  static :
    hint("Declaration of " & "sDLK_B" & " already exists, not redeclaring")
when not declared(sDL_SurfaceHasRLE):
  type
    sDL_SurfaceHasRLE* = object
else:
  static :
    hint("Declaration of " & "sDL_SurfaceHasRLE" &
        " already exists, not redeclaring")
when not declared(sDL_SetTLS):
  type
    sDL_SetTLS* = object
else:
  static :
    hint("Declaration of " & "sDL_SetTLS" & " already exists, not redeclaring")
when not declared(sDL_GetJoystickAxisInitialState):
  type
    sDL_GetJoystickAxisInitialState* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickAxisInitialState" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_REWIND):
  type
    sDLK_MEDIA_REWIND* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(sDL_CloseHaptic):
  type
    sDL_CloseHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_CloseHaptic" &
        " already exists, not redeclaring")
when not declared(compiler_builtin_alloca):
  type
    compiler_builtin_alloca* = object
else:
  static :
    hint("Declaration of " & "compiler_builtin_alloca" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR):
  type
    sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR" &
        " already exists, not redeclaring")
when not declared(sDL_StringToGUID):
  type
    sDL_StringToGUID* = object
else:
  static :
    hint("Declaration of " & "sDL_StringToGUID" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_FAST_FORWARD):
  type
    sDLK_MEDIA_FAST_FORWARD* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(sDL_AddAtomicInt):
  type
    sDL_AddAtomicInt* = object
else:
  static :
    hint("Declaration of " & "sDL_AddAtomicInt" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_COUNT):
  type
    sDL_GAMEPAD_BUTTON_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_RenderTextureRotated_anon):
  type
    sDL_RenderTextureRotated_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderTextureRotated_anon" &
        " already exists, not redeclaring")
when not declared(sDL_RenderPoints):
  type
    sDL_RenderPoints* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderPoints" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTexture):
  type
    struct_SDL_GPUTexture* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTexture" &
        " already exists, not redeclaring")
when not declared(sDLK_K):
  type
    sDLK_K* = object
else:
  static :
    hint("Declaration of " & "sDLK_K" & " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_RESIZED):
  type
    sDL_EVENT_WINDOW_RESIZED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_RESIZED" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_RIGHT_SHOULDER):
  type
    sDL_GAMEPAD_BUTTON_RIGHT_SHOULDER* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_RIGHT_SHOULDER" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_TOUCHPAD):
  type
    sDL_GAMEPAD_BUTTON_TOUCHPAD* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_TOUCHPAD" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_CTRL):
  type
    sDL_KMOD_CTRL* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_CTRL" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_AXIS_MOTION):
  type
    sDL_EVENT_GAMEPAD_AXIS_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_AXIS_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_REMOVED):
  type
    sDL_EVENT_GAMEPAD_REMOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_REMOVED" &
        " already exists, not redeclaring")
when not declared(sDL_IO_SEEK_END):
  type
    sDL_IO_SEEK_END* = object
else:
  static :
    hint("Declaration of " & "sDL_IO_SEEK_END" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU16LE):
  type
    sDL_ReadU16LE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU16LE" &
        " already exists, not redeclaring")
when not declared(sDL_RenderLines):
  type
    sDL_RenderLines* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderLines" &
        " already exists, not redeclaring")
when not declared(sDL_ReadIO):
  type
    sDL_ReadIO* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadIO" & " already exists, not redeclaring")
when not declared(sDLK_H):
  type
    sDLK_H* = object
else:
  static :
    hint("Declaration of " & "sDLK_H" & " already exists, not redeclaring")
when not declared(sDL_EVENT_DISPLAY_REMOVED):
  type
    sDL_EVENT_DISPLAY_REMOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DISPLAY_REMOVED" &
        " already exists, not redeclaring")
when not declared(sDL_GetAndroidJNIEnv):
  type
    sDL_GetAndroidJNIEnv* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAndroidJNIEnv" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BINDTYPE_AXIS):
  type
    sDL_GAMEPAD_BINDTYPE_AXIS* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BINDTYPE_AXIS" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DROP_FILE):
  type
    sDL_EVENT_DROP_FILE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DROP_FILE" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_DEFAULT):
  type
    sDL_SYSTEM_CURSOR_DEFAULT* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_DEFAULT" &
        " already exists, not redeclaring")
when not declared(sDL_Swap32BE):
  type
    sDL_Swap32BE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap32BE" & " already exists, not redeclaring")
when not declared(sDLK_O):
  type
    sDLK_O* = object
else:
  static :
    hint("Declaration of " & "sDLK_O" & " already exists, not redeclaring")
when not declared(sDLK_V):
  type
    sDLK_V* = object
else:
  static :
    hint("Declaration of " & "sDLK_V" & " already exists, not redeclaring")
when not declared(sDL_LockSpinlock):
  type
    sDL_LockSpinlock* = object
else:
  static :
    hint("Declaration of " & "sDL_LockSpinlock" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadAxisEvent):
  type
    sDL_GamepadAxisEvent* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_STOP):
  type
    sDL_SCANCODE_MEDIA_STOP* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(sDL_SetiOSAnimationCallback):
  type
    sDL_SetiOSAnimationCallback* = object
else:
  static :
    hint("Declaration of " & "sDL_SetiOSAnimationCallback" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadStringForAxis):
  type
    sDL_GetGamepadStringForAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadStringForAxis" &
        " already exists, not redeclaring")
when not declared(sDL_GetDisplayForRect):
  type
    sDL_GetDisplayForRect* = object
else:
  static :
    hint("Declaration of " & "sDL_GetDisplayForRect" &
        " already exists, not redeclaring")
when not declared(sDLK_A):
  type
    sDLK_A* = object
else:
  static :
    hint("Declaration of " & "sDLK_A" & " already exists, not redeclaring")
when not declared(sDL_GetCurrentDisplayOrientation):
  type
    sDL_GetCurrentDisplayOrientation* = object
else:
  static :
    hint("Declaration of " & "sDL_GetCurrentDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_BUTTON_UP):
  type
    sDL_EVENT_GAMEPAD_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_FINGER_DOWN):
  type
    sDL_EVENT_FINGER_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_FINGER_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadDeviceEvent):
  type
    sDL_GamepadDeviceEvent* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DROP_TEXT):
  type
    sDL_EVENT_DROP_TEXT* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DROP_TEXT" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_NEXT_TRACK):
  type
    sDLK_MEDIA_NEXT_TRACK* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumJoystickHats):
  type
    sDL_GetNumJoystickHats* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumJoystickHats" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU32BE):
  type
    sDL_ReadU32BE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU32BE" &
        " already exists, not redeclaring")
when not declared(sDLK_Y):
  type
    sDLK_Y* = object
else:
  static :
    hint("Declaration of " & "sDLK_Y" & " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_W_RESIZE):
  type
    sDL_SYSTEM_CURSOR_W_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_W_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_CloseSensor):
  type
    sDL_CloseSensor* = object
else:
  static :
    hint("Declaration of " & "sDL_CloseSensor" &
        " already exists, not redeclaring")
when not declared(sDL_UpdateGamepads):
  type
    sDL_UpdateGamepads* = object
else:
  static :
    hint("Declaration of " & "sDL_UpdateGamepads" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO):
  type
    sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO" &
        " already exists, not redeclaring")
when not declared(sDL_PutAudioStreamData):
  type
    sDL_PutAudioStreamData* = object
else:
  static :
    hint("Declaration of " & "sDL_PutAudioStreamData" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED):
  type
    sDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED" &
        " already exists, not redeclaring")
when not declared(sDL_IsGamepad):
  type
    sDL_IsGamepad* = object
else:
  static :
    hint("Declaration of " & "sDL_IsGamepad" &
        " already exists, not redeclaring")
when not declared(sDL_LOG_PRIORITY_COUNT):
  type
    sDL_LOG_PRIORITY_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_LOG_PRIORITY_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_SurfaceHasColorKey):
  type
    sDL_SurfaceHasColorKey* = object
else:
  static :
    hint("Declaration of " & "sDL_SurfaceHasColorKey" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_RENDER_TARGETS_RESET):
  type
    sDL_EVENT_RENDER_TARGETS_RESET* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_RENDER_TARGETS_RESET" &
        " already exists, not redeclaring")
when not declared(sDL_GetMaxHapticEffectsPlaying):
  type
    sDL_GetMaxHapticEffectsPlaying* = object
else:
  static :
    hint("Declaration of " & "sDL_GetMaxHapticEffectsPlaying" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BINDTYPE_NONE):
  type
    sDL_GAMEPAD_BINDTYPE_NONE* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BINDTYPE_NONE" &
        " already exists, not redeclaring")
when not declared(sDL_WindowHasSurface):
  type
    sDL_WindowHasSurface* = object
else:
  static :
    hint("Declaration of " & "sDL_WindowHasSurface" &
        " already exists, not redeclaring")
when not declared(sDL_JoystickConnected):
  type
    sDL_JoystickConnected* = object
else:
  static :
    hint("Declaration of " & "sDL_JoystickConnected" &
        " already exists, not redeclaring")
when not declared(sDL_RenderLine):
  type
    sDL_RenderLine* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderLine" &
        " already exists, not redeclaring")
when not declared(sDLK_M):
  type
    sDLK_M* = object
else:
  static :
    hint("Declaration of " & "sDLK_M" & " already exists, not redeclaring")
when not declared(sDL_SetRenderLogicalPresentation):
  type
    sDL_SetRenderLogicalPresentation* = object
else:
  static :
    hint("Declaration of " & "sDL_SetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE):
  type
    sDL_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" &
        " already exists, not redeclaring")
when not declared(struct_SDL_RWLock):
  type
    struct_SDL_RWLock* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_RWLock" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_WINDOW_ALLOW_TOPMOST):
  type
    sDL_HINT_WINDOW_ALLOW_TOPMOST* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_WINDOW_ALLOW_TOPMOST" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickName):
  type
    sDL_GetJoystickName* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickName" &
        " already exists, not redeclaring")
when not declared(sDL_RectsEqual):
  type
    sDL_RectsEqual* = object
else:
  static :
    hint("Declaration of " & "sDL_RectsEqual" &
        " already exists, not redeclaring")
when not declared(sDL_RenderClipEnabled):
  type
    sDL_RenderClipEnabled* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderClipEnabled" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadButtonFromString):
  type
    sDL_GetGamepadButtonFromString* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadButtonFromString" &
        " already exists, not redeclaring")
when not declared(sDL_TextInputActive):
  type
    sDL_TextInputActive* = object
else:
  static :
    hint("Declaration of " & "sDL_TextInputActive" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadStringForButton):
  type
    sDL_GetGamepadStringForButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadStringForButton" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickSerial):
  type
    sDL_GetJoystickSerial* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickSerial" &
        " already exists, not redeclaring")
when not declared(compiler_FILE_private):
  type
    compiler_FILE_private* = object
else:
  static :
    hint("Declaration of " & "compiler_FILE_private" &
        " already exists, not redeclaring")
when not declared(sDL_CreateCondition):
  type
    sDL_CreateCondition* = object
else:
  static :
    hint("Declaration of " & "sDL_CreateCondition" &
        " already exists, not redeclaring")
when not declared(sDLK_C):
  type
    sDLK_C* = object
else:
  static :
    hint("Declaration of " & "sDLK_C" & " already exists, not redeclaring")
when not declared(sDL_IsMouseHaptic):
  type
    sDL_IsMouseHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_IsMouseHaptic" &
        " already exists, not redeclaring")
when not declared(NULL):
  type
    NULL* = object
else:
  static :
    hint("Declaration of " & "NULL" & " already exists, not redeclaring")
when not declared(sDL_GetJoystickVendor):
  type
    sDL_GetJoystickVendor* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickVendor" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumJoystickBalls):
  type
    sDL_GetNumJoystickBalls* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumJoystickBalls" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_MOUSE_LEAVE):
  type
    sDL_EVENT_WINDOW_MOUSE_LEAVE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_MOUSE_LEAVE" &
        " already exists, not redeclaring")
when not declared(sDLK_F):
  type
    sDLK_F* = object
else:
  static :
    hint("Declaration of " & "sDLK_F" & " already exists, not redeclaring")
when not declared(sDL_ThreadID):
  type
    sDL_ThreadID* = object
else:
  static :
    hint("Declaration of " & "sDL_ThreadID" & " already exists, not redeclaring")
when not declared(struct_SDL_Process):
  type
    struct_SDL_Process* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Process" &
        " already exists, not redeclaring")
when not declared(sDL_LoadBMP_IO):
  type
    sDL_LoadBMP_IO* = object
else:
  static :
    hint("Declaration of " & "sDL_LoadBMP_IO" &
        " already exists, not redeclaring")
when not declared(sDL_RenderFillRect):
  type
    sDL_RenderFillRect* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderFillRect" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_BUTTON_UP):
  type
    sDL_EVENT_JOYSTICK_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(sDL_IOFromMem):
  type
    sDL_IOFromMem* = object
else:
  static :
    hint("Declaration of " & "sDL_IOFromMem" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_KEYMAP_CHANGED):
  type
    sDL_EVENT_KEYMAP_CHANGED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_KEYMAP_CHANGED" &
        " already exists, not redeclaring")
when not declared(sDL_INIT_GAMEPAD):
  type
    sDL_INIT_GAMEPAD* = object
else:
  static :
    hint("Declaration of " & "sDL_INIT_GAMEPAD" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_LCTRL):
  type
    sDL_KMOD_LCTRL* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_LCTRL" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_RSHIFT):
  type
    sDL_KMOD_RSHIFT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_RSHIFT" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_PLAY):
  type
    sDLK_MEDIA_PLAY* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(sDL_SURFACE_PREALLOCATED):
  type
    sDL_SURFACE_PREALLOCATED* = object
else:
  static :
    hint("Declaration of " & "sDL_SURFACE_PREALLOCATED" &
        " already exists, not redeclaring")
when not declared(sDL_iOSSetAnimationCallback):
  type
    sDL_iOSSetAnimationCallback* = object
else:
  static :
    hint("Declaration of " & "sDL_iOSSetAnimationCallback" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Joystick):
  type
    struct_SDL_Joystick* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Joystick" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_INVALID):
  type
    sDL_GAMEPAD_BUTTON_INVALID* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_INVALID" &
        " already exists, not redeclaring")
when not declared(sDL_RenderTexture_anon):
  type
    sDL_RenderTexture_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderTexture_anon" &
        " already exists, not redeclaring")
when not declared(sDL_OpenHapticFromJoystick):
  type
    sDL_OpenHapticFromJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenHapticFromJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_CleanupTLS):
  type
    sDL_CleanupTLS* = object
else:
  static :
    hint("Declaration of " & "sDL_CleanupTLS" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_MOUSE_WHEEL):
  type
    sDL_EVENT_MOUSE_WHEEL* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_MOUSE_WHEEL" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S16LE):
  type
    sDL_AUDIO_S16LE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S16LE" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_ADDED):
  type
    sDL_EVENT_JOYSTICK_ADDED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_ADDED" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadButton):
  type
    sDL_GetGamepadButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadButton" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MUTE):
  type
    sDL_SCANCODE_MUTE* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MUTE" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Thread):
  type
    struct_SDL_Thread* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Thread" &
        " already exists, not redeclaring")
when not declared(struct_SDL_SharedObject):
  type
    struct_SDL_SharedObject* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_SharedObject" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_U8):
  type
    sDL_AUDIO_U8* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_U8" & " already exists, not redeclaring")
when not declared(sDL_GetGamepadType):
  type
    sDL_GetGamepadType* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadType" &
        " already exists, not redeclaring")
when not declared(sDL_PointInRectFloat):
  type
    sDL_PointInRectFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_PointInRectFloat" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_CLOSE_REQUESTED):
  type
    sDL_EVENT_WINDOW_CLOSE_REQUESTED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_CLOSE_REQUESTED" &
        " already exists, not redeclaring")
when not declared(sDL_WaitSemaphoreTimeout):
  type
    sDL_WaitSemaphoreTimeout* = object
else:
  static :
    hint("Declaration of " & "sDL_WaitSemaphoreTimeout" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorFromID):
  type
    sDL_GetSensorFromID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorFromID" &
        " already exists, not redeclaring")
when not declared(sDL_GetGDKTaskQueue):
  type
    sDL_GetGDKTaskQueue* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGDKTaskQueue" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_AUDIO_DEVICE_REMOVED):
  type
    sDL_EVENT_AUDIO_DEVICE_REMOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_AUDIO_DEVICE_REMOVED" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Gamepad):
  type
    struct_SDL_Gamepad* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Gamepad" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_POLL_SENTINEL):
  type
    sDL_EVENT_POLL_SENTINEL* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_POLL_SENTINEL" &
        " already exists, not redeclaring")
when not declared(false):
  type
    false* = object
else:
  static :
    hint("Declaration of " & "false" & " already exists, not redeclaring")
when not declared(sDL_KMOD_RALT):
  type
    sDL_KMOD_RALT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_RALT" &
        " already exists, not redeclaring")
when not declared(sDLK_GRAVE):
  type
    sDLK_GRAVE* = object
else:
  static :
    hint("Declaration of " & "sDLK_GRAVE" & " already exists, not redeclaring")
when not declared(sDL_KMOD_LALT):
  type
    sDL_KMOD_LALT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_LALT" &
        " already exists, not redeclaring")
when not declared(sDL_CloseJoystick):
  type
    sDL_CloseJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_CloseJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_PlayHapticRumble):
  type
    sDL_PlayHapticRumble* = object
else:
  static :
    hint("Declaration of " & "sDL_PlayHapticRumble" &
        " already exists, not redeclaring")
when not declared(sDL_SetHapticGain):
  type
    sDL_SetHapticGain* = object
else:
  static :
    hint("Declaration of " & "sDL_SetHapticGain" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_RIGHT_STICK):
  type
    sDL_GAMEPAD_BUTTON_RIGHT_STICK* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_RIGHT_STICK" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_MOUSE_ENTER):
  type
    sDL_EVENT_WINDOW_MOUSE_ENTER* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_MOUSE_ENTER" &
        " already exists, not redeclaring")
when not declared(sDL_GetDXGIOutputInfo):
  type
    sDL_GetDXGIOutputInfo* = object
else:
  static :
    hint("Declaration of " & "sDL_GetDXGIOutputInfo" &
        " already exists, not redeclaring")
when not declared(sDL_FlushAudioStream):
  type
    sDL_FlushAudioStream* = object
else:
  static :
    hint("Declaration of " & "sDL_FlushAudioStream" &
        " already exists, not redeclaring")
when not declared(sDL_DetachVirtualJoystick):
  type
    sDL_DetachVirtualJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_DetachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadPath):
  type
    sDL_GetGamepadPath* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadPath" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectEnclosingPoints):
  type
    sDL_GetRectEnclosingPoints* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectEnclosingPoints" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_BATTERY_UPDATED):
  type
    sDL_EVENT_JOYSTICK_BATTERY_UPDATED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_BATTERY_UPDATED" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderScale):
  type
    sDL_GetRenderScale* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderScale" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU64BE):
  type
    sDL_ReadU64BE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU64BE" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_SHOWN):
  type
    sDL_EVENT_WINDOW_SHOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_SHOWN" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadSteamHandle):
  type
    sDL_GetGamepadSteamHandle* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadSteamHandle" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_ALT):
  type
    sDL_KMOD_ALT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_ALT" & " already exists, not redeclaring")
when not declared(sDL_GUID):
  type
    sDL_GUID* = object
else:
  static :
    hint("Declaration of " & "sDL_GUID" & " already exists, not redeclaring")
when not declared(sDL_GetRenderViewport):
  type
    sDL_GetRenderViewport* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderViewport" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_EAST):
  type
    sDL_GAMEPAD_BUTTON_EAST* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_EAST" &
        " already exists, not redeclaring")
when not declared(sDL_RenderRect_anon):
  type
    sDL_RenderRect_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderRect_anon" &
        " already exists, not redeclaring")
when not declared(sDL_RequestAndroidPermissionCallback):
  type
    sDL_RequestAndroidPermissionCallback* = object
else:
  static :
    hint("Declaration of " & "sDL_RequestAndroidPermissionCallback" &
        " already exists, not redeclaring")
when not declared(struct_SDL_IOStream):
  type
    struct_SDL_IOStream* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_IOStream" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED):
  type
    sDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED" &
        " already exists, not redeclaring")
when not declared(sDL_SendJoystickEffect):
  type
    sDL_SendJoystickEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_SendJoystickEffect" &
        " already exists, not redeclaring")
when not declared(sDL_SURFACE_SIMD_ALIGNED):
  type
    sDL_SURFACE_SIMD_ALIGNED* = object
else:
  static :
    hint("Declaration of " & "sDL_SURFACE_SIMD_ALIGNED" &
        " already exists, not redeclaring")
when not declared(sDL_strtok_r):
  type
    sDL_strtok_r* = object
else:
  static :
    hint("Declaration of " & "sDL_strtok_r" & " already exists, not redeclaring")
when not declared(struct_SDL_iconv_data_t):
  type
    struct_SDL_iconv_data_t* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_iconv_data_t" &
        " already exists, not redeclaring")
when not declared(sDL_SetLogPriority):
  type
    sDL_SetLogPriority* = object
else:
  static :
    hint("Declaration of " & "sDL_SetLogPriority" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_LOCALE_CHANGED):
  type
    sDL_EVENT_LOCALE_CHANGED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_LOCALE_CHANGED" &
        " already exists, not redeclaring")
when not declared(sDL_GetMasksForPixelFormat):
  type
    sDL_GetMasksForPixelFormat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetMasksForPixelFormat" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU16BE):
  type
    sDL_ReadU16BE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU16BE" &
        " already exists, not redeclaring")
when not declared(sDL_IO_SEEK_SET):
  type
    sDL_IO_SEEK_SET* = object
else:
  static :
    hint("Declaration of " & "sDL_IO_SEEK_SET" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUComputePass):
  type
    struct_SDL_GPUComputePass* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUComputePass" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_EXPOSED):
  type
    sDL_EVENT_WINDOW_EXPOSED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_EXPOSED" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NE_RESIZE):
  type
    sDL_SYSTEM_CURSOR_NE_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NE_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadSensorData):
  type
    sDL_GetGamepadSensorData* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadSensorData" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorID):
  type
    sDL_GetSensorID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorID" &
        " already exists, not redeclaring")
when not declared(sDL_FillSurfaceRects):
  type
    sDL_FillSurfaceRects* = object
else:
  static :
    hint("Declaration of " & "sDL_FillSurfaceRects" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_GUI):
  type
    sDL_KMOD_GUI* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_GUI" & " already exists, not redeclaring")
when not declared(sDL_SetLogOutputFunction):
  type
    sDL_SetLogOutputFunction* = object
else:
  static :
    hint("Declaration of " & "sDL_SetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(sDL_GetAtomicPointer):
  type
    sDL_GetAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(sDL_OpenHaptic):
  type
    sDL_OpenHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenHaptic" &
        " already exists, not redeclaring")
when not declared(sDL_OpenHapticFromMouse):
  type
    sDL_OpenHapticFromMouse* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenHapticFromMouse" &
        " already exists, not redeclaring")
when not declared(sDL_IO_SEEK_CUR):
  type
    sDL_IO_SEEK_CUR* = object
else:
  static :
    hint("Declaration of " & "sDL_IO_SEEK_CUR" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_INVALID):
  type
    sDL_GAMEPAD_AXIS_INVALID* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_INVALID" &
        " already exists, not redeclaring")
when not declared(sDL_RequestAndroidPermission):
  type
    sDL_RequestAndroidPermission* = object
else:
  static :
    hint("Declaration of " & "sDL_RequestAndroidPermission" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_EJECT):
  type
    sDLK_MEDIA_EJECT* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_TEXT):
  type
    sDL_SYSTEM_CURSOR_TEXT* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_TEXT" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_LEFT_SHOULDER):
  type
    sDL_GAMEPAD_BUTTON_LEFT_SHOULDER* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_LEFT_SHOULDER" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DISPLAY_MOVED):
  type
    sDL_EVENT_DISPLAY_MOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DISPLAY_MOVED" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_RESTORED):
  type
    sDL_EVENT_WINDOW_RESTORED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_RESTORED" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumJoystickAxes):
  type
    sDL_GetNumJoystickAxes* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumJoystickAxes" &
        " already exists, not redeclaring")
when not declared(sDLK_L):
  type
    sDLK_L* = object
else:
  static :
    hint("Declaration of " & "sDLK_L" & " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_SE_RESIZE):
  type
    sDL_SYSTEM_CURSOR_SE_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_SE_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XRGB8888):
  type
    sDL_PIXELFORMAT_XRGB8888* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XRGB8888" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumJoystickButtons):
  type
    sDL_GetNumJoystickButtons* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumJoystickButtons" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickFromID):
  type
    sDL_GetJoystickFromID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickFromID" &
        " already exists, not redeclaring")
when not declared(sDL_GetLogPriority):
  type
    sDL_GetLogPriority* = object
else:
  static :
    hint("Declaration of " & "sDL_GetLogPriority" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadType):
  type
    sDL_GamepadType* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadType" &
        " already exists, not redeclaring")
when not declared(sDL_WaitSemaphore):
  type
    sDL_WaitSemaphore* = object
else:
  static :
    hint("Declaration of " & "sDL_WaitSemaphore" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DISPLAY_ORIENTATION):
  type
    sDL_EVENT_DISPLAY_ORIENTATION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DISPLAY_ORIENTATION" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumGamepadTouchpads):
  type
    sDL_GetNumGamepadTouchpads* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumGamepadTouchpads" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_HIDDEN):
  type
    sDL_EVENT_WINDOW_HIDDEN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_HIDDEN" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickAxis):
  type
    sDL_GetJoystickAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickAxis" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_FINGER_UP):
  type
    sDL_EVENT_FINGER_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_FINGER_UP" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderMetalLayer):
  type
    sDL_GetRenderMetalLayer* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderMetalLayer" &
        " already exists, not redeclaring")
when not declared(sDL_SetSurfaceColorKey):
  type
    sDL_SetSurfaceColorKey* = object
else:
  static :
    hint("Declaration of " & "sDL_SetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(sDL_SeekIO):
  type
    sDL_SeekIO* = object
else:
  static :
    hint("Declaration of " & "sDL_SeekIO" & " already exists, not redeclaring")
when not declared(sDL_BUTTON_MASK):
  type
    sDL_BUTTON_MASK* = object
else:
  static :
    hint("Declaration of " & "sDL_BUTTON_MASK" &
        " already exists, not redeclaring")
when not declared(struct_SDL_AudioStream):
  type
    struct_SDL_AudioStream* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_AudioStream" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadSerial):
  type
    sDL_GetGamepadSerial* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadSerial" &
        " already exists, not redeclaring")
when not declared(sDL_SetJoystickVirtualAxis):
  type
    sDL_SetJoystickVirtualAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_SetJoystickVirtualAxis" &
        " already exists, not redeclaring")
when not declared(sDL_UpdateJoysticks):
  type
    sDL_UpdateJoysticks* = object
else:
  static :
    hint("Declaration of " & "sDL_UpdateJoysticks" &
        " already exists, not redeclaring")
when not declared(sDL_CreatePalette):
  type
    sDL_CreatePalette* = object
else:
  static :
    hint("Declaration of " & "sDL_CreatePalette" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectIntersectionFloat):
  type
    sDL_GetRectIntersectionFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_BACK):
  type
    sDL_GAMEPAD_BUTTON_BACK* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_BACK" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadHasButton):
  type
    sDL_GamepadHasButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadHasButton" &
        " already exists, not redeclaring")
when not declared(sDL_BlitSurfaceScaled):
  type
    sDL_BlitSurfaceScaled* = object
else:
  static :
    hint("Declaration of " & "sDL_BlitSurfaceScaled" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NWSE_RESIZE):
  type
    sDL_SYSTEM_CURSOR_NWSE_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NWSE_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadBindingType):
  type
    sDL_GamepadBindingType* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumLogicalCPUCores):
  type
    sDL_GetNumLogicalCPUCores* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumLogicalCPUCores" &
        " already exists, not redeclaring")
when not declared(sDL_RenderTextureRotated):
  type
    sDL_RenderTextureRotated* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderTextureRotated" &
        " already exists, not redeclaring")
when not declared(sDL_AttachVirtualJoystick):
  type
    sDL_AttachVirtualJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_AttachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_DestroyPalette):
  type
    sDL_DestroyPalette* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroyPalette" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_BUTTON_DOWN):
  type
    sDL_EVENT_JOYSTICK_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_BUTTON_DOWN):
  type
    sDL_EVENT_GAMEPAD_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XBGR8888):
  type
    sDL_PIXELFORMAT_XBGR8888* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XBGR8888" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XBGR1555):
  type
    sDL_PIXELFORMAT_XBGR1555* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XBGR1555" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumHapticAxes):
  type
    sDL_GetNumHapticAxes* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumHapticAxes" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickFromPlayerIndex):
  type
    sDL_GetJoystickFromPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(sDL_WINDOW_HIGH_PIXEL_DENSITY):
  type
    sDL_WINDOW_HIGH_PIXEL_DENSITY* = object
else:
  static :
    hint("Declaration of " & "sDL_WINDOW_HIGH_PIXEL_DENSITY" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S32LE_anon):
  type
    sDL_AUDIO_S32LE_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S32LE_anon" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_NEXT_TRACK):
  type
    sDL_SCANCODE_MEDIA_NEXT_TRACK* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(union_XEvent):
  type
    union_XEvent* = object
else:
  static :
    hint("Declaration of " & "union_XEvent" & " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_GUIDE):
  type
    sDL_GAMEPAD_BUTTON_GUIDE* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_GUIDE" &
        " already exists, not redeclaring")
when not declared(sDL_RemoveEventWatch):
  type
    sDL_RemoveEventWatch* = object
else:
  static :
    hint("Declaration of " & "sDL_RemoveEventWatch" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadSensorDataRate):
  type
    sDL_GetGamepadSensorDataRate* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadSensorDataRate" &
        " already exists, not redeclaring")
when not declared(sDLK_E):
  type
    sDLK_E* = object
else:
  static :
    hint("Declaration of " & "sDLK_E" & " already exists, not redeclaring")
when not declared(sDL_KMOD_RGUI):
  type
    sDL_KMOD_RGUI* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_RGUI" &
        " already exists, not redeclaring")
when not declared(sDL_SetLinuxThreadPriority):
  type
    sDL_SetLinuxThreadPriority* = object
else:
  static :
    hint("Declaration of " & "sDL_SetLinuxThreadPriority" &
        " already exists, not redeclaring")
when not declared(sDL_arraysize):
  type
    sDL_arraysize* = object
else:
  static :
    hint("Declaration of " & "sDL_arraysize" &
        " already exists, not redeclaring")
when not declared(sDL_Gamepad):
  type
    sDL_Gamepad* = object
else:
  static :
    hint("Declaration of " & "sDL_Gamepad" & " already exists, not redeclaring")
when not declared(sDL_GetTLS):
  type
    sDL_GetTLS* = object
else:
  static :
    hint("Declaration of " & "sDL_GetTLS" & " already exists, not redeclaring")
when not declared(sDLK_U):
  type
    sDLK_U* = object
else:
  static :
    hint("Declaration of " & "sDLK_U" & " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_MISC1):
  type
    sDL_GAMEPAD_BUTTON_MISC1* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_MISC1" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickPlayerIndex):
  type
    sDL_GetJoystickPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUComputePipeline):
  type
    struct_SDL_GPUComputePipeline* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_SENSOR_UPDATE):
  type
    sDL_EVENT_GAMEPAD_SENSOR_UPDATE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_SENSOR_UPDATE" &
        " already exists, not redeclaring")
when not declared(sDL_UpdateHapticEffect):
  type
    sDL_UpdateHapticEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_UpdateHapticEffect" &
        " already exists, not redeclaring")
when not declared(sDLK_X):
  type
    sDLK_X* = object
else:
  static :
    hint("Declaration of " & "sDLK_X" & " already exists, not redeclaring")
when not declared(sDL_TryWaitSemaphore):
  type
    sDL_TryWaitSemaphore* = object
else:
  static :
    hint("Declaration of " & "sDL_TryWaitSemaphore" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_F32LE_anon):
  type
    sDL_AUDIO_F32LE_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_F32LE_anon" &
        " already exists, not redeclaring")
when not declared(sDL_CreateAudioStream):
  type
    sDL_CreateAudioStream* = object
else:
  static :
    hint("Declaration of " & "sDL_CreateAudioStream" &
        " already exists, not redeclaring")
when not declared(PRId64):
  type
    PRId64* = object
else:
  static :
    hint("Declaration of " & "PRId64" & " already exists, not redeclaring")
when not declared(sDL_ConvertSurface):
  type
    sDL_ConvertSurface* = object
else:
  static :
    hint("Declaration of " & "sDL_ConvertSurface" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_DPAD_RIGHT):
  type
    sDL_GAMEPAD_BUTTON_DPAD_RIGHT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_DPAD_RIGHT" &
        " already exists, not redeclaring")
when not declared(sDL_GetAndroidActivity):
  type
    sDL_GetAndroidActivity* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAndroidActivity" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUDevice):
  type
    struct_SDL_GPUDevice* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUDevice" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadAxis):
  type
    sDL_GetGamepadAxis* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadAxis" &
        " already exists, not redeclaring")
when not declared(compiler_func_private):
  type
    compiler_func_private* = object
else:
  static :
    hint("Declaration of " & "compiler_func_private" &
        " already exists, not redeclaring")
when not declared(sDL_RumbleGamepad):
  type
    sDL_RumbleGamepad* = object
else:
  static :
    hint("Declaration of " & "sDL_RumbleGamepad" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_LOW_MEMORY):
  type
    sDL_EVENT_LOW_MEMORY* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_LOW_MEMORY" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderClipRect):
  type
    sDL_GetRenderClipRect* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(sDL_GetDirect3D9AdapterIndex):
  type
    sDL_GetDirect3D9AdapterIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetDirect3D9AdapterIndex" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_WEST):
  type
    sDL_GAMEPAD_BUTTON_WEST* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_WEST" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUCommandBuffer):
  type
    struct_SDL_GPUCommandBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(sDLK_R):
  type
    sDLK_R* = object
else:
  static :
    hint("Declaration of " & "sDLK_R" & " already exists, not redeclaring")
when not declared(sDL_EVENT_MOUSE_MOTION):
  type
    sDL_EVENT_MOUSE_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_MOUSE_MOTION" &
        " already exists, not redeclaring")
when not declared(sDLK_D):
  type
    sDLK_D* = object
else:
  static :
    hint("Declaration of " & "sDLK_D" & " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_TOUCHPAD_DOWN):
  type
    sDL_EVENT_GAMEPAD_TOUCHPAD_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_TOUCHPAD_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_REMAPPED):
  type
    sDL_EVENT_GAMEPAD_REMAPPED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_REMAPPED" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_FINGER_MOTION):
  type
    sDL_EVENT_FINGER_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_FINGER_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_DestroyHapticEffect):
  type
    sDL_DestroyHapticEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroyHapticEffect" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_TOUCHPAD_UP):
  type
    sDL_EVENT_GAMEPAD_TOUCHPAD_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_TOUCHPAD_UP" &
        " already exists, not redeclaring")
when not declared(sDL_InitHapticRumble):
  type
    sDL_InitHapticRumble* = object
else:
  static :
    hint("Declaration of " & "sDL_InitHapticRumble" &
        " already exists, not redeclaring")
when not declared(sDLK_G):
  type
    sDLK_G* = object
else:
  static :
    hint("Declaration of " & "sDLK_G" & " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_MOVE):
  type
    sDL_SYSTEM_CURSOR_MOVE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_MOVE" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_RCTRL):
  type
    sDL_KMOD_RCTRL* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_RCTRL" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_PREVIOUS_TRACK):
  type
    sDL_SCANCODE_MEDIA_PREVIOUS_TRACK* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(sDL_SignalCondition):
  type
    sDL_SignalCondition* = object
else:
  static :
    hint("Declaration of " & "sDL_SignalCondition" &
        " already exists, not redeclaring")
when not declared(sDL_SetiOSEventPump):
  type
    sDL_SetiOSEventPump* = object
else:
  static :
    hint("Declaration of " & "sDL_SetiOSEventPump" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickProduct):
  type
    sDL_GetJoystickProduct* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickProduct" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_FAST_FORWARD):
  type
    sDL_SCANCODE_MEDIA_FAST_FORWARD* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorNonPortableType):
  type
    sDL_GetSensorNonPortableType* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorNonPortableType" &
        " already exists, not redeclaring")
when not declared(sDL_SetSurfaceClipRect):
  type
    sDL_SetSurfaceClipRect* = object
else:
  static :
    hint("Declaration of " & "sDL_SetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(sDL_SetCurrentThreadPriority):
  type
    sDL_SetCurrentThreadPriority* = object
else:
  static :
    hint("Declaration of " & "sDL_SetCurrentThreadPriority" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_DPAD_DOWN):
  type
    sDL_GAMEPAD_BUTTON_DPAD_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_DPAD_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_GetMaxHapticEffects):
  type
    sDL_GetMaxHapticEffects* = object
else:
  static :
    hint("Declaration of " & "sDL_GetMaxHapticEffects" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_PLAY):
  type
    sDL_SCANCODE_MEDIA_PLAY* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUGraphicsPipeline):
  type
    struct_SDL_GPUGraphicsPipeline* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(sDL_AddGamepadMapping):
  type
    sDL_AddGamepadMapping* = object
else:
  static :
    hint("Declaration of " & "sDL_AddGamepadMapping" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadVendor):
  type
    sDL_GetGamepadVendor* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadVendor" &
        " already exists, not redeclaring")
when not declared(sDLK_Q):
  type
    sDLK_Q* = object
else:
  static :
    hint("Declaration of " & "sDLK_Q" & " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_MINIMIZED):
  type
    sDL_EVENT_WINDOW_MINIMIZED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_MINIMIZED" &
        " already exists, not redeclaring")
when not declared(sDL_Swap64BE):
  type
    sDL_Swap64BE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap64BE" & " already exists, not redeclaring")
when not declared(sDL_EVENT_MOUSE_BUTTON_UP):
  type
    sDL_EVENT_MOUSE_BUTTON_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_MOUSE_BUTTON_UP" &
        " already exists, not redeclaring")
when not declared(sDL_LoadWAV_IO):
  type
    sDL_LoadWAV_IO* = object
else:
  static :
    hint("Declaration of " & "sDL_LoadWAV_IO" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_TEXT_INPUT):
  type
    sDL_EVENT_TEXT_INPUT* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_TEXT_INPUT" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_LEFT_TRIGGER):
  type
    sDL_GAMEPAD_AXIS_LEFT_TRIGGER* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_LEFT_TRIGGER" &
        " already exists, not redeclaring")
when not declared(sDL_StopHapticEffect):
  type
    sDL_StopHapticEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_StopHapticEffect" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadAppleSFSymbolsNameForButton):
  type
    sDL_GetGamepadAppleSFSymbolsNameForButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadAppleSFSymbolsNameForButton" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_POINTER):
  type
    sDL_SYSTEM_CURSOR_POINTER* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_POINTER" &
        " already exists, not redeclaring")
when not declared(sDL_PIXELFORMAT_XRGB4444):
  type
    sDL_PIXELFORMAT_XRGB4444* = object
else:
  static :
    hint("Declaration of " & "sDL_PIXELFORMAT_XRGB4444" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_F32BE):
  type
    sDL_AUDIO_F32BE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_F32BE" &
        " already exists, not redeclaring")
when not declared(sDL_WINDOW_MOUSE_GRABBED):
  type
    sDL_WINDOW_MOUSE_GRABBED* = object
else:
  static :
    hint("Declaration of " & "sDL_WINDOW_MOUSE_GRABBED" &
        " already exists, not redeclaring")
when not declared(sDL_GL_DestroyContext):
  type
    sDL_GL_DestroyContext* = object
else:
  static :
    hint("Declaration of " & "sDL_GL_DestroyContext" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DROP_COMPLETE):
  type
    sDL_EVENT_DROP_COMPLETE* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DROP_COMPLETE" &
        " already exists, not redeclaring")
when not declared(sDLK_MEDIA_STOP):
  type
    sDLK_MEDIA_STOP* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(sDL_DestroyAudioStream):
  type
    sDL_DestroyAudioStream* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroyAudioStream" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_LINUX_DIGITAL_HATS):
  type
    sDL_HINT_JOYSTICK_LINUX_DIGITAL_HATS* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_LINUX_DIGITAL_HATS" &
        " already exists, not redeclaring")
when not declared(sDL_SetJoystickLED):
  type
    sDL_SetJoystickLED* = object
else:
  static :
    hint("Declaration of " & "sDL_SetJoystickLED" &
        " already exists, not redeclaring")
when not declared(sDL_ResumeHaptic):
  type
    sDL_ResumeHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_ResumeHaptic" &
        " already exists, not redeclaring")
when not declared(sDL_Mutex):
  type
    sDL_Mutex* = object
else:
  static :
    hint("Declaration of " & "sDL_Mutex" & " already exists, not redeclaring")
when not declared(sDL_free):
  type
    sDL_free* = object
else:
  static :
    hint("Declaration of " & "sDL_free" & " already exists, not redeclaring")
when not declared(sDL_GetRectAndLineIntersectionFloat):
  type
    sDL_GetRectAndLineIntersectionFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectAndLineIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_NUM):
  type
    sDL_KMOD_NUM* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_NUM" & " already exists, not redeclaring")
when not declared(sDL_SetRenderViewport):
  type
    sDL_SetRenderViewport* = object
else:
  static :
    hint("Declaration of " & "sDL_SetRenderViewport" &
        " already exists, not redeclaring")
when not declared(sDL_BlitSurface):
  type
    sDL_BlitSurface* = object
else:
  static :
    hint("Declaration of " & "sDL_BlitSurface" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_STANDARD):
  type
    sDL_GAMEPAD_TYPE_STANDARD* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_STANDARD" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadJoystick):
  type
    sDL_GetGamepadJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickGUID):
  type
    sDL_GetJoystickGUID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickGUID" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_LGUI):
  type
    sDL_KMOD_LGUI* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_LGUI" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadTouchpadEvent):
  type
    sDL_GamepadTouchpadEvent* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(sDL_BlitSurfaceUncheckedScaled):
  type
    sDL_BlitSurfaceUncheckedScaled* = object
else:
  static :
    hint("Declaration of " & "sDL_BlitSurfaceUncheckedScaled" &
        " already exists, not redeclaring")
when not declared(PRIX64_anon_8C1EE2C2):
  type
    PRIX64_anon_8C1EE2C2* = object
else:
  static :
    hint("Declaration of " & "PRIX64_anon_8C1EE2C2" &
        " already exists, not redeclaring")
when not declared(bool_anon):
  type
    bool_anon* = object
else:
  static :
    hint("Declaration of " & "bool_anon" & " already exists, not redeclaring")
when not declared(sDL_GetAtomicInt):
  type
    sDL_GetAtomicInt* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAtomicInt" &
        " already exists, not redeclaring")
when not declared(sDL_WriteU64BE):
  type
    sDL_WriteU64BE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU64BE" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_RIGHTX):
  type
    sDL_GAMEPAD_AXIS_RIGHTX* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_RIGHTX" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadFromPlayerIndex):
  type
    sDL_GetGamepadFromPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_ICCPROF_CHANGED):
  type
    sDL_EVENT_WINDOW_ICCPROF_CHANGED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_ICCPROF_CHANGED" &
        " already exists, not redeclaring")
when not declared(sDL_GetHapticEffectStatus):
  type
    sDL_GetHapticEffectStatus* = object
else:
  static :
    hint("Declaration of " & "sDL_GetHapticEffectStatus" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_KEY_DOWN):
  type
    sDL_EVENT_KEY_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_KEY_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_EventAction):
  type
    sDL_EventAction* = object
else:
  static :
    hint("Declaration of " & "sDL_EventAction" &
        " already exists, not redeclaring")
when not declared(sDL_JOYSTICK_TYPE_GAMEPAD):
  type
    sDL_JOYSTICK_TYPE_GAMEPAD* = object
else:
  static :
    hint("Declaration of " & "sDL_JOYSTICK_TYPE_GAMEPAD" &
        " already exists, not redeclaring")
when not declared(sDL_ScreenKeyboardShown):
  type
    sDL_ScreenKeyboardShown* = object
else:
  static :
    hint("Declaration of " & "sDL_ScreenKeyboardShown" &
        " already exists, not redeclaring")
when not declared(sDL_ResetLogPriorities):
  type
    sDL_ResetLogPriorities* = object
else:
  static :
    hint("Declaration of " & "sDL_ResetLogPriorities" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadButtonEvent):
  type
    sDL_GamepadButtonEvent* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_COUNT):
  type
    sDL_SCANCODE_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_DestroyCursor):
  type
    sDL_DestroyCursor* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroyCursor" &
        " already exists, not redeclaring")
when not declared(sDL_GetWindowFullscreenMode):
  type
    sDL_GetWindowFullscreenMode* = object
else:
  static :
    hint("Declaration of " & "sDL_GetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(sDL_SetRenderClipRect):
  type
    sDL_SetRenderClipRect* = object
else:
  static :
    hint("Declaration of " & "sDL_SetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_HIT_TEST):
  type
    sDL_EVENT_WINDOW_HIT_TEST* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_HIT_TEST" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_NORTH):
  type
    sDL_GAMEPAD_BUTTON_NORTH* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_NORTH" &
        " already exists, not redeclaring")
when not declared(sDL_IOFromConstMem):
  type
    sDL_IOFromConstMem* = object
else:
  static :
    hint("Declaration of " & "sDL_IOFromConstMem" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_F32LE):
  type
    sDL_AUDIO_F32LE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_F32LE" &
        " already exists, not redeclaring")
when not declared(PRIx64_anon):
  type
    PRIx64_anon* = object
else:
  static :
    hint("Declaration of " & "PRIx64_anon" & " already exists, not redeclaring")
when not declared(sDL_AUDIO_S16BE):
  type
    sDL_AUDIO_S16BE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S16BE" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S8):
  type
    sDL_AUDIO_S8* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S8" & " already exists, not redeclaring")
when not declared(sDL_HINT_GDK_TEXTINPUT_DEFAULT_TEXT):
  type
    sDL_HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_GDK_TEXTINPUT_DEFAULT_TEXT" &
        " already exists, not redeclaring")
when not declared(sDLK_J):
  type
    sDLK_J* = object
else:
  static :
    hint("Declaration of " & "sDLK_J" & " already exists, not redeclaring")
when not declared(sDL_WriteU16BE):
  type
    sDL_WriteU16BE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU16BE" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectIntersection):
  type
    sDL_GetRectIntersection* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectIntersection" &
        " already exists, not redeclaring")
when not declared(sDL_GetSensorName):
  type
    sDL_GetSensorName* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSensorName" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Window):
  type
    struct_SDL_Window* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Window" &
        " already exists, not redeclaring")
when not declared(sDL_BlitSurfaceScaled_anon):
  type
    sDL_BlitSurfaceScaled_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_BlitSurfaceScaled_anon" &
        " already exists, not redeclaring")
when not declared(sDL_AddGamepadMappingsFromFile):
  type
    sDL_AddGamepadMappingsFromFile* = object
else:
  static :
    hint("Declaration of " & "sDL_AddGamepadMappingsFromFile" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadName):
  type
    sDL_GetGamepadName* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadName" &
        " already exists, not redeclaring")
when not declared(sDL_OnApplicationDidEnterForeground):
  type
    sDL_OnApplicationDidEnterForeground* = object
else:
  static :
    hint("Declaration of " & "sDL_OnApplicationDidEnterForeground" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderLogicalPresentation):
  type
    sDL_GetRenderLogicalPresentation* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(sDL_IOStream):
  type
    sDL_IOStream* = object
else:
  static :
    hint("Declaration of " & "sDL_IOStream" & " already exists, not redeclaring")
when not declared(sDL_GamepadSensorEnabled):
  type
    sDL_GamepadSensorEnabled* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(sDL_SetLogPriorities):
  type
    sDL_SetLogPriorities* = object
else:
  static :
    hint("Declaration of " & "sDL_SetLogPriorities" &
        " already exists, not redeclaring")
when not declared(sDL_OpenJoystick):
  type
    sDL_OpenJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_FillSurfaceRect):
  type
    sDL_FillSurfaceRect* = object
else:
  static :
    hint("Declaration of " & "sDL_FillSurfaceRect" &
        " already exists, not redeclaring")
when not declared(sDL_ReadU64LE):
  type
    sDL_ReadU64LE* = object
else:
  static :
    hint("Declaration of " & "sDL_ReadU64LE" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTransferBuffer):
  type
    struct_SDL_GPUTransferBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_HAT_MOTION):
  type
    sDL_EVENT_JOYSTICK_HAT_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_HAT_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_RumbleJoystickTriggers):
  type
    sDL_RumbleJoystickTriggers* = object
else:
  static :
    hint("Declaration of " & "sDL_RumbleJoystickTriggers" &
        " already exists, not redeclaring")
when not declared(sDL_GetAndroidExternalStorageState):
  type
    sDL_GetAndroidExternalStorageState* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAndroidExternalStorageState" &
        " already exists, not redeclaring")
when not declared(sDL_SetAtomicPointer):
  type
    sDL_SetAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "sDL_SetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(sDL_SignalSemaphore):
  type
    sDL_SignalSemaphore* = object
else:
  static :
    hint("Declaration of " & "sDL_SignalSemaphore" &
        " already exists, not redeclaring")
when not declared(sDL_GLProfile):
  type
    sDL_GLProfile* = object
else:
  static :
    hint("Declaration of " & "sDL_GLProfile" &
        " already exists, not redeclaring")
when not declared(sDL_GetCurrentRenderOutputSize):
  type
    sDL_GetCurrentRenderOutputSize* = object
else:
  static :
    hint("Declaration of " & "sDL_GetCurrentRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(sDL_GetIOSize):
  type
    sDL_GetIOSize* = object
else:
  static :
    hint("Declaration of " & "sDL_GetIOSize" &
        " already exists, not redeclaring")
when not declared(sDL_WriteU32BE):
  type
    sDL_WriteU32BE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU32BE" &
        " already exists, not redeclaring")
when not declared(sDL_SCANCODE_MEDIA_EJECT):
  type
    sDL_SCANCODE_MEDIA_EJECT* = object
else:
  static :
    hint("Declaration of " & "sDL_SCANCODE_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_JOYSTICK_BALL_MOTION):
  type
    sDL_EVENT_JOYSTICK_BALL_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_JOYSTICK_BALL_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_SetWindowFullscreenMode):
  type
    sDL_SetWindowFullscreenMode* = object
else:
  static :
    hint("Declaration of " & "sDL_SetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DID_ENTER_FOREGROUND):
  type
    sDL_EVENT_DID_ENTER_FOREGROUND* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DID_ENTER_FOREGROUND" &
        " already exists, not redeclaring")
when not declared(sDL_TellIO):
  type
    sDL_TellIO* = object
else:
  static :
    hint("Declaration of " & "sDL_TellIO" & " already exists, not redeclaring")
when not declared(sDL_GamepadHasSensor):
  type
    sDL_GamepadHasSensor* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadHasSensor" &
        " already exists, not redeclaring")
when not declared(sDL_GetSurfaceColorKey):
  type
    sDL_GetSurfaceColorKey* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Mutex):
  type
    struct_SDL_Mutex* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Mutex" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_PS3):
  type
    sDL_GAMEPAD_TYPE_PS3* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_PS3" &
        " already exists, not redeclaring")
when not declared(sDLK_DBLAPOSTROPHE):
  type
    sDLK_DBLAPOSTROPHE* = object
else:
  static :
    hint("Declaration of " & "sDLK_DBLAPOSTROPHE" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadProduct):
  type
    sDL_GetGamepadProduct* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadProduct" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectAndLineIntersection):
  type
    sDL_GetRectAndLineIntersection* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectAndLineIntersection" &
        " already exists, not redeclaring")
when not declared(sDL_SetLinuxThreadPriorityAndPolicy):
  type
    sDL_SetLinuxThreadPriorityAndPolicy* = object
else:
  static :
    hint("Declaration of " & "sDL_SetLinuxThreadPriorityAndPolicy" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_SW_RESIZE):
  type
    sDL_SYSTEM_CURSOR_SW_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_SW_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BINDTYPE_BUTTON):
  type
    sDL_GAMEPAD_BINDTYPE_BUTTON* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BINDTYPE_BUTTON" &
        " already exists, not redeclaring")
when not declared(sDL_RenderTexture):
  type
    sDL_RenderTexture* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderTexture" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickID):
  type
    sDL_GetJoystickID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickID" &
        " already exists, not redeclaring")
when not declared(sDL_GLAttr):
  type
    sDL_GLAttr* = object
else:
  static :
    hint("Declaration of " & "sDL_GLAttr" & " already exists, not redeclaring")
when not declared(sDL_RenderFillRects):
  type
    sDL_RenderFillRects* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderFillRects" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Camera):
  type
    struct_SDL_Camera* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Camera" &
        " already exists, not redeclaring")
when not declared(sDL_ClearAudioStream):
  type
    sDL_ClearAudioStream* = object
else:
  static :
    hint("Declaration of " & "sDL_ClearAudioStream" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickFirmwareVersion):
  type
    sDL_GetJoystickFirmwareVersion* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(sDL_SetJoystickPlayerIndex):
  type
    sDL_SetJoystickPlayerIndex* = object
else:
  static :
    hint("Declaration of " & "sDL_SetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(sDLK_P):
  type
    sDLK_P* = object
else:
  static :
    hint("Declaration of " & "sDLK_P" & " already exists, not redeclaring")
when not declared(sDL_iOSSetEventPump):
  type
    sDL_iOSSetEventPump* = object
else:
  static :
    hint("Declaration of " & "sDL_iOSSetEventPump" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Haptic):
  type
    struct_SDL_Haptic* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Haptic" &
        " already exists, not redeclaring")
when not declared(sDL_RumbleGamepadTriggers):
  type
    sDL_RumbleGamepadTriggers* = object
else:
  static :
    hint("Declaration of " & "sDL_RumbleGamepadTriggers" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_SHIFT):
  type
    sDL_KMOD_SHIFT* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_SHIFT" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_MOUSE_BUTTON_DOWN):
  type
    sDL_EVENT_MOUSE_BUTTON_DOWN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_MOUSE_BUTTON_DOWN" &
        " already exists, not redeclaring")
when not declared(sDL_GetPixelFormatDetails):
  type
    sDL_GetPixelFormatDetails* = object
else:
  static :
    hint("Declaration of " & "sDL_GetPixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(sDL_GetSurfaceClipRect):
  type
    sDL_GetSurfaceClipRect* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(sDL_WaitConditionTimeout):
  type
    sDL_WaitConditionTimeout* = object
else:
  static :
    hint("Declaration of " & "sDL_WaitConditionTimeout" &
        " already exists, not redeclaring")
when not declared(sDL_RenderCoordinatesToWindow):
  type
    sDL_RenderCoordinatesToWindow* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderCoordinatesToWindow" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NOT_ALLOWED):
  type
    sDL_SYSTEM_CURSOR_NOT_ALLOWED* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NOT_ALLOWED" &
        " already exists, not redeclaring")
when not declared(sDL_TryLockSpinlock):
  type
    sDL_TryLockSpinlock* = object
else:
  static :
    hint("Declaration of " & "sDL_TryLockSpinlock" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_NONE):
  type
    sDL_KMOD_NONE* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_NONE" &
        " already exists, not redeclaring")
when not declared(sDLK_S):
  type
    sDLK_S* = object
else:
  static :
    hint("Declaration of " & "sDLK_S" & " already exists, not redeclaring")
when not declared(struct_SDL_Semaphore):
  type
    struct_SDL_Semaphore* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Semaphore" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_E_RESIZE):
  type
    sDL_SYSTEM_CURSOR_E_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_E_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_GLContextReleaseFlag):
  type
    sDL_GLContextReleaseFlag* = object
else:
  static :
    hint("Declaration of " & "sDL_GLContextReleaseFlag" &
        " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_LINUX_CLASSIC):
  type
    sDL_HINT_JOYSTICK_LINUX_CLASSIC* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_LINUX_CLASSIC" &
        " already exists, not redeclaring")
when not declared(sDL_size_add_check_overflow):
  type
    sDL_size_add_check_overflow* = object
else:
  static :
    hint("Declaration of " & "sDL_size_add_check_overflow" &
        " already exists, not redeclaring")
when not declared(sDL_RenderPoint):
  type
    sDL_RenderPoint* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderPoint" &
        " already exists, not redeclaring")
when not declared(sDL_StopHapticRumble):
  type
    sDL_StopHapticRumble* = object
else:
  static :
    hint("Declaration of " & "sDL_StopHapticRumble" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_FOCUS_LOST):
  type
    sDL_EVENT_WINDOW_FOCUS_LOST* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_FOCUS_LOST" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_SOUTH):
  type
    sDL_GAMEPAD_BUTTON_SOUTH* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_SOUTH" &
        " already exists, not redeclaring")
when not declared(sDL_SetJoystickVirtualHat):
  type
    sDL_SetJoystickVirtualHat* = object
else:
  static :
    hint("Declaration of " & "sDL_SetJoystickVirtualHat" &
        " already exists, not redeclaring")
when not declared(sDL_RumbleJoystick):
  type
    sDL_RumbleJoystick* = object
else:
  static :
    hint("Declaration of " & "sDL_RumbleJoystick" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_COUNT):
  type
    sDL_GAMEPAD_AXIS_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_UnlockSpinlock):
  type
    sDL_UnlockSpinlock* = object
else:
  static :
    hint("Declaration of " & "sDL_UnlockSpinlock" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_LEFT_STICK):
  type
    sDL_GAMEPAD_BUTTON_LEFT_STICK* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_LEFT_STICK" &
        " already exists, not redeclaring")
when not declared(sDL_RemoveHintCallback):
  type
    sDL_RemoveHintCallback* = object
else:
  static :
    hint("Declaration of " & "sDL_RemoveHintCallback" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickButton):
  type
    sDL_GetJoystickButton* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickButton" &
        " already exists, not redeclaring")
when not declared(sDL_GUIDFromString):
  type
    sDL_GUIDFromString* = object
else:
  static :
    hint("Declaration of " & "sDL_GUIDFromString" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickHat):
  type
    sDL_GetJoystickHat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickHat" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DROP_BEGIN):
  type
    sDL_EVENT_DROP_BEGIN* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DROP_BEGIN" &
        " already exists, not redeclaring")
when not declared(sDL_RenderCoordinatesFromWindow):
  type
    sDL_RenderCoordinatesFromWindow* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderCoordinatesFromWindow" &
        " already exists, not redeclaring")
when not declared(sDL_SendAndroidBackButton):
  type
    sDL_SendAndroidBackButton* = object
else:
  static :
    hint("Declaration of " & "sDL_SendAndroidBackButton" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Cursor):
  type
    struct_SDL_Cursor* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Cursor" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WILL_ENTER_BACKGROUND):
  type
    sDL_EVENT_WILL_ENTER_BACKGROUND* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WILL_ENTER_BACKGROUND" &
        " already exists, not redeclaring")
when not declared(sDL_VERSION):
  type
    sDL_VERSION* = object
else:
  static :
    hint("Declaration of " & "sDL_VERSION" & " already exists, not redeclaring")
when not declared(sDL_EVENT_AUDIO_DEVICE_ADDED):
  type
    sDL_EVENT_AUDIO_DEVICE_ADDED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_AUDIO_DEVICE_ADDED" &
        " already exists, not redeclaring")
when not declared(sDL_SetGamepadLED):
  type
    sDL_SetGamepadLED* = object
else:
  static :
    hint("Declaration of " & "sDL_SetGamepadLED" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_QUIT):
  type
    sDL_EVENT_QUIT* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_QUIT" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Condition):
  type
    struct_SDL_Condition* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Condition" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUShader):
  type
    struct_SDL_GPUShader* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUShader" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectUnionFloat):
  type
    sDL_GetRectUnionFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectUnionFloat" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadConnected):
  type
    sDL_GamepadConnected* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadConnected" &
        " already exists, not redeclaring")
when not declared(sDL_GetAndroidInternalStoragePath):
  type
    sDL_GetAndroidInternalStoragePath* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAndroidInternalStoragePath" &
        " already exists, not redeclaring")
when not declared(sDL_WriteU16LE):
  type
    sDL_WriteU16LE* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteU16LE" &
        " already exists, not redeclaring")
when not declared(sDL_WriteIO):
  type
    sDL_WriteIO* = object
else:
  static :
    hint("Declaration of " & "sDL_WriteIO" & " already exists, not redeclaring")
when not declared(struct_SDL_AsyncIO):
  type
    struct_SDL_AsyncIO* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_AsyncIO" &
        " already exists, not redeclaring")
when not declared(sDL_GetAudioStreamAvailable):
  type
    sDL_GetAudioStreamAvailable* = object
else:
  static :
    hint("Declaration of " & "sDL_GetAudioStreamAvailable" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_DISPLAY_ADDED):
  type
    sDL_EVENT_DISPLAY_ADDED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_DISPLAY_ADDED" &
        " already exists, not redeclaring")
when not declared(sDL_RenderPoints_anon):
  type
    sDL_RenderPoints_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderPoints_anon" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPURenderPass):
  type
    struct_SDL_GPURenderPass* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPURenderPass" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_TERMINATING):
  type
    sDL_EVENT_TERMINATING* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_TERMINATING" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_PROGRESS):
  type
    sDL_SYSTEM_CURSOR_PROGRESS* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_PROGRESS" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S32):
  type
    sDL_AUDIO_S32* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S32" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_MOVED):
  type
    sDL_EVENT_WINDOW_MOVED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_MOVED" &
        " already exists, not redeclaring")
when not declared(sDL_OpenGamepad):
  type
    sDL_OpenGamepad* = object
else:
  static :
    hint("Declaration of " & "sDL_OpenGamepad" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_START):
  type
    sDL_GAMEPAD_BUTTON_START* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_START" &
        " already exists, not redeclaring")
when not declared(sDL_BroadcastCondition):
  type
    sDL_BroadcastCondition* = object
else:
  static :
    hint("Declaration of " & "sDL_BroadcastCondition" &
        " already exists, not redeclaring")
when not declared(sDL_GetNumGamepadTouchpadFingers):
  type
    sDL_GetNumGamepadTouchpadFingers* = object
else:
  static :
    hint("Declaration of " & "sDL_GetNumGamepadTouchpadFingers" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_FOCUS_GAINED):
  type
    sDL_EVENT_WINDOW_FOCUS_GAINED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_FOCUS_GAINED" &
        " already exists, not redeclaring")
when not declared(true):
  type
    true* = object
else:
  static :
    hint("Declaration of " & "true" & " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NW_RESIZE):
  type
    sDL_SYSTEM_CURSOR_NW_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NW_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_FIRST):
  type
    sDL_EVENT_FIRST* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_FIRST" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_GAMEPAD_TOUCHPAD_MOTION):
  type
    sDL_EVENT_GAMEPAD_TOUCHPAD_MOTION* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_GAMEPAD_TOUCHPAD_MOTION" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_DPAD_UP):
  type
    sDL_GAMEPAD_BUTTON_DPAD_UP* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_DPAD_UP" &
        " already exists, not redeclaring")
when not declared(sDL_KMOD_SCROLL):
  type
    sDL_KMOD_SCROLL* = object
else:
  static :
    hint("Declaration of " & "sDL_KMOD_SCROLL" &
        " already exists, not redeclaring")
when not declared(sDL_AUDIO_S32BE):
  type
    sDL_AUDIO_S32BE* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S32BE" &
        " already exists, not redeclaring")
when not declared(sDL_GetRectEnclosingPointsFloat):
  type
    sDL_GetRectEnclosingPointsFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRectEnclosingPointsFloat" &
        " already exists, not redeclaring")
when not declared(sDL_RenderRects_anon):
  type
    sDL_RenderRects_anon* = object
else:
  static :
    hint("Declaration of " & "sDL_RenderRects_anon" &
        " already exists, not redeclaring")
when not declared(sDL_SaveBMP_IO):
  type
    sDL_SaveBMP_IO* = object
else:
  static :
    hint("Declaration of " & "sDL_SaveBMP_IO" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_DPAD_LEFT):
  type
    sDL_GAMEPAD_BUTTON_DPAD_LEFT* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_DPAD_LEFT" &
        " already exists, not redeclaring")
when not declared(sDLK_MUTE):
  type
    sDLK_MUTE* = object
else:
  static :
    hint("Declaration of " & "sDLK_MUTE" & " already exists, not redeclaring")
when not declared(MAX_SINT64):
  type
    MAX_SINT64* = object
else:
  static :
    hint("Declaration of " & "MAX_SINT64" & " already exists, not redeclaring")
when not declared(sDLK_MEDIA_PREVIOUS_TRACK):
  type
    sDLK_MEDIA_PREVIOUS_TRACK* = object
else:
  static :
    hint("Declaration of " & "sDLK_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(sDL_RectsEqualFloat):
  type
    sDL_RectsEqualFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_RectsEqualFloat" &
        " already exists, not redeclaring")
when not declared(sDL_HasRectIntersectionFloat):
  type
    sDL_HasRectIntersectionFloat* = object
else:
  static :
    hint("Declaration of " & "sDL_HasRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_TYPE_XBOX360):
  type
    sDL_GAMEPAD_TYPE_XBOX360* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_TYPE_XBOX360" &
        " already exists, not redeclaring")
when not declared(sDL_GetDisplayForWindow):
  type
    sDL_GetDisplayForWindow* = object
else:
  static :
    hint("Declaration of " & "sDL_GetDisplayForWindow" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Environment):
  type
    struct_SDL_Environment* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Environment" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUBuffer):
  type
    struct_SDL_GPUBuffer* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBuffer" &
        " already exists, not redeclaring")
when not declared(sDL_Swap64LE):
  type
    sDL_Swap64LE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap64LE" & " already exists, not redeclaring")
when not declared(sDL_AUDIO_S16):
  type
    sDL_AUDIO_S16* = object
else:
  static :
    hint("Declaration of " & "sDL_AUDIO_S16" &
        " already exists, not redeclaring")
when not declared(sDL_PauseHaptic):
  type
    sDL_PauseHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_PauseHaptic" &
        " already exists, not redeclaring")
when not declared(sDL_GetJoystickPath):
  type
    sDL_GetJoystickPath* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickPath" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_NS_RESIZE):
  type
    sDL_SYSTEM_CURSOR_NS_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_NS_RESIZE" &
        " already exists, not redeclaring")
when not declared(sDL_MixAudio):
  type
    sDL_MixAudio* = object
else:
  static :
    hint("Declaration of " & "sDL_MixAudio" & " already exists, not redeclaring")
when not declared(sDL_IsJoystickHaptic):
  type
    sDL_IsJoystickHaptic* = object
else:
  static :
    hint("Declaration of " & "sDL_IsJoystickHaptic" &
        " already exists, not redeclaring")
when not declared(sDL_size_mul_check_overflow):
  type
    sDL_size_mul_check_overflow* = object
else:
  static :
    hint("Declaration of " & "sDL_size_mul_check_overflow" &
        " already exists, not redeclaring")
when not declared(sDL_DestroySurface):
  type
    sDL_DestroySurface* = object
else:
  static :
    hint("Declaration of " & "sDL_DestroySurface" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_RIGHTY):
  type
    sDL_GAMEPAD_AXIS_RIGHTY* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_RIGHTY" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Sensor):
  type
    struct_SDL_Sensor* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Sensor" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_COUNT):
  type
    sDL_SYSTEM_CURSOR_COUNT* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_COUNT" &
        " already exists, not redeclaring")
when not declared(sDL_ScreenSaverEnabled):
  type
    sDL_ScreenSaverEnabled* = object
else:
  static :
    hint("Declaration of " & "sDL_ScreenSaverEnabled" &
        " already exists, not redeclaring")
when not declared(compiler_LINE_private):
  type
    compiler_LINE_private* = object
else:
  static :
    hint("Declaration of " & "compiler_LINE_private" &
        " already exists, not redeclaring")
when not declared(sDL_GamepadSensorEvent):
  type
    sDL_GamepadSensorEvent* = object
else:
  static :
    hint("Declaration of " & "sDL_GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(sDL_CompareAndSwapAtomicInt):
  type
    sDL_CompareAndSwapAtomicInt* = object
else:
  static :
    hint("Declaration of " & "sDL_CompareAndSwapAtomicInt" &
        " already exists, not redeclaring")
when not declared(sDL_EVENT_WINDOW_DISPLAY_CHANGED):
  type
    sDL_EVENT_WINDOW_DISPLAY_CHANGED* = object
else:
  static :
    hint("Declaration of " & "sDL_EVENT_WINDOW_DISPLAY_CHANGED" &
        " already exists, not redeclaring")
when not declared(sDL_CreateHapticEffect):
  type
    sDL_CreateHapticEffect* = object
else:
  static :
    hint("Declaration of " & "sDL_CreateHapticEffect" &
        " already exists, not redeclaring")
when not declared(sDL_SetJoystickVirtualButton):
  type
    sDL_SetJoystickVirtualButton* = object
else:
  static :
    hint("Declaration of " & "sDL_SetJoystickVirtualButton" &
        " already exists, not redeclaring")
when not declared(sDL_GetSemaphoreValue):
  type
    sDL_GetSemaphoreValue* = object
else:
  static :
    hint("Declaration of " & "sDL_GetSemaphoreValue" &
        " already exists, not redeclaring")
when not declared(sDL_FlushRenderer):
  type
    sDL_FlushRenderer* = object
else:
  static :
    hint("Declaration of " & "sDL_FlushRenderer" &
        " already exists, not redeclaring")
when not declared(sDL_Color):
  type
    sDL_Color* = object
else:
  static :
    hint("Declaration of " & "sDL_Color" & " already exists, not redeclaring")
when not declared(sDL_HINT_JOYSTICK_LINUX_DEADZONES):
  type
    sDL_HINT_JOYSTICK_LINUX_DEADZONES* = object
else:
  static :
    hint("Declaration of " & "sDL_HINT_JOYSTICK_LINUX_DEADZONES" &
        " already exists, not redeclaring")
when not declared(sDL_Swap16BE):
  type
    sDL_Swap16BE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap16BE" & " already exists, not redeclaring")
when not declared(sDL_GetJoystickProductVersion):
  type
    sDL_GetJoystickProductVersion* = object
else:
  static :
    hint("Declaration of " & "sDL_GetJoystickProductVersion" &
        " already exists, not redeclaring")
when not declared(sDL_BlitSurfaceUnchecked):
  type
    sDL_BlitSurfaceUnchecked* = object
else:
  static :
    hint("Declaration of " & "sDL_BlitSurfaceUnchecked" &
        " already exists, not redeclaring")
when not declared(sDL_RectsEqualEpsilon):
  type
    sDL_RectsEqualEpsilon* = object
else:
  static :
    hint("Declaration of " & "sDL_RectsEqualEpsilon" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_LEFTY):
  type
    sDL_GAMEPAD_AXIS_LEFTY* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_LEFTY" &
        " already exists, not redeclaring")
when not declared(sDL_AtomicInt):
  type
    sDL_AtomicInt* = object
else:
  static :
    hint("Declaration of " & "sDL_AtomicInt" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_AXIS_RIGHT_TRIGGER):
  type
    sDL_GAMEPAD_AXIS_RIGHT_TRIGGER* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_AXIS_RIGHT_TRIGGER" &
        " already exists, not redeclaring")
when not declared(sDL_GetGamepadFromID):
  type
    sDL_GetGamepadFromID* = object
else:
  static :
    hint("Declaration of " & "sDL_GetGamepadFromID" &
        " already exists, not redeclaring")
when not declared(sDL_GetRenderMetalCommandEncoder):
  type
    sDL_GetRenderMetalCommandEncoder* = object
else:
  static :
    hint("Declaration of " & "sDL_GetRenderMetalCommandEncoder" &
        " already exists, not redeclaring")
when not declared(sDL_SYSTEM_CURSOR_N_RESIZE):
  type
    sDL_SYSTEM_CURSOR_N_RESIZE* = object
else:
  static :
    hint("Declaration of " & "sDL_SYSTEM_CURSOR_N_RESIZE" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Renderer):
  type
    struct_SDL_Renderer* = object
else:
  static :
    hint("Declaration of " & "struct_SDL_Renderer" &
        " already exists, not redeclaring")
when not declared(sDL_Swap32LE):
  type
    sDL_Swap32LE* = object
else:
  static :
    hint("Declaration of " & "sDL_Swap32LE" & " already exists, not redeclaring")
when not declared(sDL_SetRenderVSync):
  type
    sDL_SetRenderVSync* = object
else:
  static :
    hint("Declaration of " & "sDL_SetRenderVSync" &
        " already exists, not redeclaring")
when not declared(sDL_CompareAndSwapAtomicPointer):
  type
    sDL_CompareAndSwapAtomicPointer* = object
else:
  static :
    hint("Declaration of " & "sDL_CompareAndSwapAtomicPointer" &
        " already exists, not redeclaring")
when not declared(sDL_GAMEPAD_BUTTON_RIGHT_PADDLE1):
  type
    sDL_GAMEPAD_BUTTON_RIGHT_PADDLE1* = object
else:
  static :
    hint("Declaration of " & "sDL_GAMEPAD_BUTTON_RIGHT_PADDLE1" &
        " already exists, not redeclaring")
when not declared(sDL_SCALEMODE_LINEAR):
  type
    sDL_SCALEMODE_LINEAR* = object
else:
  static :
    hint("Declaration of " & "sDL_SCALEMODE_LINEAR" &
        " already exists, not redeclaring")
type
  Sint8_1157628434 = int8    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:328:16
  Uint8_1157628436 = uint8   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:337:17
  Sint16_1157628438 = int16  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:346:17
  Uint16_1157628440 = uint16 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:355:18
  Sint32_1157628442 = int32  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:364:17
  Uint32_1157628444 = uint32 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:373:18
  Sint64_1157628446 = int64  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:384:17
  Uint64_1157628448 = uint64 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:395:18
  Time_1157628450 = Sint64_1157628447 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:412:16
  struct_SDL_alignment_test_1157628452 {.pure, inheritable, bycopy.} = object
    a*: Uint8_1157628437     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:604:16
    b*: pointer
  alignment_test_1157628454 = struct_SDL_alignment_test_1157628453 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:608:3
  DUMMY_ENUM_1157628458 = enum_SDL_DUMMY_ENUM_1157628457 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:627:3
  malloc_func_1157628460 = proc (a0: csize_t): pointer {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:811:25
  calloc_func_1157628462 = proc (a0: csize_t; a1: csize_t): pointer {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:832:25
  realloc_func_1157628464 = proc (a0: pointer; a1: csize_t): pointer {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:853:25
  free_func_1157628466 = proc (a0: pointer): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:871:24
  Environment_1157628468 = struct_SDL_Environment ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:1014:32
  CompareCallback_1157628470 = proc (a0: pointer; a1: pointer): cint {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:1242:23
  CompareCallback_r_1157628472 = proc (a0: pointer; a1: pointer; a2: pointer): cint {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:1355:23
  wchar_t_1157628474 = cint  ## Generated based on /usr/lib/clang/18/include/__stddef_wchar_t.h:24:24
  iconv_t_1157628476 = ptr struct_SDL_iconv_data_t ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:4182:34
  FunctionPointer_1157628478 = proc (): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:4461:16
  AssertState_1157628482 = enum_SDL_AssertState_1157628481 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:210:3
  struct_SDL_AssertData_1157628484 {.pure, inheritable, bycopy.} = object
    always_ignore*: bool     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:221:16
    trigger_count*: cuint
    condition*: cstring
    filename*: cstring
    linenum*: cint
    function*: cstring
    next*: ptr struct_SDL_AssertData_1157628485
  AssertData_1157628486 = struct_SDL_AssertData_1157628485 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:230:3
  AssertionHandler_1157628488 = proc (a0: ptr AssertData_1157628487; a1: pointer): AssertState_1157628483 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:436:35
  AsyncIO_1157628490 = struct_SDL_AsyncIO ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:124:28
  AsyncIOTaskType_1157628494 = enum_SDL_AsyncIOTaskType_1157628493 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:136:3
  AsyncIOResult_1157628498 = enum_SDL_AsyncIOResult_1157628497 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:148:3
  struct_SDL_AsyncIOOutcome_1157628500 {.pure, inheritable, bycopy.} = object
    asyncio*: ptr AsyncIO_1157628491 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:155:16
    type_field*: AsyncIOTaskType_1157628495
    result*: AsyncIOResult_1157628499
    buffer*: pointer
    offset*: Uint64_1157628449
    bytes_requested*: Uint64_1157628449
    bytes_transferred*: Uint64_1157628449
    userdata*: pointer
  AsyncIOOutcome_1157628502 = struct_SDL_AsyncIOOutcome_1157628501 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:165:3
  AsyncIOQueue_1157628504 = struct_SDL_AsyncIOQueue ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_asyncio.h:183:33
  SpinLock_1157628506 = cint ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_atomic.h:82:13
  struct_SDL_AtomicInt_1157628508 {.pure, inheritable, bycopy.} = object
    value*: cint             ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_atomic.h:334:16
  AtomicInt_1157628510 = struct_SDL_AtomicInt_1157628509 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_atomic.h:334:45
  struct_SDL_AtomicU32_1157628512 {.pure, inheritable, bycopy.} = object
    value*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_atomic.h:479:16
  AtomicU32_1157628514 = struct_SDL_AtomicU32_1157628513 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_atomic.h:479:48
  PropertiesID_1157628516 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_properties.h:66:16
  PropertyType_1157628520 = enum_SDL_PropertyType_1157628519 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_properties.h:81:3
  CleanupPropertyCallback_1157628522 = proc (a0: pointer; a1: pointer): void {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_properties.h:187:24
  EnumeratePropertiesCallback_1157628524 = proc (a0: pointer; a1: PropertiesID_1157628517;
      a2: cstring): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_properties.h:499:24
  Thread_1157628526 = struct_SDL_Thread ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:58:27
  ThreadID_1157628528 = Uint64_1157628449 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:72:16
  TLSID_1157628530 = AtomicInt_1157628511 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:85:23
  ThreadPriority_1157628534 = enum_SDL_ThreadPriority_1157628533 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:103:3
  ThreadFunction_1157628536 = proc (a0: pointer): cint {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:113:24
  TLSDestructorCallback_1157628538 = proc (a0: pointer): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:487:24
  Mutex_1157628540 = struct_SDL_Mutex ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:137:26
  RWLock_1157628542 = struct_SDL_RWLock ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:268:27
  Semaphore_1157628544 = struct_SDL_Semaphore ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:499:30
  Condition_1157628546 = struct_SDL_Condition ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:642:30
  InitStatus_1157628550 = enum_SDL_InitStatus_1157628549 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:778:3
  struct_SDL_InitState_1157628552 {.pure, inheritable, bycopy.} = object
    status*: AtomicInt_1157628511 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:836:16
    thread*: ThreadID_1157628529
    reserved*: pointer
  InitState_1157628554 = struct_SDL_InitState_1157628553 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mutex.h:841:3
  IOStatus_1157628558 = enum_SDL_IOStatus_1157628557 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:61:3
  IOWhence_1157628562 = enum_SDL_IOWhence_1157628561 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:76:3
  struct_SDL_IOStreamInterface_1157628564 {.pure, inheritable, bycopy.} = object
    version*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:92:16
    size*: proc (a0: pointer): Sint64_1157628447 {.cdecl.}
    seek*: proc (a0: pointer; a1: Sint64_1157628447; a2: IOWhence_1157628563): Sint64_1157628447 {.
        cdecl.}
    read*: proc (a0: pointer; a1: pointer; a2: csize_t; a3: ptr IOStatus_1157628559): csize_t {.
        cdecl.}
    write*: proc (a0: pointer; a1: pointer; a2: csize_t; a3: ptr IOStatus_1157628559): csize_t {.
        cdecl.}
    flush*: proc (a0: pointer; a1: ptr IOStatus_1157628559): bool {.cdecl.}
    close*: proc (a0: pointer): bool {.cdecl.}
  IOStreamInterface_1157628566 = struct_SDL_IOStreamInterface_1157628565 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:160:3
  IOStream_1157628568 = struct_SDL_IOStream ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:182:29
  AudioFormat_1157628572 = enum_SDL_AudioFormat_1157628571 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:197:3
  AudioDeviceID_1157628574 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:320:16
  struct_SDL_AudioSpec_1157628576 {.pure, inheritable, bycopy.} = object
    format*: AudioFormat_1157628573 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:351:16
    channels*: cint
    freq*: cint
  AudioSpec_1157628578 = struct_SDL_AudioSpec_1157628577 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:356:3
  AudioStream_1157628580 = struct_SDL_AudioStream ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:397:32
  AudioStreamCallback_1157628582 = proc (a0: pointer; a1: ptr AudioStream_1157628581;
      a2: cint; a3: cint): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:1621:24
  AudioPostmixCallback_1157628584 = proc (a0: pointer; a1: ptr AudioSpec_1157628579;
      a2: ptr cfloat; a3: cint): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:1838:24
  BlendMode_1157628586 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:52:16
  BlendOperation_1157628590 = enum_SDL_BlendOperation_1157628589 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:76:3
  BlendFactor_1157628594 = enum_SDL_BlendFactor_1157628593 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:100:3
  PixelType_1157628598 = enum_SDL_PixelType_1157628597 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:98:3
  BitmapOrder_1157628602 = enum_SDL_BitmapOrder_1157628601 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:110:3
  PackedOrder_1157628606 = enum_SDL_PackedOrder_1157628605 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:128:3
  ArrayOrder_1157628610 = enum_SDL_ArrayOrder_1157628609 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:144:3
  PackedLayout_1157628614 = enum_SDL_PackedLayout_1157628613 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:162:3
  PixelFormat_1157628618 = enum_SDL_PixelFormat_1157628617 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:420:3
  ColorType_1157628622 = enum_SDL_ColorType_1157628621 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:456:3
  ColorRange_1157628626 = enum_SDL_ColorRange_1157628625 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:469:3
  ColorPrimaries_1157628630 = enum_SDL_ColorPrimaries_1157628629 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:493:3
  TransferCharacteristics_1157628634 = enum_SDL_TransferCharacteristics_1157628633 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:523:3
  MatrixCoefficients_1157628638 = enum_SDL_MatrixCoefficients_1157628637 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:549:3
  ChromaLocation_1157628642 = enum_SDL_ChromaLocation_1157628641 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:562:3
  Colorspace_1157628646 = enum_SDL_Colorspace_1157628645 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:687:3
  struct_SDL_Color_1157628648 {.pure, inheritable, bycopy.} = object
    r*: Uint8_1157628437     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:699:16
    g*: Uint8_1157628437
    b*: Uint8_1157628437
    a*: Uint8_1157628437
  Color_1157628650 = struct_SDL_Color_1157628649 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:705:3
  struct_SDL_FColor_1157628652 {.pure, inheritable, bycopy.} = object
    r*: cfloat               ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:713:16
    g*: cfloat
    b*: cfloat
    a*: cfloat
  FColor_1157628654 = struct_SDL_FColor_1157628653 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:719:3
  struct_SDL_Palette_1157628656 {.pure, inheritable, bycopy.} = object
    ncolors*: cint           ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:728:16
    colors*: ptr Color_1157628651
    version*: Uint32_1157628445
    refcount*: cint
  Palette_1157628658 = struct_SDL_Palette_1157628657 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:734:3
  struct_SDL_PixelFormatDetails_1157628660 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_1157628619 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:741:16
    bits_per_pixel*: Uint8_1157628437
    bytes_per_pixel*: Uint8_1157628437
    padding*: array[2'i64, Uint8_1157628437]
    Rmask*: Uint32_1157628445
    Gmask*: Uint32_1157628445
    Bmask*: Uint32_1157628445
    Amask*: Uint32_1157628445
    Rbits*: Uint8_1157628437
    Gbits*: Uint8_1157628437
    Bbits*: Uint8_1157628437
    Abits*: Uint8_1157628437
    Rshift*: Uint8_1157628437
    Gshift*: Uint8_1157628437
    Bshift*: Uint8_1157628437
    Ashift*: Uint8_1157628437
  PixelFormatDetails_1157628662 = struct_SDL_PixelFormatDetails_1157628661 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:759:3
  struct_SDL_Point_1157628664 {.pure, inheritable, bycopy.} = object
    x*: cint                 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:49:16
    y*: cint
  Point_1157628666 = struct_SDL_Point_1157628665 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:53:3
  struct_SDL_FPoint_1157628668 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:63:16
    y*: cfloat
  FPoint_1157628670 = struct_SDL_FPoint_1157628669 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:67:3
  struct_SDL_Rect_1157628672 {.pure, inheritable, bycopy.} = object
    x*: cint                 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:83:16
    y*: cint
    w*: cint
    h*: cint
  Rect_1157628674 = struct_SDL_Rect_1157628673 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:87:3
  struct_SDL_FRect_1157628676 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:106:16
    y*: cfloat
    w*: cfloat
    h*: cfloat
  FRect_1157628678 = struct_SDL_FRect_1157628677 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_rect.h:112:3
  SurfaceFlags_1157628680 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:64:16
  ScaleMode_1157628684 = enum_SDL_ScaleMode_1157628683 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:87:3
  FlipMode_1157628688 = enum_SDL_FlipMode_1157628687 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:99:3
  struct_SDL_Surface_1157628690 {.pure, inheritable, bycopy.} = object
    flags*: SurfaceFlags_1157628681 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:128:8
    format*: PixelFormat_1157628619
    w*: cint
    h*: cint
    pitch*: cint
    pixels*: pointer
    refcount*: cint
    reserved*: pointer
  Surface_1157628692 = struct_SDL_Surface_1157628691 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:143:28
  CameraID_1157628694 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_camera.h:76:16
  Camera_1157628696 = struct_SDL_Camera ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_camera.h:83:27
  struct_SDL_CameraSpec_1157628698 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_1157628619 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_camera.h:96:16
    colorspace*: Colorspace_1157628647
    width*: cint
    height*: cint
    framerate_numerator*: cint
    framerate_denominator*: cint
  CameraSpec_1157628700 = struct_SDL_CameraSpec_1157628699 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_camera.h:104:3
  CameraPosition_1157628704 = enum_SDL_CameraPosition_1157628703 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_camera.h:118:3
  ClipboardDataCallback_1157628706 = proc (a0: pointer; a1: cstring;
      a2: ptr csize_t): pointer {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_clipboard.h:166:31
  ClipboardCleanupCallback_1157628708 = proc (a0: pointer): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_clipboard.h:178:24
  DisplayID_1157628710 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:75:16
  WindowID_1157628712 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:84:16
  SystemTheme_1157628716 = enum_SDL_SystemTheme_1157628715 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:113:3
  DisplayModeData_1157628718 = struct_SDL_DisplayModeData ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:116:36
  struct_SDL_DisplayMode_1157628720 {.pure, inheritable, bycopy.} = object
    displayID*: DisplayID_1157628711 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:129:16
    format*: PixelFormat_1157628619
    w*: cint
    h*: cint
    pixel_density*: cfloat
    refresh_rate*: cfloat
    refresh_rate_numerator*: cint
    refresh_rate_denominator*: cint
    internal*: ptr DisplayModeData_1157628719
  DisplayMode_1157628722 = struct_SDL_DisplayMode_1157628721 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:142:3
  DisplayOrientation_1157628726 = enum_SDL_DisplayOrientation_1157628725 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:156:3
  Window_1157628728 = struct_SDL_Window ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:165:27
  WindowFlags_1157628730 = Uint64_1157628449 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:179:16
  FlashOperation_1157628734 = enum_SDL_FlashOperation_1157628733 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:240:3
  GLContext_1157628736 = ptr struct_SDL_GLContextState ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:249:36
  EGLDisplay_1157628738 = pointer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:256:15
  EGLConfig_1157628740 = pointer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:257:15
  EGLSurface_1157628742 = pointer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:258:15
  EGLAttrib_1157628744 = intptr_t_1157628747 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:259:18
  intptr_t_1157628746 = clong ## Generated based on /usr/include/stdint.h:76:19
  EGLint_1157628748 = cint   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:260:13
  EGLAttribArrayCallback_1157628750 = proc (a0: pointer): ptr EGLAttrib_1157628745 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:285:34
  EGLIntArrayCallback_1157628752 = proc (a0: pointer; a1: EGLDisplay_1157628739;
      a2: EGLConfig_1157628741): ptr EGLint_1157628749 {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:316:31
  GLAttr_typedef_1157628756 = enum_SDL_GLAttr_1157628755 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:365:3
  GLProfile_typedef_1157628758 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:372:16
  GLContextFlag_typedef_1157628760 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:384:16
  GLContextReleaseFlag_typedef_1157628762 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:398:16
  GLContextResetNotification_1157628764 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:409:16
  HitTestResult_1157628768 = enum_SDL_HitTestResult_1157628767 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2585:3
  HitTest_1157628770 = proc (a0: ptr Window_1157628729; a1: ptr Point_1157628667;
                             a2: pointer): HitTestResult_1157628769 {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2597:37
  struct_SDL_DialogFileFilter_1157628772 {.pure, inheritable, bycopy.} = object
    name*: cstring           ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:61:16
    pattern*: cstring
  DialogFileFilter_1157628774 = struct_SDL_DialogFileFilter_1157628773 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:65:3
  DialogFileCallback_1157628776 = proc (a0: pointer; a1: ptr cstring; a2: cint): void {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:100:24
  FileDialogType_1157628780 = enum_SDL_FileDialogType_1157628779 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:251:3
  struct_SDL_GUID_1157628782 {.pure, inheritable, bycopy.} = object
    data*: array[16'i64, Uint8_1157628437] ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_guid.h:59:16
  GUID_1157628784 = struct_SDL_GUID_1157628783 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_guid.h:61:3
  PowerState_1157628788 = enum_SDL_PowerState_1157628787 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_power.h:55:3
  Sensor_1157628790 = struct_SDL_Sensor ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_sensor.h:47:27
  SensorID_1157628792 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_sensor.h:57:16
  SensorType_1157628796 = enum_SDL_SensorType_1157628795 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_sensor.h:135:3
  Joystick_1157628798 = struct_SDL_Joystick ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:86:29
  JoystickID_1157628800 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:98:16
  JoystickType_1157628804 = enum_SDL_JoystickType_1157628803 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:125:3
  JoystickConnectionState_1157628808 = enum_SDL_JoystickConnectionState_1157628807 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:141:3
  struct_SDL_VirtualJoystickTouchpadDesc_1157628810 {.pure, inheritable, bycopy.} = object
    nfingers*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:390:16
    padding*: array[3'i64, Uint16_1157628441]
  VirtualJoystickTouchpadDesc_1157628812 = struct_SDL_VirtualJoystickTouchpadDesc_1157628811 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:394:3
  struct_SDL_VirtualJoystickSensorDesc_1157628814 {.pure, inheritable, bycopy.} = object
    type_field*: SensorType_1157628797 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:403:16
    rate*: cfloat
  VirtualJoystickSensorDesc_1157628816 = struct_SDL_VirtualJoystickSensorDesc_1157628815 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:407:3
  struct_SDL_VirtualJoystickDesc_1157628818 {.pure, inheritable, bycopy.} = object
    version*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:422:16
    type_field*: Uint16_1157628441
    padding*: Uint16_1157628441
    vendor_id*: Uint16_1157628441
    product_id*: Uint16_1157628441
    naxes*: Uint16_1157628441
    nbuttons*: Uint16_1157628441
    nballs*: Uint16_1157628441
    nhats*: Uint16_1157628441
    ntouchpads*: Uint16_1157628441
    nsensors*: Uint16_1157628441
    padding2*: array[2'i64, Uint16_1157628441]
    button_mask*: Uint32_1157628445
    axis_mask*: Uint32_1157628445
    name*: cstring
    touchpads*: ptr VirtualJoystickTouchpadDesc_1157628813
    sensors*: ptr VirtualJoystickSensorDesc_1157628817
    userdata*: pointer
    Update*: proc (a0: pointer): void {.cdecl.}
    SetPlayerIndex*: proc (a0: pointer; a1: cint): void {.cdecl.}
    Rumble*: proc (a0: pointer; a1: Uint16_1157628441; a2: Uint16_1157628441): bool {.
        cdecl.}
    RumbleTriggers*: proc (a0: pointer; a1: Uint16_1157628441; a2: Uint16_1157628441): bool {.
        cdecl.}
    SetLED*: proc (a0: pointer; a1: Uint8_1157628437; a2: Uint8_1157628437;
                   a3: Uint8_1157628437): bool {.cdecl.}
    SendEffect*: proc (a0: pointer; a1: pointer; a2: cint): bool {.cdecl.}
    SetSensorsEnabled*: proc (a0: pointer; a1: bool): bool {.cdecl.}
    Cleanup*: proc (a0: pointer): void {.cdecl.}
  VirtualJoystickDesc_1157628820 = struct_SDL_VirtualJoystickDesc_1157628819 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:453:3
  Gamepad_1157628822 = struct_SDL_Gamepad ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:79:28
  GamepadType_1157628826 = enum_SDL_GamepadType_1157628825 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:104:3
  GamepadButton_1157628830 = enum_SDL_GamepadButton_1157628829 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:159:3
  GamepadButtonLabel_1157628834 = enum_SDL_GamepadButtonLabel_1157628833 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:183:3
  GamepadAxis_1157628838 = enum_SDL_GamepadAxis_1157628837 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:209:3
  GamepadBindingType_1157628842 = enum_SDL_GamepadBindingType_1157628841 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:227:3
  struct_SDL_GamepadBinding_input_t_axis_t {.pure, inheritable, bycopy.} = object
    axis*: cint
    axis_min*: cint
    axis_max*: cint
  struct_SDL_GamepadBinding_input_t_hat_t {.pure, inheritable, bycopy.} = object
    hat*: cint
    hat_mask*: cint
  struct_SDL_GamepadBinding_input_t {.union, bycopy.} = object
    button*: cint
    axis*: struct_SDL_GamepadBinding_input_t_axis_t
    hat*: struct_SDL_GamepadBinding_input_t_hat_t
  struct_SDL_GamepadBinding_output_t_axis_t {.pure, inheritable, bycopy.} = object
    axis*: GamepadAxis_1157628839
    axis_min*: cint
    axis_max*: cint
  struct_SDL_GamepadBinding_output_t {.union, bycopy.} = object
    button*: GamepadButton_1157628831
    axis*: struct_SDL_GamepadBinding_output_t_axis_t
  struct_SDL_GamepadBinding_1157628844 {.pure, inheritable, bycopy.} = object
    input_type*: GamepadBindingType_1157628843 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:244:16
    input*: struct_SDL_GamepadBinding_input_t
    output_type*: GamepadBindingType_1157628843
    output*: struct_SDL_GamepadBinding_output_t
  GamepadBinding_1157628846 = struct_SDL_GamepadBinding_1157628845 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:279:3
  Scancode_1157628850 = enum_SDL_Scancode_1157628849 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_scancode.h:422:3
  Keycode_1157628852 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:47:16
  Keymod_1157628854 = Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:306:16
  KeyboardID_1157628856 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:55:16
  TextInputType_1157628860 = enum_SDL_TextInputType_1157628859 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:396:3
  Capitalization_1157628864 = enum_SDL_Capitalization_1157628863 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:415:3
  MouseID_1157628866 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:52:16
  Cursor_1157628868 = struct_SDL_Cursor ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:61:27
  SystemCursor_1157628872 = enum_SDL_SystemCursor_1157628871 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:91:3
  MouseWheelDirection_1157628876 = enum_SDL_MouseWheelDirection_1157628875 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:102:3
  MouseButtonFlags_1157628878 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:119:16
  PenID_1157628880 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pen.h:60:16
  PenInputFlags_1157628882 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pen.h:68:16
  PenAxis_1157628886 = enum_SDL_PenAxis_1157628885 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pen.h:103:3
  TouchID_1157628888 = Uint64_1157628449 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_touch.h:41:16
  FingerID_1157628890 = Uint64_1157628449 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_touch.h:42:16
  TouchDeviceType_1157628894 = enum_SDL_TouchDeviceType_1157628893 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_touch.h:50:3
  struct_SDL_Finger_1157628896 {.pure, inheritable, bycopy.} = object
    id*: FingerID_1157628891 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_touch.h:63:16
    x*: cfloat
    y*: cfloat
    pressure*: cfloat
  Finger_1157628898 = struct_SDL_Finger_1157628897 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_touch.h:69:3
  EventType_1157628902 = enum_SDL_EventType_1157628901 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:255:3
  struct_SDL_CommonEvent_1157628904 {.pure, inheritable, bycopy.} = object
    type_field*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:262:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
  CommonEvent_1157628906 = struct_SDL_CommonEvent_1157628905 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:267:3
  struct_SDL_DisplayEvent_1157628908 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:274:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    displayID*: DisplayID_1157628711
    data1*: Sint32_1157628443
    data2*: Sint32_1157628443
  DisplayEvent_1157628910 = struct_SDL_DisplayEvent_1157628909 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:282:3
  struct_SDL_WindowEvent_1157628912 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:289:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    data1*: Sint32_1157628443
    data2*: Sint32_1157628443
  WindowEvent_1157628914 = struct_SDL_WindowEvent_1157628913 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:297:3
  struct_SDL_KeyboardDeviceEvent_1157628916 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:304:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: KeyboardID_1157628857
  KeyboardDeviceEvent_1157628918 = struct_SDL_KeyboardDeviceEvent_1157628917 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:310:3
  struct_SDL_KeyboardEvent_1157628920 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:326:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: KeyboardID_1157628857
    scancode*: Scancode_1157628851
    key*: Keycode_1157628853
    mod_field*: Keymod_1157628855
    raw*: Uint16_1157628441
    down*: bool
    repeat*: bool
  KeyboardEvent_1157628922 = struct_SDL_KeyboardEvent_1157628921 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:339:3
  struct_SDL_TextEditingEvent_1157628924 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:350:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    text*: cstring
    start*: Sint32_1157628443
    length*: Sint32_1157628443
  TextEditingEvent_1157628926 = struct_SDL_TextEditingEvent_1157628925 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:359:3
  struct_SDL_TextEditingCandidatesEvent_1157628928 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:366:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    candidates*: ptr cstring
    num_candidates*: Sint32_1157628443
    selected_candidate*: Sint32_1157628443
    horizontal*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  TextEditingCandidatesEvent_1157628930 = struct_SDL_TextEditingCandidatesEvent_1157628929 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:379:3
  struct_SDL_TextInputEvent_1157628932 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:392:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    text*: cstring
  TextInputEvent_1157628934 = struct_SDL_TextInputEvent_1157628933 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:399:3
  struct_SDL_MouseDeviceEvent_1157628936 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:406:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: MouseID_1157628867
  MouseDeviceEvent_1157628938 = struct_SDL_MouseDeviceEvent_1157628937 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:412:3
  struct_SDL_MouseMotionEvent_1157628940 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:419:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: MouseID_1157628867
    state*: MouseButtonFlags_1157628879
    x*: cfloat
    y*: cfloat
    xrel*: cfloat
    yrel*: cfloat
  MouseMotionEvent_1157628942 = struct_SDL_MouseMotionEvent_1157628941 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:431:3
  struct_SDL_MouseButtonEvent_1157628944 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:438:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: MouseID_1157628867
    button*: Uint8_1157628437
    down*: bool
    clicks*: Uint8_1157628437
    padding*: Uint8_1157628437
    x*: cfloat
    y*: cfloat
  MouseButtonEvent_1157628946 = struct_SDL_MouseButtonEvent_1157628945 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:451:3
  struct_SDL_MouseWheelEvent_1157628948 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:458:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: MouseID_1157628867
    x*: cfloat
    y*: cfloat
    direction*: MouseWheelDirection_1157628877
    mouse_x*: cfloat
    mouse_y*: cfloat
  MouseWheelEvent_1157628950 = struct_SDL_MouseWheelEvent_1157628949 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:470:3
  struct_SDL_JoyAxisEvent_1157628952 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:477:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    axis*: Uint8_1157628437
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
    value*: Sint16_1157628439
    padding4*: Uint16_1157628441
  JoyAxisEvent_1157628954 = struct_SDL_JoyAxisEvent_1157628953 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:489:3
  struct_SDL_JoyBallEvent_1157628956 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:496:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    ball*: Uint8_1157628437
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
    xrel*: Sint16_1157628439
    yrel*: Sint16_1157628439
  JoyBallEvent_1157628958 = struct_SDL_JoyBallEvent_1157628957 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:508:3
  struct_SDL_JoyHatEvent_1157628960 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:515:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    hat*: Uint8_1157628437
    value*: Uint8_1157628437
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  JoyHatEvent_1157628962 = struct_SDL_JoyHatEvent_1157628961 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:531:3
  struct_SDL_JoyButtonEvent_1157628964 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:538:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    button*: Uint8_1157628437
    down*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  JoyButtonEvent_1157628966 = struct_SDL_JoyButtonEvent_1157628965 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:548:3
  struct_SDL_JoyDeviceEvent_1157628968 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:560:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
  JoyDeviceEvent_1157628970 = struct_SDL_JoyDeviceEvent_1157628969 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:566:3
  struct_SDL_JoyBatteryEvent_1157628972 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:573:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    state*: PowerState_1157628789
    percent*: cint
  JoyBatteryEvent_1157628974 = struct_SDL_JoyBatteryEvent_1157628973 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:581:3
  struct_SDL_GamepadAxisEvent_1157628976 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:588:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    axis*: Uint8_1157628437
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
    value*: Sint16_1157628439
    padding4*: Uint16_1157628441
  GamepadAxisEvent_1157628978 = struct_SDL_GamepadAxisEvent_1157628977 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:600:3
  struct_SDL_GamepadButtonEvent_1157628980 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:608:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    button*: Uint8_1157628437
    down*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  GamepadButtonEvent_1157628982 = struct_SDL_GamepadButtonEvent_1157628981 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:618:3
  struct_SDL_GamepadDeviceEvent_1157628984 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:635:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
  GamepadDeviceEvent_1157628986 = struct_SDL_GamepadDeviceEvent_1157628985 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:641:3
  struct_SDL_GamepadTouchpadEvent_1157628988 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:648:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    touchpad*: Sint32_1157628443
    finger*: Sint32_1157628443
    x*: cfloat
    y*: cfloat
    pressure*: cfloat
  GamepadTouchpadEvent_1157628990 = struct_SDL_GamepadTouchpadEvent_1157628989 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:659:3
  struct_SDL_GamepadSensorEvent_1157628992 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:666:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: JoystickID_1157628801
    sensor*: Sint32_1157628443
    data*: array[3'i64, cfloat]
    sensor_timestamp*: Uint64_1157628449
  GamepadSensorEvent_1157628994 = struct_SDL_GamepadSensorEvent_1157628993 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:675:3
  struct_SDL_AudioDeviceEvent_1157628996 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:682:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: AudioDeviceID_1157628575
    recording*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  AudioDeviceEvent_1157628998 = struct_SDL_AudioDeviceEvent_1157628997 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:692:3
  struct_SDL_CameraDeviceEvent_1157629000 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:699:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: CameraID_1157628695
  CameraDeviceEvent_1157629002 = struct_SDL_CameraDeviceEvent_1157629001 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:705:3
  struct_SDL_RenderEvent_1157629004 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:713:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
  RenderEvent_1157629006 = struct_SDL_RenderEvent_1157629005 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:719:3
  struct_SDL_TouchFingerEvent_1157629008 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:741:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    touchID*: TouchID_1157628889
    fingerID*: FingerID_1157628891
    x*: cfloat
    y*: cfloat
    dx*: cfloat
    dy*: cfloat
    pressure*: cfloat
    windowID*: WindowID_1157628713
  TouchFingerEvent_1157629010 = struct_SDL_TouchFingerEvent_1157629009 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:754:3
  struct_SDL_PenProximityEvent_1157629012 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:771:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: PenID_1157628881
  PenProximityEvent_1157629014 = struct_SDL_PenProximityEvent_1157629013 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:778:3
  struct_SDL_PenMotionEvent_1157629016 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:791:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: PenID_1157628881
    pen_state*: PenInputFlags_1157628883
    x*: cfloat
    y*: cfloat
  PenMotionEvent_1157629018 = struct_SDL_PenMotionEvent_1157629017 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:801:3
  struct_SDL_PenTouchEvent_1157629020 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:811:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: PenID_1157628881
    pen_state*: PenInputFlags_1157628883
    x*: cfloat
    y*: cfloat
    eraser*: bool
    down*: bool
  PenTouchEvent_1157629022 = struct_SDL_PenTouchEvent_1157629021 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:823:3
  struct_SDL_PenButtonEvent_1157629024 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:833:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: PenID_1157628881
    pen_state*: PenInputFlags_1157628883
    x*: cfloat
    y*: cfloat
    button*: Uint8_1157628437
    down*: bool
  PenButtonEvent_1157629026 = struct_SDL_PenButtonEvent_1157629025 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:845:3
  struct_SDL_PenAxisEvent_1157629028 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:855:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    which*: PenID_1157628881
    pen_state*: PenInputFlags_1157628883
    x*: cfloat
    y*: cfloat
    axis*: PenAxis_1157628887
    value*: cfloat
  PenAxisEvent_1157629030 = struct_SDL_PenAxisEvent_1157629029 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:867:3
  struct_SDL_DropEvent_1157629032 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:875:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    x*: cfloat
    y*: cfloat
    source*: cstring
    data*: cstring
  DropEvent_1157629034 = struct_SDL_DropEvent_1157629033 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:885:3
  struct_SDL_ClipboardEvent_1157629036 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:893:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    owner*: bool
    n_mime_types*: Sint32_1157628443
    mime_types*: ptr cstring
  ClipboardEvent_1157629038 = struct_SDL_ClipboardEvent_1157629037 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:901:3
  struct_SDL_SensorEvent_1157629040 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:908:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    which*: SensorID_1157628793
    data*: array[6'i64, cfloat]
    sensor_timestamp*: Uint64_1157628449
  SensorEvent_1157629042 = struct_SDL_SensorEvent_1157629041 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:916:3
  struct_SDL_QuitEvent_1157629044 {.pure, inheritable, bycopy.} = object
    type_field*: EventType_1157628903 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:923:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
  QuitEvent_1157629046 = struct_SDL_QuitEvent_1157629045 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:928:3
  struct_SDL_UserEvent_1157629048 {.pure, inheritable, bycopy.} = object
    type_field*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:941:16
    reserved*: Uint32_1157628445
    timestamp*: Uint64_1157628449
    windowID*: WindowID_1157628713
    code*: Sint32_1157628443
    data1*: pointer
    data2*: pointer
  UserEvent_typedef_1157629050 = struct_SDL_UserEvent_1157629049 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:950:3
  union_SDL_Event_1157629052 {.union, bycopy.} = object
    type_field*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:961:15
    common*: CommonEvent_1157628907
    display*: DisplayEvent_1157628911
    window*: WindowEvent_1157628915
    kdevice*: KeyboardDeviceEvent_1157628919
    key*: KeyboardEvent_1157628923
    edit*: TextEditingEvent_1157628927
    edit_candidates*: TextEditingCandidatesEvent_1157628931
    text*: TextInputEvent_1157628935
    mdevice*: MouseDeviceEvent_1157628939
    motion*: MouseMotionEvent_1157628943
    button*: MouseButtonEvent_1157628947
    wheel*: MouseWheelEvent_1157628951
    jdevice*: JoyDeviceEvent_1157628971
    jaxis*: JoyAxisEvent_1157628955
    jball*: JoyBallEvent_1157628959
    jhat*: JoyHatEvent_1157628963
    jbutton*: JoyButtonEvent_1157628967
    jbattery*: JoyBatteryEvent_1157628975
    gdevice*: GamepadDeviceEvent_1157628987
    gaxis*: GamepadAxisEvent_1157628979
    gbutton*: GamepadButtonEvent_1157628983
    gtouchpad*: GamepadTouchpadEvent_1157628991
    gsensor*: GamepadSensorEvent_1157628995
    adevice*: AudioDeviceEvent_1157628999
    cdevice*: CameraDeviceEvent_1157629003
    sensor*: SensorEvent_1157629043
    quit*: QuitEvent_1157629047
    user*: UserEvent_typedef_1157629051
    tfinger*: TouchFingerEvent_1157629011
    pproximity*: PenProximityEvent_1157629015
    ptouch*: PenTouchEvent_1157629023
    pmotion*: PenMotionEvent_1157629019
    pbutton*: PenButtonEvent_1157629027
    paxis*: PenAxisEvent_1157629031
    render*: RenderEvent_1157629007
    drop*: DropEvent_1157629035
    clipboard*: ClipboardEvent_1157629039
    padding*: array[128'i64, Uint8_1157628437]
  Event_1157629054 = union_SDL_Event_1157629053 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:1016:3
  EventAction_1157629058 = enum_SDL_EventAction_1157629057 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:1058:3
  EventFilter_1157629060 = proc (a0: pointer; a1: ptr Event_1157629055): bool {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_events.h:1352:24
  Folder_1157629064 = enum_SDL_Folder_1157629063 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:192:3
  PathType_1157629068 = enum_SDL_PathType_1157629067 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:228:3
  struct_SDL_PathInfo_1157629070 {.pure, inheritable, bycopy.} = object
    type_field*: PathType_1157629069 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:230:16
    size*: Uint64_1157628449
    create_time*: Time_1157628451
    modify_time*: Time_1157628451
    access_time*: Time_1157628451
  PathInfo_1157629072 = struct_SDL_PathInfo_1157629071 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:237:3
  GlobFlags_1157629074 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:247:16
  EnumerationResult_1157629078 = enum_SDL_EnumerationResult_1157629077 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:279:3
  EnumerateDirectoryCallback_1157629080 = proc (a0: pointer; a1: cstring;
      a2: cstring): EnumerationResult_1157629079 {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_filesystem.h:302:41
  GPUDevice_1157629082 = struct_SDL_GPUDevice ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:186:30
  GPUBuffer_1157629084 = struct_SDL_GPUBuffer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:211:30
  GPUTransferBuffer_1157629086 = struct_SDL_GPUTransferBuffer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:229:38
  GPUTexture_1157629088 = struct_SDL_GPUTexture ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:250:31
  GPUSampler_1157629090 = struct_SDL_GPUSampler ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:262:31
  GPUShader_1157629092 = struct_SDL_GPUShader ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:273:30
  GPUComputePipeline_1157629094 = struct_SDL_GPUComputePipeline ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:286:39
  GPUGraphicsPipeline_1157629096 = struct_SDL_GPUGraphicsPipeline ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:299:40
  GPUCommandBuffer_1157629098 = struct_SDL_GPUCommandBuffer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:324:37
  GPURenderPass_1157629100 = struct_SDL_GPURenderPass ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:337:34
  GPUComputePass_1157629102 = struct_SDL_GPUComputePass ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:350:35
  GPUCopyPass_1157629104 = struct_SDL_GPUCopyPass ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:363:32
  GPUFence_1157629106 = struct_SDL_GPUFence ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:375:29
  GPUPrimitiveType_1157629110 = enum_SDL_GPUPrimitiveType_1157629109 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:391:3
  GPULoadOp_1157629114 = enum_SDL_GPULoadOp_1157629113 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:406:3
  GPUStoreOp_1157629118 = enum_SDL_GPUStoreOp_1157629117 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:422:3
  GPUIndexElementSize_1157629122 = enum_SDL_GPUIndexElementSize_1157629121 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:435:3
  GPUTextureFormat_1157629126 = enum_SDL_GPUTextureFormat_1157629125 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:646:3
  GPUTextureUsageFlags_1157629128 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:668:16
  GPUTextureType_1157629132 = enum_SDL_GPUTextureType_1157629131 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:692:3
  GPUSampleCount_1157629136 = enum_SDL_GPUSampleCount_1157629135 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:711:3
  GPUCubeMapFace_1157629140 = enum_SDL_GPUCubeMapFace_1157629139 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:729:3
  GPUBufferUsageFlags_1157629142 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:744:16
  GPUTransferBufferUsage_1157629146 = enum_SDL_GPUTransferBufferUsage_1157629145 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:767:3
  GPUShaderStage_1157629150 = enum_SDL_GPUShaderStage_1157629149 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:780:3
  GPUShaderFormat_1157629152 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:791:16
  GPUVertexElementFormat_1157629156 = enum_SDL_GPUVertexElementFormat_1157629155 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:865:3
  GPUVertexInputRate_1157629160 = enum_SDL_GPUVertexInputRate_1157629159 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:878:3
  GPUFillMode_1157629164 = enum_SDL_GPUFillMode_1157629163 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:891:3
  GPUCullMode_1157629168 = enum_SDL_GPUCullMode_1157629167 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:905:3
  GPUFrontFace_1157629172 = enum_SDL_GPUFrontFace_1157629171 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:919:3
  GPUCompareOp_1157629176 = enum_SDL_GPUCompareOp_1157629175 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:939:3
  GPUStencilOp_1157629180 = enum_SDL_GPUStencilOp_1157629179 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:960:3
  GPUBlendOp_1157629184 = enum_SDL_GPUBlendOp_1157629183 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:981:3
  GPUBlendFactor_1157629188 = enum_SDL_GPUBlendFactor_1157629187 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1010:3
  GPUColorComponentFlags_1157629190 = Uint8_1157628437 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1019:15
  GPUFilter_1157629194 = enum_SDL_GPUFilter_1157629193 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1037:3
  GPUSamplerMipmapMode_1157629198 = enum_SDL_GPUSamplerMipmapMode_1157629197 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1050:3
  GPUSamplerAddressMode_1157629202 = enum_SDL_GPUSamplerAddressMode_1157629201 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1065:3
  GPUPresentMode_1157629206 = enum_SDL_GPUPresentMode_1157629205 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1097:3
  GPUSwapchainComposition_1157629210 = enum_SDL_GPUSwapchainComposition_1157629209 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1130:3
  struct_SDL_GPUViewport_1157629212 {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1141:16
    y*: cfloat
    w*: cfloat
    h*: cfloat
    min_depth*: cfloat
    max_depth*: cfloat
  GPUViewport_1157629214 = struct_SDL_GPUViewport_1157629213 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1149:3
  struct_SDL_GPUTextureTransferInfo_1157629216 {.pure, inheritable, bycopy.} = object
    transfer_buffer*: ptr GPUTransferBuffer_1157629087 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1160:16
    offset*: Uint32_1157628445
    pixels_per_row*: Uint32_1157628445
    rows_per_layer*: Uint32_1157628445
  GPUTextureTransferInfo_1157629218 = struct_SDL_GPUTextureTransferInfo_1157629217 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1166:3
  struct_SDL_GPUTransferBufferLocation_1157629220 {.pure, inheritable, bycopy.} = object
    transfer_buffer*: ptr GPUTransferBuffer_1157629087 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1178:16
    offset*: Uint32_1157628445
  GPUTransferBufferLocation_1157629222 = struct_SDL_GPUTransferBufferLocation_1157629221 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1182:3
  struct_SDL_GPUTextureLocation_1157629224 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1193:16
    mip_level*: Uint32_1157628445
    layer*: Uint32_1157628445
    x*: Uint32_1157628445
    y*: Uint32_1157628445
    z*: Uint32_1157628445
  GPUTextureLocation_1157629226 = struct_SDL_GPUTextureLocation_1157629225 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1201:3
  struct_SDL_GPUTextureRegion_1157629228 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1213:16
    mip_level*: Uint32_1157628445
    layer*: Uint32_1157628445
    x*: Uint32_1157628445
    y*: Uint32_1157628445
    z*: Uint32_1157628445
    w*: Uint32_1157628445
    h*: Uint32_1157628445
    d*: Uint32_1157628445
  GPUTextureRegion_1157629230 = struct_SDL_GPUTextureRegion_1157629229 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1224:3
  struct_SDL_GPUBlitRegion_1157629232 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1233:16
    mip_level*: Uint32_1157628445
    layer_or_depth_plane*: Uint32_1157628445
    x*: Uint32_1157628445
    y*: Uint32_1157628445
    w*: Uint32_1157628445
    h*: Uint32_1157628445
  GPUBlitRegion_1157629234 = struct_SDL_GPUBlitRegion_1157629233 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1242:3
  struct_SDL_GPUBufferLocation_1157629236 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_1157629085 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1253:16
    offset*: Uint32_1157628445
  GPUBufferLocation_1157629238 = struct_SDL_GPUBufferLocation_1157629237 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1257:3
  struct_SDL_GPUBufferRegion_1157629240 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_1157629085 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1269:16
    offset*: Uint32_1157628445
    size*: Uint32_1157628445
  GPUBufferRegion_1157629242 = struct_SDL_GPUBufferRegion_1157629241 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1274:3
  struct_SDL_GPUIndirectDrawCommand_1157629244 {.pure, inheritable, bycopy.} = object
    num_vertices*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1288:16
    num_instances*: Uint32_1157628445
    first_vertex*: Uint32_1157628445
    first_instance*: Uint32_1157628445
  GPUIndirectDrawCommand_1157629246 = struct_SDL_GPUIndirectDrawCommand_1157629245 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1294:3
  struct_SDL_GPUIndexedIndirectDrawCommand_1157629248 {.pure, inheritable,
      bycopy.} = object
    num_indices*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1308:16
    num_instances*: Uint32_1157628445
    first_index*: Uint32_1157628445
    vertex_offset*: Sint32_1157628443
    first_instance*: Uint32_1157628445
  GPUIndexedIndirectDrawCommand_1157629250 = struct_SDL_GPUIndexedIndirectDrawCommand_1157629249 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1315:3
  struct_SDL_GPUIndirectDispatchCommand_1157629252 {.pure, inheritable, bycopy.} = object
    groupcount_x*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1324:16
    groupcount_y*: Uint32_1157628445
    groupcount_z*: Uint32_1157628445
  GPUIndirectDispatchCommand_1157629254 = struct_SDL_GPUIndirectDispatchCommand_1157629253 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1329:3
  struct_SDL_GPUSamplerCreateInfo_1157629256 {.pure, inheritable, bycopy.} = object
    min_filter*: GPUFilter_1157629195 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1340:16
    mag_filter*: GPUFilter_1157629195
    mipmap_mode*: GPUSamplerMipmapMode_1157629199
    address_mode_u*: GPUSamplerAddressMode_1157629203
    address_mode_v*: GPUSamplerAddressMode_1157629203
    address_mode_w*: GPUSamplerAddressMode_1157629203
    mip_lod_bias*: cfloat
    max_anisotropy*: cfloat
    compare_op*: GPUCompareOp_1157629177
    min_lod*: cfloat
    max_lod*: cfloat
    enable_anisotropy*: bool
    enable_compare*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    props*: PropertiesID_1157628517
  GPUSamplerCreateInfo_1157629258 = struct_SDL_GPUSamplerCreateInfo_1157629257 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1359:3
  struct_SDL_GPUVertexBufferDescription_1157629260 {.pure, inheritable, bycopy.} = object
    slot*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1379:16
    pitch*: Uint32_1157628445
    input_rate*: GPUVertexInputRate_1157629161
    instance_step_rate*: Uint32_1157628445
  GPUVertexBufferDescription_1157629262 = struct_SDL_GPUVertexBufferDescription_1157629261 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1385:3
  struct_SDL_GPUVertexAttribute_1157629264 {.pure, inheritable, bycopy.} = object
    location*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1398:16
    buffer_slot*: Uint32_1157628445
    format*: GPUVertexElementFormat_1157629157
    offset*: Uint32_1157628445
  GPUVertexAttribute_1157629266 = struct_SDL_GPUVertexAttribute_1157629265 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1404:3
  struct_SDL_GPUVertexInputState_1157629268 {.pure, inheritable, bycopy.} = object
    vertex_buffer_descriptions*: ptr GPUVertexBufferDescription_1157629263 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1414:16
    num_vertex_buffers*: Uint32_1157628445
    vertex_attributes*: ptr GPUVertexAttribute_1157629267
    num_vertex_attributes*: Uint32_1157628445
  GPUVertexInputState_1157629270 = struct_SDL_GPUVertexInputState_1157629269 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1420:3
  struct_SDL_GPUStencilOpState_1157629272 {.pure, inheritable, bycopy.} = object
    fail_op*: GPUStencilOp_1157629181 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1429:16
    pass_op*: GPUStencilOp_1157629181
    depth_fail_op*: GPUStencilOp_1157629181
    compare_op*: GPUCompareOp_1157629177
  GPUStencilOpState_1157629274 = struct_SDL_GPUStencilOpState_1157629273 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1435:3
  struct_SDL_GPUColorTargetBlendState_1157629276 {.pure, inheritable, bycopy.} = object
    src_color_blendfactor*: GPUBlendFactor_1157629189 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1444:16
    dst_color_blendfactor*: GPUBlendFactor_1157629189
    color_blend_op*: GPUBlendOp_1157629185
    src_alpha_blendfactor*: GPUBlendFactor_1157629189
    dst_alpha_blendfactor*: GPUBlendFactor_1157629189
    alpha_blend_op*: GPUBlendOp_1157629185
    color_write_mask*: GPUColorComponentFlags_1157629191
    enable_blend*: bool
    enable_color_write_mask*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  GPUColorTargetBlendState_1157629278 = struct_SDL_GPUColorTargetBlendState_1157629277 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1457:3
  struct_SDL_GPUShaderCreateInfo_1157629280 {.pure, inheritable, bycopy.} = object
    code_size*: csize_t      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1467:16
    code*: ptr Uint8_1157628437
    entrypoint*: cstring
    format*: GPUShaderFormat_1157629153
    stage*: GPUShaderStage_1157629151
    num_samplers*: Uint32_1157628445
    num_storage_textures*: Uint32_1157628445
    num_storage_buffers*: Uint32_1157628445
    num_uniform_buffers*: Uint32_1157628445
    props*: PropertiesID_1157628517
  GPUShaderCreateInfo_1157629282 = struct_SDL_GPUShaderCreateInfo_1157629281 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1480:3
  struct_SDL_GPUTextureCreateInfo_1157629284 {.pure, inheritable, bycopy.} = object
    type_field*: GPUTextureType_1157629133 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1493:16
    format*: GPUTextureFormat_1157629127
    usage*: GPUTextureUsageFlags_1157629129
    width*: Uint32_1157628445
    height*: Uint32_1157628445
    layer_count_or_depth*: Uint32_1157628445
    num_levels*: Uint32_1157628445
    sample_count*: GPUSampleCount_1157629137
    props*: PropertiesID_1157628517
  GPUTextureCreateInfo_1157629286 = struct_SDL_GPUTextureCreateInfo_1157629285 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1505:3
  struct_SDL_GPUBufferCreateInfo_1157629288 {.pure, inheritable, bycopy.} = object
    usage*: GPUBufferUsageFlags_1157629143 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1524:16
    size*: Uint32_1157628445
    props*: PropertiesID_1157628517
  GPUBufferCreateInfo_1157629290 = struct_SDL_GPUBufferCreateInfo_1157629289 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1530:3
  struct_SDL_GPUTransferBufferCreateInfo_1157629292 {.pure, inheritable, bycopy.} = object
    usage*: GPUTransferBufferUsage_1157629147 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1539:16
    size*: Uint32_1157628445
    props*: PropertiesID_1157628517
  GPUTransferBufferCreateInfo_1157629294 = struct_SDL_GPUTransferBufferCreateInfo_1157629293 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1545:3
  struct_SDL_GPURasterizerState_1157629296 {.pure, inheritable, bycopy.} = object
    fill_mode*: GPUFillMode_1157629165 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1562:16
    cull_mode*: GPUCullMode_1157629169
    front_face*: GPUFrontFace_1157629173
    depth_bias_constant_factor*: cfloat
    depth_bias_clamp*: cfloat
    depth_bias_slope_factor*: cfloat
    enable_depth_bias*: bool
    enable_depth_clip*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  GPURasterizerState_1157629298 = struct_SDL_GPURasterizerState_1157629297 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1574:3
  struct_SDL_GPUMultisampleState_1157629300 {.pure, inheritable, bycopy.} = object
    sample_count*: GPUSampleCount_1157629137 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1584:16
    sample_mask*: Uint32_1157628445
    enable_mask*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUMultisampleState_1157629302 = struct_SDL_GPUMultisampleState_1157629301 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1592:3
  struct_SDL_GPUDepthStencilState_1157629304 {.pure, inheritable, bycopy.} = object
    compare_op*: GPUCompareOp_1157629177 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1602:16
    back_stencil_state*: GPUStencilOpState_1157629275
    front_stencil_state*: GPUStencilOpState_1157629275
    compare_mask*: Uint8_1157628437
    write_mask*: Uint8_1157628437
    enable_depth_test*: bool
    enable_depth_write*: bool
    enable_stencil_test*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUDepthStencilState_1157629306 = struct_SDL_GPUDepthStencilState_1157629305 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1615:3
  struct_SDL_GPUColorTargetDescription_1157629308 {.pure, inheritable, bycopy.} = object
    format*: GPUTextureFormat_1157629127 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1625:16
    blend_state*: GPUColorTargetBlendState_1157629279
  GPUColorTargetDescription_1157629310 = struct_SDL_GPUColorTargetDescription_1157629309 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1629:3
  struct_SDL_GPUGraphicsPipelineTargetInfo_1157629312 {.pure, inheritable,
      bycopy.} = object
    color_target_descriptions*: ptr GPUColorTargetDescription_1157629311 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1639:16
    num_color_targets*: Uint32_1157628445
    depth_stencil_format*: GPUTextureFormat_1157629127
    has_depth_stencil_target*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUGraphicsPipelineTargetInfo_1157629314 = struct_SDL_GPUGraphicsPipelineTargetInfo_1157629313 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1648:3
  struct_SDL_GPUGraphicsPipelineCreateInfo_1157629316 {.pure, inheritable,
      bycopy.} = object
    vertex_shader*: ptr GPUShader_1157629093 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1657:16
    fragment_shader*: ptr GPUShader_1157629093
    vertex_input_state*: GPUVertexInputState_1157629271
    primitive_type*: GPUPrimitiveType_1157629111
    rasterizer_state*: GPURasterizerState_1157629299
    multisample_state*: GPUMultisampleState_1157629303
    depth_stencil_state*: GPUDepthStencilState_1157629307
    target_info*: GPUGraphicsPipelineTargetInfo_1157629315
    props*: PropertiesID_1157628517
  GPUGraphicsPipelineCreateInfo_1157629318 = struct_SDL_GPUGraphicsPipelineCreateInfo_1157629317 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1669:3
  struct_SDL_GPUComputePipelineCreateInfo_1157629320 {.pure, inheritable, bycopy.} = object
    code_size*: csize_t      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1678:16
    code*: ptr Uint8_1157628437
    entrypoint*: cstring
    format*: GPUShaderFormat_1157629153
    num_samplers*: Uint32_1157628445
    num_readonly_storage_textures*: Uint32_1157628445
    num_readonly_storage_buffers*: Uint32_1157628445
    num_readwrite_storage_textures*: Uint32_1157628445
    num_readwrite_storage_buffers*: Uint32_1157628445
    num_uniform_buffers*: Uint32_1157628445
    threadcount_x*: Uint32_1157628445
    threadcount_y*: Uint32_1157628445
    threadcount_z*: Uint32_1157628445
    props*: PropertiesID_1157628517
  GPUComputePipelineCreateInfo_1157629322 = struct_SDL_GPUComputePipelineCreateInfo_1157629321 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1695:3
  struct_SDL_GPUColorTargetInfo_1157629324 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1732:16
    mip_level*: Uint32_1157628445
    layer_or_depth_plane*: Uint32_1157628445
    clear_color*: FColor_1157628655
    load_op*: GPULoadOp_1157629115
    store_op*: GPUStoreOp_1157629119
    resolve_texture*: ptr GPUTexture_1157629089
    resolve_mip_level*: Uint32_1157628445
    resolve_layer*: Uint32_1157628445
    cycle*: bool
    cycle_resolve_texture*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  GPUColorTargetInfo_1157629326 = struct_SDL_GPUColorTargetInfo_1157629325 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1747:3
  struct_SDL_GPUDepthStencilTargetInfo_1157629328 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1793:16
    clear_depth*: cfloat
    load_op*: GPULoadOp_1157629115
    store_op*: GPUStoreOp_1157629119
    stencil_load_op*: GPULoadOp_1157629115
    stencil_store_op*: GPUStoreOp_1157629119
    cycle*: bool
    clear_stencil*: Uint8_1157628437
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
  GPUDepthStencilTargetInfo_1157629330 = struct_SDL_GPUDepthStencilTargetInfo_1157629329 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1805:3
  struct_SDL_GPUBlitInfo_1157629332 {.pure, inheritable, bycopy.} = object
    source*: GPUBlitRegion_1157629235 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1814:16
    destination*: GPUBlitRegion_1157629235
    load_op*: GPULoadOp_1157629115
    clear_color*: FColor_1157628655
    flip_mode*: FlipMode_1157628689
    filter*: GPUFilter_1157629195
    cycle*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUBlitInfo_1157629334 = struct_SDL_GPUBlitInfo_1157629333 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1825:3
  struct_SDL_GPUBufferBinding_1157629336 {.pure, inheritable, bycopy.} = object
    buffer*: ptr GPUBuffer_1157629085 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1837:16
    offset*: Uint32_1157628445
  GPUBufferBinding_1157629338 = struct_SDL_GPUBufferBinding_1157629337 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1841:3
  struct_SDL_GPUTextureSamplerBinding_1157629340 {.pure, inheritable, bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1851:16
    sampler*: ptr GPUSampler_1157629091
  GPUTextureSamplerBinding_1157629342 = struct_SDL_GPUTextureSamplerBinding_1157629341 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1855:3
  struct_SDL_GPUStorageBufferReadWriteBinding_1157629344 {.pure, inheritable,
      bycopy.} = object
    buffer*: ptr GPUBuffer_1157629085 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1865:16
    cycle*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUStorageBufferReadWriteBinding_1157629346 = struct_SDL_GPUStorageBufferReadWriteBinding_1157629345 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1872:3
  struct_SDL_GPUStorageTextureReadWriteBinding_1157629348 {.pure, inheritable,
      bycopy.} = object
    texture*: ptr GPUTexture_1157629089 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1882:16
    mip_level*: Uint32_1157628445
    layer*: Uint32_1157628445
    cycle*: bool
    padding1*: Uint8_1157628437
    padding2*: Uint8_1157628437
    padding3*: Uint8_1157628437
  GPUStorageTextureReadWriteBinding_1157629350 = struct_SDL_GPUStorageTextureReadWriteBinding_1157629349 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1891:3
  Haptic_1157629352 = struct_SDL_Haptic ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:150:27
  struct_SDL_HapticDirection_1157629354 {.pure, inheritable, bycopy.} = object
    type_field*: Uint8_1157628437 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:534:16
    dir*: array[3'i64, Sint32_1157628443]
  HapticDirection_1157629356 = struct_SDL_HapticDirection_1157629355 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:538:3
  struct_SDL_HapticConstant_1157629358 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:554:16
    direction*: HapticDirection_1157629357
    length*: Uint32_1157628445
    delay*: Uint16_1157628441
    button*: Uint16_1157628441
    interval*: Uint16_1157628441
    level*: Sint16_1157628439
    attack_length*: Uint16_1157628441
    attack_level*: Uint16_1157628441
    fade_length*: Uint16_1157628441
    fade_level*: Uint16_1157628441
  HapticConstant_1157629360 = struct_SDL_HapticConstant_1157629359 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:576:3
  struct_SDL_HapticPeriodic_1157629362 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:640:16
    direction*: HapticDirection_1157629357
    length*: Uint32_1157628445
    delay*: Uint16_1157628441
    button*: Uint16_1157628441
    interval*: Uint16_1157628441
    period*: Uint16_1157628441
    magnitude*: Sint16_1157628439
    offset*: Sint16_1157628439
    phase*: Uint16_1157628441
    attack_length*: Uint16_1157628441
    attack_level*: Uint16_1157628441
    fade_length*: Uint16_1157628441
    fade_level*: Uint16_1157628441
  HapticPeriodic_1157629364 = struct_SDL_HapticPeriodic_1157629363 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:667:3
  struct_SDL_HapticCondition_1157629366 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:696:16
    direction*: HapticDirection_1157629357
    length*: Uint32_1157628445
    delay*: Uint16_1157628441
    button*: Uint16_1157628441
    interval*: Uint16_1157628441
    right_sat*: array[3'i64, Uint16_1157628441]
    left_sat*: array[3'i64, Uint16_1157628441]
    right_coeff*: array[3'i64, Sint16_1157628439]
    left_coeff*: array[3'i64, Sint16_1157628439]
    deadband*: array[3'i64, Uint16_1157628441]
    center*: array[3'i64, Sint16_1157628439]
  HapticCondition_1157629368 = struct_SDL_HapticCondition_1157629367 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:718:3
  struct_SDL_HapticRamp_1157629370 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:735:16
    direction*: HapticDirection_1157629357
    length*: Uint32_1157628445
    delay*: Uint16_1157628441
    button*: Uint16_1157628441
    interval*: Uint16_1157628441
    start*: Sint16_1157628439
    end_field*: Sint16_1157628439
    attack_length*: Uint16_1157628441
    attack_level*: Uint16_1157628441
    fade_length*: Uint16_1157628441
    fade_level*: Uint16_1157628441
  HapticRamp_1157629372 = struct_SDL_HapticRamp_1157629371 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:758:3
  struct_SDL_HapticLeftRight_1157629374 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:774:16
    length*: Uint32_1157628445
    large_magnitude*: Uint16_1157628441
    small_magnitude*: Uint16_1157628441
  HapticLeftRight_1157629376 = struct_SDL_HapticLeftRight_1157629375 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:785:3
  struct_SDL_HapticCustom_1157629378 {.pure, inheritable, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:804:16
    direction*: HapticDirection_1157629357
    length*: Uint32_1157628445
    delay*: Uint16_1157628441
    button*: Uint16_1157628441
    interval*: Uint16_1157628441
    channels*: Uint8_1157628437
    period*: Uint16_1157628441
    samples*: Uint16_1157628441
    data*: ptr Uint16_1157628441
    attack_length*: Uint16_1157628441
    attack_level*: Uint16_1157628441
    fade_length*: Uint16_1157628441
    fade_level*: Uint16_1157628441
  HapticCustom_1157629380 = struct_SDL_HapticCustom_1157629379 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:829:3
  union_SDL_HapticEffect_1157629382 {.union, bycopy.} = object
    type_field*: Uint16_1157628441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:903:15
    constant*: HapticConstant_1157629361
    periodic*: HapticPeriodic_1157629365
    condition*: HapticCondition_1157629369
    ramp*: HapticRamp_1157629373
    leftright*: HapticLeftRight_1157629377
    custom*: HapticCustom_1157629381
  HapticEffect_1157629384 = union_SDL_HapticEffect_1157629383 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:913:3
  HapticID_1157629386 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:925:16
  hid_device_1157629388 = struct_SDL_hid_device ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hidapi.h:70:31
  hid_bus_type_1157629392 = enum_SDL_hid_bus_type_1157629391 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hidapi.h:103:3
  struct_SDL_hid_device_info_1157629394 {.pure, inheritable, bycopy.} = object
    path*: cstring           ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hidapi.h:112:16
    vendor_id*: cushort
    product_id*: cushort
    serial_number*: ptr wchar_t_1157628475
    release_number*: cushort
    manufacturer_string*: ptr wchar_t_1157628475
    product_string*: ptr wchar_t_1157628475
    usage_page*: cushort
    usage*: cushort
    interface_number*: cint
    interface_class*: cint
    interface_subclass*: cint
    interface_protocol*: cint
    bus_type*: hid_bus_type_1157629393
    next*: ptr struct_SDL_hid_device_info_1157629395
  hid_device_info_1157629396 = struct_SDL_hid_device_info_1157629395 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hidapi.h:155:3
  HintPriority_1157629400 = enum_SDL_HintPriority_1157629399 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4158:3
  HintCallback_1157629402 = proc (a0: pointer; a1: cstring; a2: cstring;
                                  a3: cstring): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4296:23
  InitFlags_1157629404 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:78:16
  AppResult_1157629408 = enum_SDL_AppResult_1157629407 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:114:3
  AppInit_func_1157629410 = proc (a0: ptr pointer; a1: cint;
                                  a2: ptr UncheckedArray[cstring]): AppResult_1157629409 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:116:33
  AppIterate_func_1157629412 = proc (a0: pointer): AppResult_1157629409 {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:117:33
  AppEvent_func_1157629414 = proc (a0: pointer; a1: ptr Event_1157629055): AppResult_1157629409 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:118:33
  AppQuit_func_1157629416 = proc (a0: pointer; a1: AppResult_1157629409): void {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:119:24
  MainThreadCallback_1157629418 = proc (a0: pointer): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:271:24
  SharedObject_1157629420 = struct_SDL_SharedObject ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_loadso.h:72:33
  struct_SDL_Locale_1157629422 {.pure, inheritable, bycopy.} = object
    language*: cstring       ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_locale.h:54:16
    country*: cstring
  Locale_1157629424 = struct_SDL_Locale_1157629423 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_locale.h:58:3
  LogCategory_1157629428 = enum_SDL_LogCategory_1157629427 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_log.h:114:3
  LogPriority_1157629432 = enum_SDL_LogPriority_1157629431 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_log.h:132:3
  LogOutputFunction_1157629434 = proc (a0: pointer; a1: cint; a2: LogPriority_1157629433;
                                       a3: cstring): void {.cdecl.} ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_log.h:474:24
  MessageBoxFlags_1157629436 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:48:16
  MessageBoxButtonFlags_1157629438 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:61:16
  struct_SDL_MessageBoxButtonData_1157629440 {.pure, inheritable, bycopy.} = object
    flags*: MessageBoxButtonFlags_1157629439 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:71:16
    buttonID*: cint
    text*: cstring
  MessageBoxButtonData_1157629442 = struct_SDL_MessageBoxButtonData_1157629441 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:76:3
  struct_SDL_MessageBoxColor_1157629444 {.pure, inheritable, bycopy.} = object
    r*: Uint8_1157628437     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:83:16
    g*: Uint8_1157628437
    b*: Uint8_1157628437
  MessageBoxColor_1157629446 = struct_SDL_MessageBoxColor_1157629445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:86:3
  MessageBoxColorType_1157629450 = enum_SDL_MessageBoxColorType_1157629449 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:100:3
  struct_SDL_MessageBoxColorScheme_1157629452 {.pure, inheritable, bycopy.} = object
    colors*: array[5'i64, MessageBoxColor_1157629447] ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:107:16
  MessageBoxColorScheme_1157629454 = struct_SDL_MessageBoxColorScheme_1157629453 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:110:3
  struct_SDL_MessageBoxData_1157629456 {.pure, inheritable, bycopy.} = object
    flags*: MessageBoxFlags_1157629437 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:117:16
    window*: ptr Window_1157628729
    title*: cstring
    message*: cstring
    numbuttons*: cint
    buttons*: ptr MessageBoxButtonData_1157629443
    colorScheme*: ptr MessageBoxColorScheme_1157629455
  MessageBoxData_1157629458 = struct_SDL_MessageBoxData_1157629457 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:128:3
  MetalView_1157629460 = pointer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_metal.h:44:15
  Process_1157629462 = struct_SDL_Process ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:57:28
  ProcessIO_1157629466 = enum_SDL_ProcessIO_1157629465 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:149:3
  struct_SDL_Vertex_1157629468 {.pure, inheritable, bycopy.} = object
    position*: FPoint_1157628671 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:81:16
    color*: FColor_1157628655
    tex_coord*: FPoint_1157628671
  Vertex_1157629470 = struct_SDL_Vertex_1157629469 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:86:3
  TextureAccess_1157629474 = enum_SDL_TextureAccess_1157629473 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:98:3
  RendererLogicalPresentation_1157629478 = enum_SDL_RendererLogicalPresentation_1157629477 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:112:3
  Renderer_1157629480 = struct_SDL_Renderer ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:119:29
  struct_SDL_Texture_1157629482 {.pure, inheritable, bycopy.} = object
    format*: PixelFormat_1157628619 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:133:8
    w*: cint
    h*: cint
    refcount*: cint
  Texture_1157629484 = struct_SDL_Texture_1157629483 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:143:28
  struct_SDL_StorageInterface_1157629486 {.pure, inheritable, bycopy.} = object
    version*: Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_storage.h:61:16
    close*: proc (a0: pointer): bool {.cdecl.}
    ready*: proc (a0: pointer): bool {.cdecl.}
    enumerate*: proc (a0: pointer; a1: cstring; a2: EnumerateDirectoryCallback_1157629081;
                      a3: pointer): bool {.cdecl.}
    info*: proc (a0: pointer; a1: cstring; a2: ptr PathInfo_1157629073): bool {.
        cdecl.}
    read_file*: proc (a0: pointer; a1: cstring; a2: pointer; a3: Uint64_1157628449): bool {.
        cdecl.}
    write_file*: proc (a0: pointer; a1: cstring; a2: pointer; a3: Uint64_1157628449): bool {.
        cdecl.}
    mkdir*: proc (a0: pointer; a1: cstring): bool {.cdecl.}
    remove*: proc (a0: pointer; a1: cstring): bool {.cdecl.}
    rename*: proc (a0: pointer; a1: cstring; a2: cstring): bool {.cdecl.}
    copy*: proc (a0: pointer; a1: cstring; a2: cstring): bool {.cdecl.}
    space_remaining*: proc (a0: pointer): Uint64_1157628449 {.cdecl.}
  StorageInterface_1157629488 = struct_SDL_StorageInterface_1157629487 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_storage.h:98:3
  Storage_1157629490 = struct_SDL_Storage ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_storage.h:119:28
  XEvent_1157629492 = union_XEvent ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_system.h:132:23
  X11EventHook_1157629494 = proc (a0: pointer; a1: ptr XEvent_1157629493): bool {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_system.h:133:24
  Sandbox_1157629498 = enum_SDL_Sandbox_1157629497 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_system.h:590:3
  struct_SDL_DateTime_1157629500 {.pure, inheritable, bycopy.} = object
    year*: cint              ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_time.h:46:16
    month*: cint
    day*: cint
    hour*: cint
    minute*: cint
    second*: cint
    nanosecond*: cint
    day_of_week*: cint
    utc_offset*: cint
  DateTime_1157629502 = struct_SDL_DateTime_1157629501 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_time.h:57:3
  DateFormat_1157629506 = enum_SDL_DateFormat_1157629505 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_time.h:71:3
  TimeFormat_1157629510 = enum_SDL_TimeFormat_1157629509 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_time.h:84:3
  TimerID_1157629512 = Uint32_1157628445 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:159:16
  TimerCallback_1157629514 = proc (a0: pointer; a1: TimerID_1157629513;
                                   a2: Uint32_1157628445): Uint32_1157628445 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:185:26
  NSTimerCallback_1157629516 = proc (a0: pointer; a1: TimerID_1157629513;
                                     a2: Uint64_1157628449): Uint64_1157628449 {.
      cdecl.}                ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:247:26
  struct_SDL_GPUDepthStencilState_1157629305 = (when declared(
      struct_SDL_GPUDepthStencilState):
    when ownSizeof(struct_SDL_GPUDepthStencilState) !=
        ownSizeof(struct_SDL_GPUDepthStencilState_1157629304):
      static :
        warning("Declaration of " & "struct_SDL_GPUDepthStencilState" &
            " exists but with different size")
    struct_SDL_GPUDepthStencilState
   else:
    struct_SDL_GPUDepthStencilState_1157629304)
  QuitEvent_1157629047 = (when declared(QuitEvent):
    when ownSizeof(QuitEvent) != ownSizeof(QuitEvent_1157629046):
      static :
        warning("Declaration of " & "QuitEvent" &
            " exists but with different size")
    QuitEvent
   else:
    QuitEvent_1157629046)
  GPUFillMode_1157629165 = (when declared(GPUFillMode):
    when ownSizeof(GPUFillMode) != ownSizeof(GPUFillMode_1157629164):
      static :
        warning("Declaration of " & "GPUFillMode" &
            " exists but with different size")
    GPUFillMode
   else:
    GPUFillMode_1157629164)
  GLAttr_typedef_1157628757 = (when declared(GLAttr_typedef):
    when ownSizeof(GLAttr_typedef) != ownSizeof(GLAttr_typedef_1157628756):
      static :
        warning("Declaration of " & "GLAttr_typedef" &
            " exists but with different size")
    GLAttr_typedef
   else:
    GLAttr_typedef_1157628756)
  enum_SDL_Sandbox_1157629497 = (when declared(enum_SDL_Sandbox):
    when ownSizeof(enum_SDL_Sandbox) != ownSizeof(enum_SDL_Sandbox_1157629496):
      static :
        warning("Declaration of " & "enum_SDL_Sandbox" &
            " exists but with different size")
    enum_SDL_Sandbox
   else:
    enum_SDL_Sandbox_1157629496)
  BlendFactor_1157628595 = (when declared(BlendFactor):
    when ownSizeof(BlendFactor) != ownSizeof(BlendFactor_1157628594):
      static :
        warning("Declaration of " & "BlendFactor" &
            " exists but with different size")
    BlendFactor
   else:
    BlendFactor_1157628594)
  struct_SDL_GPUColorTargetBlendState_1157629277 = (when declared(
      struct_SDL_GPUColorTargetBlendState):
    when ownSizeof(struct_SDL_GPUColorTargetBlendState) !=
        ownSizeof(struct_SDL_GPUColorTargetBlendState_1157629276):
      static :
        warning("Declaration of " & "struct_SDL_GPUColorTargetBlendState" &
            " exists but with different size")
    struct_SDL_GPUColorTargetBlendState
   else:
    struct_SDL_GPUColorTargetBlendState_1157629276)
  GPUIndexElementSize_1157629123 = (when declared(GPUIndexElementSize):
    when ownSizeof(GPUIndexElementSize) != ownSizeof(GPUIndexElementSize_1157629122):
      static :
        warning("Declaration of " & "GPUIndexElementSize" &
            " exists but with different size")
    GPUIndexElementSize
   else:
    GPUIndexElementSize_1157629122)
  enum_SDL_ProcessIO_1157629465 = (when declared(enum_SDL_ProcessIO):
    when ownSizeof(enum_SDL_ProcessIO) != ownSizeof(enum_SDL_ProcessIO_1157629464):
      static :
        warning("Declaration of " & "enum_SDL_ProcessIO" &
            " exists but with different size")
    enum_SDL_ProcessIO
   else:
    enum_SDL_ProcessIO_1157629464)
  enum_SDL_PackedOrder_1157628605 = (when declared(enum_SDL_PackedOrder):
    when ownSizeof(enum_SDL_PackedOrder) != ownSizeof(enum_SDL_PackedOrder_1157628604):
      static :
        warning("Declaration of " & "enum_SDL_PackedOrder" &
            " exists but with different size")
    enum_SDL_PackedOrder
   else:
    enum_SDL_PackedOrder_1157628604)
  PropertyType_1157628521 = (when declared(PropertyType):
    when ownSizeof(PropertyType) != ownSizeof(PropertyType_1157628520):
      static :
        warning("Declaration of " & "PropertyType" &
            " exists but with different size")
    PropertyType
   else:
    PropertyType_1157628520)
  GamepadType_1157628827 = (when declared(GamepadType):
    when ownSizeof(GamepadType) != ownSizeof(GamepadType_1157628826):
      static :
        warning("Declaration of " & "GamepadType" &
            " exists but with different size")
    GamepadType
   else:
    GamepadType_1157628826)
  EGLint_1157628749 = (when declared(EGLint):
    when ownSizeof(EGLint) != ownSizeof(EGLint_1157628748):
      static :
        warning("Declaration of " & "EGLint" & " exists but with different size")
    EGLint
   else:
    EGLint_1157628748)
  GPUTransferBufferLocation_1157629223 = (when declared(
      GPUTransferBufferLocation):
    when ownSizeof(GPUTransferBufferLocation) !=
        ownSizeof(GPUTransferBufferLocation_1157629222):
      static :
        warning("Declaration of " & "GPUTransferBufferLocation" &
            " exists but with different size")
    GPUTransferBufferLocation
   else:
    GPUTransferBufferLocation_1157629222)
  enum_SDL_Capitalization_1157628863 = (when declared(enum_SDL_Capitalization):
    when ownSizeof(enum_SDL_Capitalization) !=
        ownSizeof(enum_SDL_Capitalization_1157628862):
      static :
        warning("Declaration of " & "enum_SDL_Capitalization" &
            " exists but with different size")
    enum_SDL_Capitalization
   else:
    enum_SDL_Capitalization_1157628862)
  GPUPrimitiveType_1157629111 = (when declared(GPUPrimitiveType):
    when ownSizeof(GPUPrimitiveType) != ownSizeof(GPUPrimitiveType_1157629110):
      static :
        warning("Declaration of " & "GPUPrimitiveType" &
            " exists but with different size")
    GPUPrimitiveType
   else:
    GPUPrimitiveType_1157629110)
  GPUCompareOp_1157629177 = (when declared(GPUCompareOp):
    when ownSizeof(GPUCompareOp) != ownSizeof(GPUCompareOp_1157629176):
      static :
        warning("Declaration of " & "GPUCompareOp" &
            " exists but with different size")
    GPUCompareOp
   else:
    GPUCompareOp_1157629176)
  IOStreamInterface_1157628567 = (when declared(IOStreamInterface):
    when ownSizeof(IOStreamInterface) != ownSizeof(IOStreamInterface_1157628566):
      static :
        warning("Declaration of " & "IOStreamInterface" &
            " exists but with different size")
    IOStreamInterface
   else:
    IOStreamInterface_1157628566)
  GPUMultisampleState_1157629303 = (when declared(GPUMultisampleState):
    when ownSizeof(GPUMultisampleState) != ownSizeof(GPUMultisampleState_1157629302):
      static :
        warning("Declaration of " & "GPUMultisampleState" &
            " exists but with different size")
    GPUMultisampleState
   else:
    GPUMultisampleState_1157629302)
  InitFlags_1157629405 = (when declared(InitFlags):
    when ownSizeof(InitFlags) != ownSizeof(InitFlags_1157629404):
      static :
        warning("Declaration of " & "InitFlags" &
            " exists but with different size")
    InitFlags
   else:
    InitFlags_1157629404)
  hid_device_1157629389 = (when declared(hid_device):
    when ownSizeof(hid_device) != ownSizeof(hid_device_1157629388):
      static :
        warning("Declaration of " & "hid_device" &
            " exists but with different size")
    hid_device
   else:
    hid_device_1157629388)
  ClipboardCleanupCallback_1157628709 = (when declared(ClipboardCleanupCallback):
    when ownSizeof(ClipboardCleanupCallback) !=
        ownSizeof(ClipboardCleanupCallback_1157628708):
      static :
        warning("Declaration of " & "ClipboardCleanupCallback" &
            " exists but with different size")
    ClipboardCleanupCallback
   else:
    ClipboardCleanupCallback_1157628708)
  EGLAttrib_1157628745 = (when declared(EGLAttrib):
    when ownSizeof(EGLAttrib) != ownSizeof(EGLAttrib_1157628744):
      static :
        warning("Declaration of " & "EGLAttrib" &
            " exists but with different size")
    EGLAttrib
   else:
    EGLAttrib_1157628744)
  RendererLogicalPresentation_1157629479 = (when declared(
      RendererLogicalPresentation):
    when ownSizeof(RendererLogicalPresentation) !=
        ownSizeof(RendererLogicalPresentation_1157629478):
      static :
        warning("Declaration of " & "RendererLogicalPresentation" &
            " exists but with different size")
    RendererLogicalPresentation
   else:
    RendererLogicalPresentation_1157629478)
  struct_SDL_JoyButtonEvent_1157628965 = (when declared(
      struct_SDL_JoyButtonEvent):
    when ownSizeof(struct_SDL_JoyButtonEvent) !=
        ownSizeof(struct_SDL_JoyButtonEvent_1157628964):
      static :
        warning("Declaration of " & "struct_SDL_JoyButtonEvent" &
            " exists but with different size")
    struct_SDL_JoyButtonEvent
   else:
    struct_SDL_JoyButtonEvent_1157628964)
  enum_SDL_JoystickType_1157628803 = (when declared(enum_SDL_JoystickType):
    when ownSizeof(enum_SDL_JoystickType) != ownSizeof(enum_SDL_JoystickType_1157628802):
      static :
        warning("Declaration of " & "enum_SDL_JoystickType" &
            " exists but with different size")
    enum_SDL_JoystickType
   else:
    enum_SDL_JoystickType_1157628802)
  enum_SDL_MouseWheelDirection_1157628875 = (when declared(
      enum_SDL_MouseWheelDirection):
    when ownSizeof(enum_SDL_MouseWheelDirection) !=
        ownSizeof(enum_SDL_MouseWheelDirection_1157628874):
      static :
        warning("Declaration of " & "enum_SDL_MouseWheelDirection" &
            " exists but with different size")
    enum_SDL_MouseWheelDirection
   else:
    enum_SDL_MouseWheelDirection_1157628874)
  enum_SDL_GPUFillMode_1157629163 = (when declared(enum_SDL_GPUFillMode):
    when ownSizeof(enum_SDL_GPUFillMode) != ownSizeof(enum_SDL_GPUFillMode_1157629162):
      static :
        warning("Declaration of " & "enum_SDL_GPUFillMode" &
            " exists but with different size")
    enum_SDL_GPUFillMode
   else:
    enum_SDL_GPUFillMode_1157629162)
  struct_SDL_VirtualJoystickSensorDesc_1157628815 = (when declared(
      struct_SDL_VirtualJoystickSensorDesc):
    when ownSizeof(struct_SDL_VirtualJoystickSensorDesc) !=
        ownSizeof(struct_SDL_VirtualJoystickSensorDesc_1157628814):
      static :
        warning("Declaration of " & "struct_SDL_VirtualJoystickSensorDesc" &
            " exists but with different size")
    struct_SDL_VirtualJoystickSensorDesc
   else:
    struct_SDL_VirtualJoystickSensorDesc_1157628814)
  SystemCursor_1157628873 = (when declared(SystemCursor):
    when ownSizeof(SystemCursor) != ownSizeof(SystemCursor_1157628872):
      static :
        warning("Declaration of " & "SystemCursor" &
            " exists but with different size")
    SystemCursor
   else:
    SystemCursor_1157628872)
  struct_SDL_GamepadSensorEvent_1157628993 = (when declared(
      struct_SDL_GamepadSensorEvent):
    when ownSizeof(struct_SDL_GamepadSensorEvent) !=
        ownSizeof(struct_SDL_GamepadSensorEvent_1157628992):
      static :
        warning("Declaration of " & "struct_SDL_GamepadSensorEvent" &
            " exists but with different size")
    struct_SDL_GamepadSensorEvent
   else:
    struct_SDL_GamepadSensorEvent_1157628992)
  enum_SDL_GPUVertexInputRate_1157629159 = (when declared(
      enum_SDL_GPUVertexInputRate):
    when ownSizeof(enum_SDL_GPUVertexInputRate) !=
        ownSizeof(enum_SDL_GPUVertexInputRate_1157629158):
      static :
        warning("Declaration of " & "enum_SDL_GPUVertexInputRate" &
            " exists but with different size")
    enum_SDL_GPUVertexInputRate
   else:
    enum_SDL_GPUVertexInputRate_1157629158)
  GPUIndirectDispatchCommand_1157629255 = (when declared(
      GPUIndirectDispatchCommand):
    when ownSizeof(GPUIndirectDispatchCommand) !=
        ownSizeof(GPUIndirectDispatchCommand_1157629254):
      static :
        warning("Declaration of " & "GPUIndirectDispatchCommand" &
            " exists but with different size")
    GPUIndirectDispatchCommand
   else:
    GPUIndirectDispatchCommand_1157629254)
  Uint8_1157628437 = (when declared(Uint8):
    when ownSizeof(Uint8) != ownSizeof(Uint8_1157628436):
      static :
        warning("Declaration of " & "Uint8" & " exists but with different size")
    Uint8
   else:
    Uint8_1157628436)
  struct_SDL_AsyncIOOutcome_1157628501 = (when declared(
      struct_SDL_AsyncIOOutcome):
    when ownSizeof(struct_SDL_AsyncIOOutcome) !=
        ownSizeof(struct_SDL_AsyncIOOutcome_1157628500):
      static :
        warning("Declaration of " & "struct_SDL_AsyncIOOutcome" &
            " exists but with different size")
    struct_SDL_AsyncIOOutcome
   else:
    struct_SDL_AsyncIOOutcome_1157628500)
  SurfaceFlags_1157628681 = (when declared(SurfaceFlags):
    when ownSizeof(SurfaceFlags) != ownSizeof(SurfaceFlags_1157628680):
      static :
        warning("Declaration of " & "SurfaceFlags" &
            " exists but with different size")
    SurfaceFlags
   else:
    SurfaceFlags_1157628680)
  struct_SDL_VirtualJoystickTouchpadDesc_1157628811 = (when declared(
      struct_SDL_VirtualJoystickTouchpadDesc):
    when ownSizeof(struct_SDL_VirtualJoystickTouchpadDesc) !=
        ownSizeof(struct_SDL_VirtualJoystickTouchpadDesc_1157628810):
      static :
        warning("Declaration of " & "struct_SDL_VirtualJoystickTouchpadDesc" &
            " exists but with different size")
    struct_SDL_VirtualJoystickTouchpadDesc
   else:
    struct_SDL_VirtualJoystickTouchpadDesc_1157628810)
  ThreadPriority_1157628535 = (when declared(ThreadPriority):
    when ownSizeof(ThreadPriority) != ownSizeof(ThreadPriority_1157628534):
      static :
        warning("Declaration of " & "ThreadPriority" &
            " exists but with different size")
    ThreadPriority
   else:
    ThreadPriority_1157628534)
  GPUStencilOp_1157629181 = (when declared(GPUStencilOp):
    when ownSizeof(GPUStencilOp) != ownSizeof(GPUStencilOp_1157629180):
      static :
        warning("Declaration of " & "GPUStencilOp" &
            " exists but with different size")
    GPUStencilOp
   else:
    GPUStencilOp_1157629180)
  struct_SDL_GPUBlitInfo_1157629333 = (when declared(struct_SDL_GPUBlitInfo):
    when ownSizeof(struct_SDL_GPUBlitInfo) != ownSizeof(struct_SDL_GPUBlitInfo_1157629332):
      static :
        warning("Declaration of " & "struct_SDL_GPUBlitInfo" &
            " exists but with different size")
    struct_SDL_GPUBlitInfo
   else:
    struct_SDL_GPUBlitInfo_1157629332)
  struct_SDL_GPUComputePipelineCreateInfo_1157629321 = (when declared(
      struct_SDL_GPUComputePipelineCreateInfo):
    when ownSizeof(struct_SDL_GPUComputePipelineCreateInfo) !=
        ownSizeof(struct_SDL_GPUComputePipelineCreateInfo_1157629320):
      static :
        warning("Declaration of " & "struct_SDL_GPUComputePipelineCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUComputePipelineCreateInfo
   else:
    struct_SDL_GPUComputePipelineCreateInfo_1157629320)
  struct_SDL_GPUTextureSamplerBinding_1157629341 = (when declared(
      struct_SDL_GPUTextureSamplerBinding):
    when ownSizeof(struct_SDL_GPUTextureSamplerBinding) !=
        ownSizeof(struct_SDL_GPUTextureSamplerBinding_1157629340):
      static :
        warning("Declaration of " & "struct_SDL_GPUTextureSamplerBinding" &
            " exists but with different size")
    struct_SDL_GPUTextureSamplerBinding
   else:
    struct_SDL_GPUTextureSamplerBinding_1157629340)
  struct_SDL_hid_device_info_1157629395 = (when declared(
      struct_SDL_hid_device_info):
    when ownSizeof(struct_SDL_hid_device_info) !=
        ownSizeof(struct_SDL_hid_device_info_1157629394):
      static :
        warning("Declaration of " & "struct_SDL_hid_device_info" &
            " exists but with different size")
    struct_SDL_hid_device_info
   else:
    struct_SDL_hid_device_info_1157629394)
  struct_SDL_alignment_test_1157628453 = (when declared(
      struct_SDL_alignment_test):
    when ownSizeof(struct_SDL_alignment_test) !=
        ownSizeof(struct_SDL_alignment_test_1157628452):
      static :
        warning("Declaration of " & "struct_SDL_alignment_test" &
            " exists but with different size")
    struct_SDL_alignment_test
   else:
    struct_SDL_alignment_test_1157628452)
  Sandbox_1157629499 = (when declared(Sandbox):
    when ownSizeof(Sandbox) != ownSizeof(Sandbox_1157629498):
      static :
        warning("Declaration of " & "Sandbox" &
            " exists but with different size")
    Sandbox
   else:
    Sandbox_1157629498)
  PenAxisEvent_1157629031 = (when declared(PenAxisEvent):
    when ownSizeof(PenAxisEvent) != ownSizeof(PenAxisEvent_1157629030):
      static :
        warning("Declaration of " & "PenAxisEvent" &
            " exists but with different size")
    PenAxisEvent
   else:
    PenAxisEvent_1157629030)
  GPUVertexBufferDescription_1157629263 = (when declared(
      GPUVertexBufferDescription):
    when ownSizeof(GPUVertexBufferDescription) !=
        ownSizeof(GPUVertexBufferDescription_1157629262):
      static :
        warning("Declaration of " & "GPUVertexBufferDescription" &
            " exists but with different size")
    GPUVertexBufferDescription
   else:
    GPUVertexBufferDescription_1157629262)
  ProcessIO_1157629467 = (when declared(ProcessIO):
    when ownSizeof(ProcessIO) != ownSizeof(ProcessIO_1157629466):
      static :
        warning("Declaration of " & "ProcessIO" &
            " exists but with different size")
    ProcessIO
   else:
    ProcessIO_1157629466)
  PenInputFlags_1157628883 = (when declared(PenInputFlags):
    when ownSizeof(PenInputFlags) != ownSizeof(PenInputFlags_1157628882):
      static :
        warning("Declaration of " & "PenInputFlags" &
            " exists but with different size")
    PenInputFlags
   else:
    PenInputFlags_1157628882)
  enum_SDL_PropertyType_1157628519 = (when declared(enum_SDL_PropertyType):
    when ownSizeof(enum_SDL_PropertyType) != ownSizeof(enum_SDL_PropertyType_1157628518):
      static :
        warning("Declaration of " & "enum_SDL_PropertyType" &
            " exists but with different size")
    enum_SDL_PropertyType
   else:
    enum_SDL_PropertyType_1157628518)
  AsyncIOTaskType_1157628495 = (when declared(AsyncIOTaskType):
    when ownSizeof(AsyncIOTaskType) != ownSizeof(AsyncIOTaskType_1157628494):
      static :
        warning("Declaration of " & "AsyncIOTaskType" &
            " exists but with different size")
    AsyncIOTaskType
   else:
    AsyncIOTaskType_1157628494)
  struct_SDL_GPUVertexInputState_1157629269 = (when declared(
      struct_SDL_GPUVertexInputState):
    when ownSizeof(struct_SDL_GPUVertexInputState) !=
        ownSizeof(struct_SDL_GPUVertexInputState_1157629268):
      static :
        warning("Declaration of " & "struct_SDL_GPUVertexInputState" &
            " exists but with different size")
    struct_SDL_GPUVertexInputState
   else:
    struct_SDL_GPUVertexInputState_1157629268)
  ColorType_1157628623 = (when declared(ColorType):
    when ownSizeof(ColorType) != ownSizeof(ColorType_1157628622):
      static :
        warning("Declaration of " & "ColorType" &
            " exists but with different size")
    ColorType
   else:
    ColorType_1157628622)
  Rect_1157628675 = (when declared(Rect):
    when ownSizeof(Rect) != ownSizeof(Rect_1157628674):
      static :
        warning("Declaration of " & "Rect" & " exists but with different size")
    Rect
   else:
    Rect_1157628674)
  AudioDeviceID_1157628575 = (when declared(AudioDeviceID):
    when ownSizeof(AudioDeviceID) != ownSizeof(AudioDeviceID_1157628574):
      static :
        warning("Declaration of " & "AudioDeviceID" &
            " exists but with different size")
    AudioDeviceID
   else:
    AudioDeviceID_1157628574)
  struct_SDL_GPUIndirectDispatchCommand_1157629253 = (when declared(
      struct_SDL_GPUIndirectDispatchCommand):
    when ownSizeof(struct_SDL_GPUIndirectDispatchCommand) !=
        ownSizeof(struct_SDL_GPUIndirectDispatchCommand_1157629252):
      static :
        warning("Declaration of " & "struct_SDL_GPUIndirectDispatchCommand" &
            " exists but with different size")
    struct_SDL_GPUIndirectDispatchCommand
   else:
    struct_SDL_GPUIndirectDispatchCommand_1157629252)
  GPUViewport_1157629215 = (when declared(GPUViewport):
    when ownSizeof(GPUViewport) != ownSizeof(GPUViewport_1157629214):
      static :
        warning("Declaration of " & "GPUViewport" &
            " exists but with different size")
    GPUViewport
   else:
    GPUViewport_1157629214)
  AtomicU32_1157628515 = (when declared(AtomicU32):
    when ownSizeof(AtomicU32) != ownSizeof(AtomicU32_1157628514):
      static :
        warning("Declaration of " & "AtomicU32" &
            " exists but with different size")
    AtomicU32
   else:
    AtomicU32_1157628514)
  calloc_func_1157628463 = (when declared(calloc_func):
    when ownSizeof(calloc_func) != ownSizeof(calloc_func_1157628462):
      static :
        warning("Declaration of " & "calloc_func" &
            " exists but with different size")
    calloc_func
   else:
    calloc_func_1157628462)
  enum_SDL_ThreadPriority_1157628533 = (when declared(enum_SDL_ThreadPriority):
    when ownSizeof(enum_SDL_ThreadPriority) !=
        ownSizeof(enum_SDL_ThreadPriority_1157628532):
      static :
        warning("Declaration of " & "enum_SDL_ThreadPriority" &
            " exists but with different size")
    enum_SDL_ThreadPriority
   else:
    enum_SDL_ThreadPriority_1157628532)
  struct_SDL_PenProximityEvent_1157629013 = (when declared(
      struct_SDL_PenProximityEvent):
    when ownSizeof(struct_SDL_PenProximityEvent) !=
        ownSizeof(struct_SDL_PenProximityEvent_1157629012):
      static :
        warning("Declaration of " & "struct_SDL_PenProximityEvent" &
            " exists but with different size")
    struct_SDL_PenProximityEvent
   else:
    struct_SDL_PenProximityEvent_1157629012)
  struct_SDL_Texture_1157629483 = (when declared(struct_SDL_Texture):
    when ownSizeof(struct_SDL_Texture) != ownSizeof(struct_SDL_Texture_1157629482):
      static :
        warning("Declaration of " & "struct_SDL_Texture" &
            " exists but with different size")
    struct_SDL_Texture
   else:
    struct_SDL_Texture_1157629482)
  HapticPeriodic_1157629365 = (when declared(HapticPeriodic):
    when ownSizeof(HapticPeriodic) != ownSizeof(HapticPeriodic_1157629364):
      static :
        warning("Declaration of " & "HapticPeriodic" &
            " exists but with different size")
    HapticPeriodic
   else:
    HapticPeriodic_1157629364)
  KeyboardEvent_1157628923 = (when declared(KeyboardEvent):
    when ownSizeof(KeyboardEvent) != ownSizeof(KeyboardEvent_1157628922):
      static :
        warning("Declaration of " & "KeyboardEvent" &
            " exists but with different size")
    KeyboardEvent
   else:
    KeyboardEvent_1157628922)
  struct_SDL_UserEvent_1157629049 = (when declared(struct_SDL_UserEvent):
    when ownSizeof(struct_SDL_UserEvent) != ownSizeof(struct_SDL_UserEvent_1157629048):
      static :
        warning("Declaration of " & "struct_SDL_UserEvent" &
            " exists but with different size")
    struct_SDL_UserEvent
   else:
    struct_SDL_UserEvent_1157629048)
  struct_SDL_GPUTransferBufferLocation_1157629221 = (when declared(
      struct_SDL_GPUTransferBufferLocation):
    when ownSizeof(struct_SDL_GPUTransferBufferLocation) !=
        ownSizeof(struct_SDL_GPUTransferBufferLocation_1157629220):
      static :
        warning("Declaration of " & "struct_SDL_GPUTransferBufferLocation" &
            " exists but with different size")
    struct_SDL_GPUTransferBufferLocation
   else:
    struct_SDL_GPUTransferBufferLocation_1157629220)
  struct_SDL_GPUIndirectDrawCommand_1157629245 = (when declared(
      struct_SDL_GPUIndirectDrawCommand):
    when ownSizeof(struct_SDL_GPUIndirectDrawCommand) !=
        ownSizeof(struct_SDL_GPUIndirectDrawCommand_1157629244):
      static :
        warning("Declaration of " & "struct_SDL_GPUIndirectDrawCommand" &
            " exists but with different size")
    struct_SDL_GPUIndirectDrawCommand
   else:
    struct_SDL_GPUIndirectDrawCommand_1157629244)
  MessageBoxColorType_1157629451 = (when declared(MessageBoxColorType):
    when ownSizeof(MessageBoxColorType) != ownSizeof(MessageBoxColorType_1157629450):
      static :
        warning("Declaration of " & "MessageBoxColorType" &
            " exists but with different size")
    MessageBoxColorType
   else:
    MessageBoxColorType_1157629450)
  MessageBoxColor_1157629447 = (when declared(MessageBoxColor):
    when ownSizeof(MessageBoxColor) != ownSizeof(MessageBoxColor_1157629446):
      static :
        warning("Declaration of " & "MessageBoxColor" &
            " exists but with different size")
    MessageBoxColor
   else:
    MessageBoxColor_1157629446)
  enum_SDL_TransferCharacteristics_1157628633 = (when declared(
      enum_SDL_TransferCharacteristics):
    when ownSizeof(enum_SDL_TransferCharacteristics) !=
        ownSizeof(enum_SDL_TransferCharacteristics_1157628632):
      static :
        warning("Declaration of " & "enum_SDL_TransferCharacteristics" &
            " exists but with different size")
    enum_SDL_TransferCharacteristics
   else:
    enum_SDL_TransferCharacteristics_1157628632)
  struct_SDL_GPUStencilOpState_1157629273 = (when declared(
      struct_SDL_GPUStencilOpState):
    when ownSizeof(struct_SDL_GPUStencilOpState) !=
        ownSizeof(struct_SDL_GPUStencilOpState_1157629272):
      static :
        warning("Declaration of " & "struct_SDL_GPUStencilOpState" &
            " exists but with different size")
    struct_SDL_GPUStencilOpState
   else:
    struct_SDL_GPUStencilOpState_1157629272)
  struct_SDL_GPUBufferCreateInfo_1157629289 = (when declared(
      struct_SDL_GPUBufferCreateInfo):
    when ownSizeof(struct_SDL_GPUBufferCreateInfo) !=
        ownSizeof(struct_SDL_GPUBufferCreateInfo_1157629288):
      static :
        warning("Declaration of " & "struct_SDL_GPUBufferCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUBufferCreateInfo
   else:
    struct_SDL_GPUBufferCreateInfo_1157629288)
  LogOutputFunction_1157629435 = (when declared(LogOutputFunction):
    when ownSizeof(LogOutputFunction) != ownSizeof(LogOutputFunction_1157629434):
      static :
        warning("Declaration of " & "LogOutputFunction" &
            " exists but with different size")
    LogOutputFunction
   else:
    LogOutputFunction_1157629434)
  enum_SDL_InitStatus_1157628549 = (when declared(enum_SDL_InitStatus):
    when ownSizeof(enum_SDL_InitStatus) != ownSizeof(enum_SDL_InitStatus_1157628548):
      static :
        warning("Declaration of " & "enum_SDL_InitStatus" &
            " exists but with different size")
    enum_SDL_InitStatus
   else:
    enum_SDL_InitStatus_1157628548)
  EventType_1157628903 = (when declared(EventType):
    when ownSizeof(EventType) != ownSizeof(EventType_1157628902):
      static :
        warning("Declaration of " & "EventType" &
            " exists but with different size")
    EventType
   else:
    EventType_1157628902)
  struct_SDL_KeyboardEvent_1157628921 = (when declared(struct_SDL_KeyboardEvent):
    when ownSizeof(struct_SDL_KeyboardEvent) !=
        ownSizeof(struct_SDL_KeyboardEvent_1157628920):
      static :
        warning("Declaration of " & "struct_SDL_KeyboardEvent" &
            " exists but with different size")
    struct_SDL_KeyboardEvent
   else:
    struct_SDL_KeyboardEvent_1157628920)
  TimeFormat_1157629511 = (when declared(TimeFormat):
    when ownSizeof(TimeFormat) != ownSizeof(TimeFormat_1157629510):
      static :
        warning("Declaration of " & "TimeFormat" &
            " exists but with different size")
    TimeFormat
   else:
    TimeFormat_1157629510)
  struct_SDL_GPUTextureTransferInfo_1157629217 = (when declared(
      struct_SDL_GPUTextureTransferInfo):
    when ownSizeof(struct_SDL_GPUTextureTransferInfo) !=
        ownSizeof(struct_SDL_GPUTextureTransferInfo_1157629216):
      static :
        warning("Declaration of " & "struct_SDL_GPUTextureTransferInfo" &
            " exists but with different size")
    struct_SDL_GPUTextureTransferInfo
   else:
    struct_SDL_GPUTextureTransferInfo_1157629216)
  TouchDeviceType_1157628895 = (when declared(TouchDeviceType):
    when ownSizeof(TouchDeviceType) != ownSizeof(TouchDeviceType_1157628894):
      static :
        warning("Declaration of " & "TouchDeviceType" &
            " exists but with different size")
    TouchDeviceType
   else:
    TouchDeviceType_1157628894)
  struct_SDL_GPUDepthStencilTargetInfo_1157629329 = (when declared(
      struct_SDL_GPUDepthStencilTargetInfo):
    when ownSizeof(struct_SDL_GPUDepthStencilTargetInfo) !=
        ownSizeof(struct_SDL_GPUDepthStencilTargetInfo_1157629328):
      static :
        warning("Declaration of " & "struct_SDL_GPUDepthStencilTargetInfo" &
            " exists but with different size")
    struct_SDL_GPUDepthStencilTargetInfo
   else:
    struct_SDL_GPUDepthStencilTargetInfo_1157629328)
  struct_SDL_GPUTextureRegion_1157629229 = (when declared(
      struct_SDL_GPUTextureRegion):
    when ownSizeof(struct_SDL_GPUTextureRegion) !=
        ownSizeof(struct_SDL_GPUTextureRegion_1157629228):
      static :
        warning("Declaration of " & "struct_SDL_GPUTextureRegion" &
            " exists but with different size")
    struct_SDL_GPUTextureRegion
   else:
    struct_SDL_GPUTextureRegion_1157629228)
  struct_SDL_GPUBufferLocation_1157629237 = (when declared(
      struct_SDL_GPUBufferLocation):
    when ownSizeof(struct_SDL_GPUBufferLocation) !=
        ownSizeof(struct_SDL_GPUBufferLocation_1157629236):
      static :
        warning("Declaration of " & "struct_SDL_GPUBufferLocation" &
            " exists but with different size")
    struct_SDL_GPUBufferLocation
   else:
    struct_SDL_GPUBufferLocation_1157629236)
  struct_SDL_TextEditingCandidatesEvent_1157628929 = (when declared(
      struct_SDL_TextEditingCandidatesEvent):
    when ownSizeof(struct_SDL_TextEditingCandidatesEvent) !=
        ownSizeof(struct_SDL_TextEditingCandidatesEvent_1157628928):
      static :
        warning("Declaration of " & "struct_SDL_TextEditingCandidatesEvent" &
            " exists but with different size")
    struct_SDL_TextEditingCandidatesEvent
   else:
    struct_SDL_TextEditingCandidatesEvent_1157628928)
  BlendMode_1157628587 = (when declared(BlendMode):
    when ownSizeof(BlendMode) != ownSizeof(BlendMode_1157628586):
      static :
        warning("Declaration of " & "BlendMode" &
            " exists but with different size")
    BlendMode
   else:
    BlendMode_1157628586)
  DisplayOrientation_1157628727 = (when declared(DisplayOrientation):
    when ownSizeof(DisplayOrientation) != ownSizeof(DisplayOrientation_1157628726):
      static :
        warning("Declaration of " & "DisplayOrientation" &
            " exists but with different size")
    DisplayOrientation
   else:
    DisplayOrientation_1157628726)
  UserEvent_typedef_1157629051 = (when declared(UserEvent_typedef):
    when ownSizeof(UserEvent_typedef) != ownSizeof(UserEvent_typedef_1157629050):
      static :
        warning("Declaration of " & "UserEvent_typedef" &
            " exists but with different size")
    UserEvent_typedef
   else:
    UserEvent_typedef_1157629050)
  GPUDepthStencilState_1157629307 = (when declared(GPUDepthStencilState):
    when ownSizeof(GPUDepthStencilState) != ownSizeof(GPUDepthStencilState_1157629306):
      static :
        warning("Declaration of " & "GPUDepthStencilState" &
            " exists but with different size")
    GPUDepthStencilState
   else:
    GPUDepthStencilState_1157629306)
  enum_SDL_FileDialogType_1157628779 = (when declared(enum_SDL_FileDialogType):
    when ownSizeof(enum_SDL_FileDialogType) !=
        ownSizeof(enum_SDL_FileDialogType_1157628778):
      static :
        warning("Declaration of " & "enum_SDL_FileDialogType" &
            " exists but with different size")
    enum_SDL_FileDialogType
   else:
    enum_SDL_FileDialogType_1157628778)
  enum_SDL_GPUStencilOp_1157629179 = (when declared(enum_SDL_GPUStencilOp):
    when ownSizeof(enum_SDL_GPUStencilOp) != ownSizeof(enum_SDL_GPUStencilOp_1157629178):
      static :
        warning("Declaration of " & "enum_SDL_GPUStencilOp" &
            " exists but with different size")
    enum_SDL_GPUStencilOp
   else:
    enum_SDL_GPUStencilOp_1157629178)
  GamepadButton_1157628831 = (when declared(GamepadButton):
    when ownSizeof(GamepadButton) != ownSizeof(GamepadButton_1157628830):
      static :
        warning("Declaration of " & "GamepadButton" &
            " exists but with different size")
    GamepadButton
   else:
    GamepadButton_1157628830)
  Gamepad_1157628823 = (when declared(Gamepad):
    when ownSizeof(Gamepad) != ownSizeof(Gamepad_1157628822):
      static :
        warning("Declaration of " & "Gamepad" &
            " exists but with different size")
    Gamepad
   else:
    Gamepad_1157628822)
  GPUDepthStencilTargetInfo_1157629331 = (when declared(
      GPUDepthStencilTargetInfo):
    when ownSizeof(GPUDepthStencilTargetInfo) !=
        ownSizeof(GPUDepthStencilTargetInfo_1157629330):
      static :
        warning("Declaration of " & "GPUDepthStencilTargetInfo" &
            " exists but with different size")
    GPUDepthStencilTargetInfo
   else:
    GPUDepthStencilTargetInfo_1157629330)
  TimerCallback_1157629515 = (when declared(TimerCallback):
    when ownSizeof(TimerCallback) != ownSizeof(TimerCallback_1157629514):
      static :
        warning("Declaration of " & "TimerCallback" &
            " exists but with different size")
    TimerCallback
   else:
    TimerCallback_1157629514)
  GPUTransferBufferUsage_1157629147 = (when declared(GPUTransferBufferUsage):
    when ownSizeof(GPUTransferBufferUsage) != ownSizeof(GPUTransferBufferUsage_1157629146):
      static :
        warning("Declaration of " & "GPUTransferBufferUsage" &
            " exists but with different size")
    GPUTransferBufferUsage
   else:
    GPUTransferBufferUsage_1157629146)
  enum_SDL_GPUBlendOp_1157629183 = (when declared(enum_SDL_GPUBlendOp):
    when ownSizeof(enum_SDL_GPUBlendOp) != ownSizeof(enum_SDL_GPUBlendOp_1157629182):
      static :
        warning("Declaration of " & "enum_SDL_GPUBlendOp" &
            " exists but with different size")
    enum_SDL_GPUBlendOp
   else:
    enum_SDL_GPUBlendOp_1157629182)
  NSTimerCallback_1157629517 = (when declared(NSTimerCallback):
    when ownSizeof(NSTimerCallback) != ownSizeof(NSTimerCallback_1157629516):
      static :
        warning("Declaration of " & "NSTimerCallback" &
            " exists but with different size")
    NSTimerCallback
   else:
    NSTimerCallback_1157629516)
  hid_device_info_1157629397 = (when declared(hid_device_info):
    when ownSizeof(hid_device_info) != ownSizeof(hid_device_info_1157629396):
      static :
        warning("Declaration of " & "hid_device_info" &
            " exists but with different size")
    hid_device_info
   else:
    hid_device_info_1157629396)
  VirtualJoystickTouchpadDesc_1157628813 = (when declared(
      VirtualJoystickTouchpadDesc):
    when ownSizeof(VirtualJoystickTouchpadDesc) !=
        ownSizeof(VirtualJoystickTouchpadDesc_1157628812):
      static :
        warning("Declaration of " & "VirtualJoystickTouchpadDesc" &
            " exists but with different size")
    VirtualJoystickTouchpadDesc
   else:
    VirtualJoystickTouchpadDesc_1157628812)
  enum_SDL_IOStatus_1157628557 = (when declared(enum_SDL_IOStatus):
    when ownSizeof(enum_SDL_IOStatus) != ownSizeof(enum_SDL_IOStatus_1157628556):
      static :
        warning("Declaration of " & "enum_SDL_IOStatus" &
            " exists but with different size")
    enum_SDL_IOStatus
   else:
    enum_SDL_IOStatus_1157628556)
  DisplayModeData_1157628719 = (when declared(DisplayModeData):
    when ownSizeof(DisplayModeData) != ownSizeof(DisplayModeData_1157628718):
      static :
        warning("Declaration of " & "DisplayModeData" &
            " exists but with different size")
    DisplayModeData
   else:
    DisplayModeData_1157628718)
  Uint16_1157628441 = (when declared(Uint16):
    when ownSizeof(Uint16) != ownSizeof(Uint16_1157628440):
      static :
        warning("Declaration of " & "Uint16" & " exists but with different size")
    Uint16
   else:
    Uint16_1157628440)
  JoystickConnectionState_1157628809 = (when declared(JoystickConnectionState):
    when ownSizeof(JoystickConnectionState) !=
        ownSizeof(JoystickConnectionState_1157628808):
      static :
        warning("Declaration of " & "JoystickConnectionState" &
            " exists but with different size")
    JoystickConnectionState
   else:
    JoystickConnectionState_1157628808)
  GlobFlags_1157629075 = (when declared(GlobFlags):
    when ownSizeof(GlobFlags) != ownSizeof(GlobFlags_1157629074):
      static :
        warning("Declaration of " & "GlobFlags" &
            " exists but with different size")
    GlobFlags
   else:
    GlobFlags_1157629074)
  enum_SDL_GPULoadOp_1157629113 = (when declared(enum_SDL_GPULoadOp):
    when ownSizeof(enum_SDL_GPULoadOp) != ownSizeof(enum_SDL_GPULoadOp_1157629112):
      static :
        warning("Declaration of " & "enum_SDL_GPULoadOp" &
            " exists but with different size")
    enum_SDL_GPULoadOp
   else:
    enum_SDL_GPULoadOp_1157629112)
  GPUTextureUsageFlags_1157629129 = (when declared(GPUTextureUsageFlags):
    when ownSizeof(GPUTextureUsageFlags) != ownSizeof(GPUTextureUsageFlags_1157629128):
      static :
        warning("Declaration of " & "GPUTextureUsageFlags" &
            " exists but with different size")
    GPUTextureUsageFlags
   else:
    GPUTextureUsageFlags_1157629128)
  HintPriority_1157629401 = (when declared(HintPriority):
    when ownSizeof(HintPriority) != ownSizeof(HintPriority_1157629400):
      static :
        warning("Declaration of " & "HintPriority" &
            " exists but with different size")
    HintPriority
   else:
    HintPriority_1157629400)
  SensorEvent_1157629043 = (when declared(SensorEvent):
    when ownSizeof(SensorEvent) != ownSizeof(SensorEvent_1157629042):
      static :
        warning("Declaration of " & "SensorEvent" &
            " exists but with different size")
    SensorEvent
   else:
    SensorEvent_1157629042)
  GPUGraphicsPipelineTargetInfo_1157629315 = (when declared(
      GPUGraphicsPipelineTargetInfo):
    when ownSizeof(GPUGraphicsPipelineTargetInfo) !=
        ownSizeof(GPUGraphicsPipelineTargetInfo_1157629314):
      static :
        warning("Declaration of " & "GPUGraphicsPipelineTargetInfo" &
            " exists but with different size")
    GPUGraphicsPipelineTargetInfo
   else:
    GPUGraphicsPipelineTargetInfo_1157629314)
  FlipMode_1157628689 = (when declared(FlipMode):
    when ownSizeof(FlipMode) != ownSizeof(FlipMode_1157628688):
      static :
        warning("Declaration of " & "FlipMode" &
            " exists but with different size")
    FlipMode
   else:
    FlipMode_1157628688)
  MessageBoxFlags_1157629437 = (when declared(MessageBoxFlags):
    when ownSizeof(MessageBoxFlags) != ownSizeof(MessageBoxFlags_1157629436):
      static :
        warning("Declaration of " & "MessageBoxFlags" &
            " exists but with different size")
    MessageBoxFlags
   else:
    MessageBoxFlags_1157629436)
  enum_SDL_GamepadBindingType_1157628841 = (when declared(
      enum_SDL_GamepadBindingType):
    when ownSizeof(enum_SDL_GamepadBindingType) !=
        ownSizeof(enum_SDL_GamepadBindingType_1157628840):
      static :
        warning("Declaration of " & "enum_SDL_GamepadBindingType" &
            " exists but with different size")
    enum_SDL_GamepadBindingType
   else:
    enum_SDL_GamepadBindingType_1157628840)
  Condition_1157628547 = (when declared(Condition):
    when ownSizeof(Condition) != ownSizeof(Condition_1157628546):
      static :
        warning("Declaration of " & "Condition" &
            " exists but with different size")
    Condition
   else:
    Condition_1157628546)
  PathType_1157629069 = (when declared(PathType):
    when ownSizeof(PathType) != ownSizeof(PathType_1157629068):
      static :
        warning("Declaration of " & "PathType" &
            " exists but with different size")
    PathType
   else:
    PathType_1157629068)
  ArrayOrder_1157628611 = (when declared(ArrayOrder):
    when ownSizeof(ArrayOrder) != ownSizeof(ArrayOrder_1157628610):
      static :
        warning("Declaration of " & "ArrayOrder" &
            " exists but with different size")
    ArrayOrder
   else:
    ArrayOrder_1157628610)
  GPUTextureTransferInfo_1157629219 = (when declared(GPUTextureTransferInfo):
    when ownSizeof(GPUTextureTransferInfo) != ownSizeof(GPUTextureTransferInfo_1157629218):
      static :
        warning("Declaration of " & "GPUTextureTransferInfo" &
            " exists but with different size")
    GPUTextureTransferInfo
   else:
    GPUTextureTransferInfo_1157629218)
  MessageBoxButtonData_1157629443 = (when declared(MessageBoxButtonData):
    when ownSizeof(MessageBoxButtonData) != ownSizeof(MessageBoxButtonData_1157629442):
      static :
        warning("Declaration of " & "MessageBoxButtonData" &
            " exists but with different size")
    MessageBoxButtonData
   else:
    MessageBoxButtonData_1157629442)
  enum_SDL_TextureAccess_1157629473 = (when declared(enum_SDL_TextureAccess):
    when ownSizeof(enum_SDL_TextureAccess) != ownSizeof(enum_SDL_TextureAccess_1157629472):
      static :
        warning("Declaration of " & "enum_SDL_TextureAccess" &
            " exists but with different size")
    enum_SDL_TextureAccess
   else:
    enum_SDL_TextureAccess_1157629472)
  struct_SDL_MouseButtonEvent_1157628945 = (when declared(
      struct_SDL_MouseButtonEvent):
    when ownSizeof(struct_SDL_MouseButtonEvent) !=
        ownSizeof(struct_SDL_MouseButtonEvent_1157628944):
      static :
        warning("Declaration of " & "struct_SDL_MouseButtonEvent" &
            " exists but with different size")
    struct_SDL_MouseButtonEvent
   else:
    struct_SDL_MouseButtonEvent_1157628944)
  GPUCubeMapFace_1157629141 = (when declared(GPUCubeMapFace):
    when ownSizeof(GPUCubeMapFace) != ownSizeof(GPUCubeMapFace_1157629140):
      static :
        warning("Declaration of " & "GPUCubeMapFace" &
            " exists but with different size")
    GPUCubeMapFace
   else:
    GPUCubeMapFace_1157629140)
  struct_SDL_KeyboardDeviceEvent_1157628917 = (when declared(
      struct_SDL_KeyboardDeviceEvent):
    when ownSizeof(struct_SDL_KeyboardDeviceEvent) !=
        ownSizeof(struct_SDL_KeyboardDeviceEvent_1157628916):
      static :
        warning("Declaration of " & "struct_SDL_KeyboardDeviceEvent" &
            " exists but with different size")
    struct_SDL_KeyboardDeviceEvent
   else:
    struct_SDL_KeyboardDeviceEvent_1157628916)
  GPUFilter_1157629195 = (when declared(GPUFilter):
    when ownSizeof(GPUFilter) != ownSizeof(GPUFilter_1157629194):
      static :
        warning("Declaration of " & "GPUFilter" &
            " exists but with different size")
    GPUFilter
   else:
    GPUFilter_1157629194)
  GPUTextureRegion_1157629231 = (when declared(GPUTextureRegion):
    when ownSizeof(GPUTextureRegion) != ownSizeof(GPUTextureRegion_1157629230):
      static :
        warning("Declaration of " & "GPUTextureRegion" &
            " exists but with different size")
    GPUTextureRegion
   else:
    GPUTextureRegion_1157629230)
  HintCallback_1157629403 = (when declared(HintCallback):
    when ownSizeof(HintCallback) != ownSizeof(HintCallback_1157629402):
      static :
        warning("Declaration of " & "HintCallback" &
            " exists but with different size")
    HintCallback
   else:
    HintCallback_1157629402)
  GUID_1157628785 = (when declared(GUID):
    when ownSizeof(GUID) != ownSizeof(GUID_1157628784):
      static :
        warning("Declaration of " & "GUID" & " exists but with different size")
    GUID
   else:
    GUID_1157628784)
  Event_1157629055 = (when declared(Event):
    when ownSizeof(Event) != ownSizeof(Event_1157629054):
      static :
        warning("Declaration of " & "Event" & " exists but with different size")
    Event
   else:
    Event_1157629054)
  Time_1157628451 = (when declared(Time):
    when ownSizeof(Time) != ownSizeof(Time_1157628450):
      static :
        warning("Declaration of " & "Time" & " exists but with different size")
    Time
   else:
    Time_1157628450)
  enum_SDL_SystemCursor_1157628871 = (when declared(enum_SDL_SystemCursor):
    when ownSizeof(enum_SDL_SystemCursor) != ownSizeof(enum_SDL_SystemCursor_1157628870):
      static :
        warning("Declaration of " & "enum_SDL_SystemCursor" &
            " exists but with different size")
    enum_SDL_SystemCursor
   else:
    enum_SDL_SystemCursor_1157628870)
  enum_SDL_EnumerationResult_1157629077 = (when declared(
      enum_SDL_EnumerationResult):
    when ownSizeof(enum_SDL_EnumerationResult) !=
        ownSizeof(enum_SDL_EnumerationResult_1157629076):
      static :
        warning("Declaration of " & "enum_SDL_EnumerationResult" &
            " exists but with different size")
    enum_SDL_EnumerationResult
   else:
    enum_SDL_EnumerationResult_1157629076)
  LogPriority_1157629433 = (when declared(LogPriority):
    when ownSizeof(LogPriority) != ownSizeof(LogPriority_1157629432):
      static :
        warning("Declaration of " & "LogPriority" &
            " exists but with different size")
    LogPriority
   else:
    LogPriority_1157629432)
  enum_SDL_PowerState_1157628787 = (when declared(enum_SDL_PowerState):
    when ownSizeof(enum_SDL_PowerState) != ownSizeof(enum_SDL_PowerState_1157628786):
      static :
        warning("Declaration of " & "enum_SDL_PowerState" &
            " exists but with different size")
    enum_SDL_PowerState
   else:
    enum_SDL_PowerState_1157628786)
  enum_SDL_SensorType_1157628795 = (when declared(enum_SDL_SensorType):
    when ownSizeof(enum_SDL_SensorType) != ownSizeof(enum_SDL_SensorType_1157628794):
      static :
        warning("Declaration of " & "enum_SDL_SensorType" &
            " exists but with different size")
    enum_SDL_SensorType
   else:
    enum_SDL_SensorType_1157628794)
  SensorID_1157628793 = (when declared(SensorID):
    when ownSizeof(SensorID) != ownSizeof(SensorID_1157628792):
      static :
        warning("Declaration of " & "SensorID" &
            " exists but with different size")
    SensorID
   else:
    SensorID_1157628792)
  GPUColorTargetBlendState_1157629279 = (when declared(GPUColorTargetBlendState):
    when ownSizeof(GPUColorTargetBlendState) !=
        ownSizeof(GPUColorTargetBlendState_1157629278):
      static :
        warning("Declaration of " & "GPUColorTargetBlendState" &
            " exists but with different size")
    GPUColorTargetBlendState
   else:
    GPUColorTargetBlendState_1157629278)
  enum_SDL_GPUSwapchainComposition_1157629209 = (when declared(
      enum_SDL_GPUSwapchainComposition):
    when ownSizeof(enum_SDL_GPUSwapchainComposition) !=
        ownSizeof(enum_SDL_GPUSwapchainComposition_1157629208):
      static :
        warning("Declaration of " & "enum_SDL_GPUSwapchainComposition" &
            " exists but with different size")
    enum_SDL_GPUSwapchainComposition
   else:
    enum_SDL_GPUSwapchainComposition_1157629208)
  struct_SDL_HapticLeftRight_1157629375 = (when declared(
      struct_SDL_HapticLeftRight):
    when ownSizeof(struct_SDL_HapticLeftRight) !=
        ownSizeof(struct_SDL_HapticLeftRight_1157629374):
      static :
        warning("Declaration of " & "struct_SDL_HapticLeftRight" &
            " exists but with different size")
    struct_SDL_HapticLeftRight
   else:
    struct_SDL_HapticLeftRight_1157629374)
  AssertData_1157628487 = (when declared(AssertData):
    when ownSizeof(AssertData) != ownSizeof(AssertData_1157628486):
      static :
        warning("Declaration of " & "AssertData" &
            " exists but with different size")
    AssertData
   else:
    AssertData_1157628486)
  EventAction_1157629059 = (when declared(EventAction):
    when ownSizeof(EventAction) != ownSizeof(EventAction_1157629058):
      static :
        warning("Declaration of " & "EventAction" &
            " exists but with different size")
    EventAction
   else:
    EventAction_1157629058)
  MouseMotionEvent_1157628943 = (when declared(MouseMotionEvent):
    when ownSizeof(MouseMotionEvent) != ownSizeof(MouseMotionEvent_1157628942):
      static :
        warning("Declaration of " & "MouseMotionEvent" &
            " exists but with different size")
    MouseMotionEvent
   else:
    MouseMotionEvent_1157628942)
  struct_SDL_MouseMotionEvent_1157628941 = (when declared(
      struct_SDL_MouseMotionEvent):
    when ownSizeof(struct_SDL_MouseMotionEvent) !=
        ownSizeof(struct_SDL_MouseMotionEvent_1157628940):
      static :
        warning("Declaration of " & "struct_SDL_MouseMotionEvent" &
            " exists but with different size")
    struct_SDL_MouseMotionEvent
   else:
    struct_SDL_MouseMotionEvent_1157628940)
  AudioDeviceEvent_1157628999 = (when declared(AudioDeviceEvent):
    when ownSizeof(AudioDeviceEvent) != ownSizeof(AudioDeviceEvent_1157628998):
      static :
        warning("Declaration of " & "AudioDeviceEvent" &
            " exists but with different size")
    AudioDeviceEvent
   else:
    AudioDeviceEvent_1157628998)
  Keymod_1157628855 = (when declared(Keymod):
    when ownSizeof(Keymod) != ownSizeof(Keymod_1157628854):
      static :
        warning("Declaration of " & "Keymod" & " exists but with different size")
    Keymod
   else:
    Keymod_1157628854)
  struct_SDL_GPUColorTargetDescription_1157629309 = (when declared(
      struct_SDL_GPUColorTargetDescription):
    when ownSizeof(struct_SDL_GPUColorTargetDescription) !=
        ownSizeof(struct_SDL_GPUColorTargetDescription_1157629308):
      static :
        warning("Declaration of " & "struct_SDL_GPUColorTargetDescription" &
            " exists but with different size")
    struct_SDL_GPUColorTargetDescription
   else:
    struct_SDL_GPUColorTargetDescription_1157629308)
  enum_SDL_DUMMY_ENUM_1157628457 = (when declared(enum_SDL_DUMMY_ENUM):
    when ownSizeof(enum_SDL_DUMMY_ENUM) != ownSizeof(enum_SDL_DUMMY_ENUM_1157628456):
      static :
        warning("Declaration of " & "enum_SDL_DUMMY_ENUM" &
            " exists but with different size")
    enum_SDL_DUMMY_ENUM
   else:
    enum_SDL_DUMMY_ENUM_1157628456)
  Cursor_1157628869 = (when declared(Cursor):
    when ownSizeof(Cursor) != ownSizeof(Cursor_1157628868):
      static :
        warning("Declaration of " & "Cursor" & " exists but with different size")
    Cursor
   else:
    Cursor_1157628868)
  Storage_1157629491 = (when declared(Storage):
    when ownSizeof(Storage) != ownSizeof(Storage_1157629490):
      static :
        warning("Declaration of " & "Storage" &
            " exists but with different size")
    Storage
   else:
    Storage_1157629490)
  enum_SDL_EventAction_1157629057 = (when declared(enum_SDL_EventAction):
    when ownSizeof(enum_SDL_EventAction) != ownSizeof(enum_SDL_EventAction_1157629056):
      static :
        warning("Declaration of " & "enum_SDL_EventAction" &
            " exists but with different size")
    enum_SDL_EventAction
   else:
    enum_SDL_EventAction_1157629056)
  struct_SDL_GamepadButtonEvent_1157628981 = (when declared(
      struct_SDL_GamepadButtonEvent):
    when ownSizeof(struct_SDL_GamepadButtonEvent) !=
        ownSizeof(struct_SDL_GamepadButtonEvent_1157628980):
      static :
        warning("Declaration of " & "struct_SDL_GamepadButtonEvent" &
            " exists but with different size")
    struct_SDL_GamepadButtonEvent
   else:
    struct_SDL_GamepadButtonEvent_1157628980)
  GPUTransferBuffer_1157629087 = (when declared(GPUTransferBuffer):
    when ownSizeof(GPUTransferBuffer) != ownSizeof(GPUTransferBuffer_1157629086):
      static :
        warning("Declaration of " & "GPUTransferBuffer" &
            " exists but with different size")
    GPUTransferBuffer
   else:
    GPUTransferBuffer_1157629086)
  GLContext_1157628737 = (when declared(GLContext):
    when ownSizeof(GLContext) != ownSizeof(GLContext_1157628736):
      static :
        warning("Declaration of " & "GLContext" &
            " exists but with different size")
    GLContext
   else:
    GLContext_1157628736)
  struct_SDL_RenderEvent_1157629005 = (when declared(struct_SDL_RenderEvent):
    when ownSizeof(struct_SDL_RenderEvent) != ownSizeof(struct_SDL_RenderEvent_1157629004):
      static :
        warning("Declaration of " & "struct_SDL_RenderEvent" &
            " exists but with different size")
    struct_SDL_RenderEvent
   else:
    struct_SDL_RenderEvent_1157629004)
  struct_SDL_JoyDeviceEvent_1157628969 = (when declared(
      struct_SDL_JoyDeviceEvent):
    when ownSizeof(struct_SDL_JoyDeviceEvent) !=
        ownSizeof(struct_SDL_JoyDeviceEvent_1157628968):
      static :
        warning("Declaration of " & "struct_SDL_JoyDeviceEvent" &
            " exists but with different size")
    struct_SDL_JoyDeviceEvent
   else:
    struct_SDL_JoyDeviceEvent_1157628968)
  iconv_t_1157628477 = (when declared(iconv_t):
    when ownSizeof(iconv_t) != ownSizeof(iconv_t_1157628476):
      static :
        warning("Declaration of " & "iconv_t" &
            " exists but with different size")
    iconv_t
   else:
    iconv_t_1157628476)
  ColorRange_1157628627 = (when declared(ColorRange):
    when ownSizeof(ColorRange) != ownSizeof(ColorRange_1157628626):
      static :
        warning("Declaration of " & "ColorRange" &
            " exists but with different size")
    ColorRange
   else:
    ColorRange_1157628626)
  struct_SDL_GPUSamplerCreateInfo_1157629257 = (when declared(
      struct_SDL_GPUSamplerCreateInfo):
    when ownSizeof(struct_SDL_GPUSamplerCreateInfo) !=
        ownSizeof(struct_SDL_GPUSamplerCreateInfo_1157629256):
      static :
        warning("Declaration of " & "struct_SDL_GPUSamplerCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUSamplerCreateInfo
   else:
    struct_SDL_GPUSamplerCreateInfo_1157629256)
  Texture_1157629485 = (when declared(Texture):
    when ownSizeof(Texture) != ownSizeof(Texture_1157629484):
      static :
        warning("Declaration of " & "Texture" &
            " exists but with different size")
    Texture
   else:
    Texture_1157629484)
  SensorType_1157628797 = (when declared(SensorType):
    when ownSizeof(SensorType) != ownSizeof(SensorType_1157628796):
      static :
        warning("Declaration of " & "SensorType" &
            " exists but with different size")
    SensorType
   else:
    SensorType_1157628796)
  enum_SDL_Folder_1157629063 = (when declared(enum_SDL_Folder):
    when ownSizeof(enum_SDL_Folder) != ownSizeof(enum_SDL_Folder_1157629062):
      static :
        warning("Declaration of " & "enum_SDL_Folder" &
            " exists but with different size")
    enum_SDL_Folder
   else:
    enum_SDL_Folder_1157629062)
  enum_SDL_AsyncIOResult_1157628497 = (when declared(enum_SDL_AsyncIOResult):
    when ownSizeof(enum_SDL_AsyncIOResult) != ownSizeof(enum_SDL_AsyncIOResult_1157628496):
      static :
        warning("Declaration of " & "enum_SDL_AsyncIOResult" &
            " exists but with different size")
    enum_SDL_AsyncIOResult
   else:
    enum_SDL_AsyncIOResult_1157628496)
  PackedOrder_1157628607 = (when declared(PackedOrder):
    when ownSizeof(PackedOrder) != ownSizeof(PackedOrder_1157628606):
      static :
        warning("Declaration of " & "PackedOrder" &
            " exists but with different size")
    PackedOrder
   else:
    PackedOrder_1157628606)
  ClipboardEvent_1157629039 = (when declared(ClipboardEvent):
    when ownSizeof(ClipboardEvent) != ownSizeof(ClipboardEvent_1157629038):
      static :
        warning("Declaration of " & "ClipboardEvent" &
            " exists but with different size")
    ClipboardEvent
   else:
    ClipboardEvent_1157629038)
  GPUColorTargetInfo_1157629327 = (when declared(GPUColorTargetInfo):
    when ownSizeof(GPUColorTargetInfo) != ownSizeof(GPUColorTargetInfo_1157629326):
      static :
        warning("Declaration of " & "GPUColorTargetInfo" &
            " exists but with different size")
    GPUColorTargetInfo
   else:
    GPUColorTargetInfo_1157629326)
  JoystickType_1157628805 = (when declared(JoystickType):
    when ownSizeof(JoystickType) != ownSizeof(JoystickType_1157628804):
      static :
        warning("Declaration of " & "JoystickType" &
            " exists but with different size")
    JoystickType
   else:
    JoystickType_1157628804)
  struct_SDL_CommonEvent_1157628905 = (when declared(struct_SDL_CommonEvent):
    when ownSizeof(struct_SDL_CommonEvent) != ownSizeof(struct_SDL_CommonEvent_1157628904):
      static :
        warning("Declaration of " & "struct_SDL_CommonEvent" &
            " exists but with different size")
    struct_SDL_CommonEvent
   else:
    struct_SDL_CommonEvent_1157628904)
  enum_SDL_GPUTransferBufferUsage_1157629145 = (when declared(
      enum_SDL_GPUTransferBufferUsage):
    when ownSizeof(enum_SDL_GPUTransferBufferUsage) !=
        ownSizeof(enum_SDL_GPUTransferBufferUsage_1157629144):
      static :
        warning("Declaration of " & "enum_SDL_GPUTransferBufferUsage" &
            " exists but with different size")
    enum_SDL_GPUTransferBufferUsage
   else:
    enum_SDL_GPUTransferBufferUsage_1157629144)
  GPUVertexInputRate_1157629161 = (when declared(GPUVertexInputRate):
    when ownSizeof(GPUVertexInputRate) != ownSizeof(GPUVertexInputRate_1157629160):
      static :
        warning("Declaration of " & "GPUVertexInputRate" &
            " exists but with different size")
    GPUVertexInputRate
   else:
    GPUVertexInputRate_1157629160)
  FRect_1157628679 = (when declared(FRect):
    when ownSizeof(FRect) != ownSizeof(FRect_1157628678):
      static :
        warning("Declaration of " & "FRect" & " exists but with different size")
    FRect
   else:
    FRect_1157628678)
  struct_SDL_PenButtonEvent_1157629025 = (when declared(
      struct_SDL_PenButtonEvent):
    when ownSizeof(struct_SDL_PenButtonEvent) !=
        ownSizeof(struct_SDL_PenButtonEvent_1157629024):
      static :
        warning("Declaration of " & "struct_SDL_PenButtonEvent" &
            " exists but with different size")
    struct_SDL_PenButtonEvent
   else:
    struct_SDL_PenButtonEvent_1157629024)
  GamepadBindingType_1157628843 = (when declared(GamepadBindingType):
    when ownSizeof(GamepadBindingType) != ownSizeof(GamepadBindingType_1157628842):
      static :
        warning("Declaration of " & "GamepadBindingType" &
            " exists but with different size")
    GamepadBindingType
   else:
    GamepadBindingType_1157628842)
  struct_SDL_GPUGraphicsPipelineCreateInfo_1157629317 = (when declared(
      struct_SDL_GPUGraphicsPipelineCreateInfo):
    when ownSizeof(struct_SDL_GPUGraphicsPipelineCreateInfo) !=
        ownSizeof(struct_SDL_GPUGraphicsPipelineCreateInfo_1157629316):
      static :
        warning("Declaration of " & "struct_SDL_GPUGraphicsPipelineCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUGraphicsPipelineCreateInfo
   else:
    struct_SDL_GPUGraphicsPipelineCreateInfo_1157629316)
  CompareCallback_1157628471 = (when declared(CompareCallback):
    when ownSizeof(CompareCallback) != ownSizeof(CompareCallback_1157628470):
      static :
        warning("Declaration of " & "CompareCallback" &
            " exists but with different size")
    CompareCallback
   else:
    CompareCallback_1157628470)
  AsyncIOOutcome_1157628503 = (when declared(AsyncIOOutcome):
    when ownSizeof(AsyncIOOutcome) != ownSizeof(AsyncIOOutcome_1157628502):
      static :
        warning("Declaration of " & "AsyncIOOutcome" &
            " exists but with different size")
    AsyncIOOutcome
   else:
    AsyncIOOutcome_1157628502)
  ThreadFunction_1157628537 = (when declared(ThreadFunction):
    when ownSizeof(ThreadFunction) != ownSizeof(ThreadFunction_1157628536):
      static :
        warning("Declaration of " & "ThreadFunction" &
            " exists but with different size")
    ThreadFunction
   else:
    ThreadFunction_1157628536)
  MouseWheelEvent_1157628951 = (when declared(MouseWheelEvent):
    when ownSizeof(MouseWheelEvent) != ownSizeof(MouseWheelEvent_1157628950):
      static :
        warning("Declaration of " & "MouseWheelEvent" &
            " exists but with different size")
    MouseWheelEvent
   else:
    MouseWheelEvent_1157628950)
  PenButtonEvent_1157629027 = (when declared(PenButtonEvent):
    when ownSizeof(PenButtonEvent) != ownSizeof(PenButtonEvent_1157629026):
      static :
        warning("Declaration of " & "PenButtonEvent" &
            " exists but with different size")
    PenButtonEvent
   else:
    PenButtonEvent_1157629026)
  struct_SDL_DropEvent_1157629033 = (when declared(struct_SDL_DropEvent):
    when ownSizeof(struct_SDL_DropEvent) != ownSizeof(struct_SDL_DropEvent_1157629032):
      static :
        warning("Declaration of " & "struct_SDL_DropEvent" &
            " exists but with different size")
    struct_SDL_DropEvent
   else:
    struct_SDL_DropEvent_1157629032)
  struct_SDL_QuitEvent_1157629045 = (when declared(struct_SDL_QuitEvent):
    when ownSizeof(struct_SDL_QuitEvent) != ownSizeof(struct_SDL_QuitEvent_1157629044):
      static :
        warning("Declaration of " & "struct_SDL_QuitEvent" &
            " exists but with different size")
    struct_SDL_QuitEvent
   else:
    struct_SDL_QuitEvent_1157629044)
  struct_SDL_ClipboardEvent_1157629037 = (when declared(
      struct_SDL_ClipboardEvent):
    when ownSizeof(struct_SDL_ClipboardEvent) !=
        ownSizeof(struct_SDL_ClipboardEvent_1157629036):
      static :
        warning("Declaration of " & "struct_SDL_ClipboardEvent" &
            " exists but with different size")
    struct_SDL_ClipboardEvent
   else:
    struct_SDL_ClipboardEvent_1157629036)
  FlashOperation_1157628735 = (when declared(FlashOperation):
    when ownSizeof(FlashOperation) != ownSizeof(FlashOperation_1157628734):
      static :
        warning("Declaration of " & "FlashOperation" &
            " exists but with different size")
    FlashOperation
   else:
    FlashOperation_1157628734)
  EGLAttribArrayCallback_1157628751 = (when declared(EGLAttribArrayCallback):
    when ownSizeof(EGLAttribArrayCallback) != ownSizeof(EGLAttribArrayCallback_1157628750):
      static :
        warning("Declaration of " & "EGLAttribArrayCallback" &
            " exists but with different size")
    EGLAttribArrayCallback
   else:
    EGLAttribArrayCallback_1157628750)
  WindowEvent_1157628915 = (when declared(WindowEvent):
    when ownSizeof(WindowEvent) != ownSizeof(WindowEvent_1157628914):
      static :
        warning("Declaration of " & "WindowEvent" &
            " exists but with different size")
    WindowEvent
   else:
    WindowEvent_1157628914)
  GPUTransferBufferCreateInfo_1157629295 = (when declared(
      GPUTransferBufferCreateInfo):
    when ownSizeof(GPUTransferBufferCreateInfo) !=
        ownSizeof(GPUTransferBufferCreateInfo_1157629294):
      static :
        warning("Declaration of " & "GPUTransferBufferCreateInfo" &
            " exists but with different size")
    GPUTransferBufferCreateInfo
   else:
    GPUTransferBufferCreateInfo_1157629294)
  enum_SDL_GPUVertexElementFormat_1157629155 = (when declared(
      enum_SDL_GPUVertexElementFormat):
    when ownSizeof(enum_SDL_GPUVertexElementFormat) !=
        ownSizeof(enum_SDL_GPUVertexElementFormat_1157629154):
      static :
        warning("Declaration of " & "enum_SDL_GPUVertexElementFormat" &
            " exists but with different size")
    enum_SDL_GPUVertexElementFormat
   else:
    enum_SDL_GPUVertexElementFormat_1157629154)
  enum_SDL_GPUIndexElementSize_1157629121 = (when declared(
      enum_SDL_GPUIndexElementSize):
    when ownSizeof(enum_SDL_GPUIndexElementSize) !=
        ownSizeof(enum_SDL_GPUIndexElementSize_1157629120):
      static :
        warning("Declaration of " & "enum_SDL_GPUIndexElementSize" &
            " exists but with different size")
    enum_SDL_GPUIndexElementSize
   else:
    enum_SDL_GPUIndexElementSize_1157629120)
  MessageBoxButtonFlags_1157629439 = (when declared(MessageBoxButtonFlags):
    when ownSizeof(MessageBoxButtonFlags) != ownSizeof(MessageBoxButtonFlags_1157629438):
      static :
        warning("Declaration of " & "MessageBoxButtonFlags" &
            " exists but with different size")
    MessageBoxButtonFlags
   else:
    MessageBoxButtonFlags_1157629438)
  TLSID_1157628531 = (when declared(TLSID):
    when ownSizeof(TLSID) != ownSizeof(TLSID_1157628530):
      static :
        warning("Declaration of " & "TLSID" & " exists but with different size")
    TLSID
   else:
    TLSID_1157628530)
  CleanupPropertyCallback_1157628523 = (when declared(CleanupPropertyCallback):
    when ownSizeof(CleanupPropertyCallback) !=
        ownSizeof(CleanupPropertyCallback_1157628522):
      static :
        warning("Declaration of " & "CleanupPropertyCallback" &
            " exists but with different size")
    CleanupPropertyCallback
   else:
    CleanupPropertyCallback_1157628522)
  GPUBuffer_1157629085 = (when declared(GPUBuffer):
    when ownSizeof(GPUBuffer) != ownSizeof(GPUBuffer_1157629084):
      static :
        warning("Declaration of " & "GPUBuffer" &
            " exists but with different size")
    GPUBuffer
   else:
    GPUBuffer_1157629084)
  GLContextReleaseFlag_typedef_1157628763 = (when declared(
      GLContextReleaseFlag_typedef):
    when ownSizeof(GLContextReleaseFlag_typedef) !=
        ownSizeof(GLContextReleaseFlag_typedef_1157628762):
      static :
        warning("Declaration of " & "GLContextReleaseFlag_typedef" &
            " exists but with different size")
    GLContextReleaseFlag_typedef
   else:
    GLContextReleaseFlag_typedef_1157628762)
  enum_SDL_GPUTextureType_1157629131 = (when declared(enum_SDL_GPUTextureType):
    when ownSizeof(enum_SDL_GPUTextureType) !=
        ownSizeof(enum_SDL_GPUTextureType_1157629130):
      static :
        warning("Declaration of " & "enum_SDL_GPUTextureType" &
            " exists but with different size")
    enum_SDL_GPUTextureType
   else:
    enum_SDL_GPUTextureType_1157629130)
  struct_SDL_GamepadBinding_1157628845 = (when declared(
      struct_SDL_GamepadBinding):
    when ownSizeof(struct_SDL_GamepadBinding) !=
        ownSizeof(struct_SDL_GamepadBinding_1157628844):
      static :
        warning("Declaration of " & "struct_SDL_GamepadBinding" &
            " exists but with different size")
    struct_SDL_GamepadBinding
   else:
    struct_SDL_GamepadBinding_1157628844)
  struct_SDL_MessageBoxColor_1157629445 = (when declared(
      struct_SDL_MessageBoxColor):
    when ownSizeof(struct_SDL_MessageBoxColor) !=
        ownSizeof(struct_SDL_MessageBoxColor_1157629444):
      static :
        warning("Declaration of " & "struct_SDL_MessageBoxColor" &
            " exists but with different size")
    struct_SDL_MessageBoxColor
   else:
    struct_SDL_MessageBoxColor_1157629444)
  GPUStencilOpState_1157629275 = (when declared(GPUStencilOpState):
    when ownSizeof(GPUStencilOpState) != ownSizeof(GPUStencilOpState_1157629274):
      static :
        warning("Declaration of " & "GPUStencilOpState" &
            " exists but with different size")
    GPUStencilOpState
   else:
    GPUStencilOpState_1157629274)
  TLSDestructorCallback_1157628539 = (when declared(TLSDestructorCallback):
    when ownSizeof(TLSDestructorCallback) != ownSizeof(TLSDestructorCallback_1157628538):
      static :
        warning("Declaration of " & "TLSDestructorCallback" &
            " exists but with different size")
    TLSDestructorCallback
   else:
    TLSDestructorCallback_1157628538)
  enum_SDL_PackedLayout_1157628613 = (when declared(enum_SDL_PackedLayout):
    when ownSizeof(enum_SDL_PackedLayout) != ownSizeof(enum_SDL_PackedLayout_1157628612):
      static :
        warning("Declaration of " & "enum_SDL_PackedLayout" &
            " exists but with different size")
    enum_SDL_PackedLayout
   else:
    enum_SDL_PackedLayout_1157628612)
  enum_SDL_FlashOperation_1157628733 = (when declared(enum_SDL_FlashOperation):
    when ownSizeof(enum_SDL_FlashOperation) !=
        ownSizeof(enum_SDL_FlashOperation_1157628732):
      static :
        warning("Declaration of " & "enum_SDL_FlashOperation" &
            " exists but with different size")
    enum_SDL_FlashOperation
   else:
    enum_SDL_FlashOperation_1157628732)
  enum_SDL_GamepadButtonLabel_1157628833 = (when declared(
      enum_SDL_GamepadButtonLabel):
    when ownSizeof(enum_SDL_GamepadButtonLabel) !=
        ownSizeof(enum_SDL_GamepadButtonLabel_1157628832):
      static :
        warning("Declaration of " & "enum_SDL_GamepadButtonLabel" &
            " exists but with different size")
    enum_SDL_GamepadButtonLabel
   else:
    enum_SDL_GamepadButtonLabel_1157628832)
  Keycode_1157628853 = (when declared(Keycode):
    when ownSizeof(Keycode) != ownSizeof(Keycode_1157628852):
      static :
        warning("Declaration of " & "Keycode" &
            " exists but with different size")
    Keycode
   else:
    Keycode_1157628852)
  GPUFence_1157629107 = (when declared(GPUFence):
    when ownSizeof(GPUFence) != ownSizeof(GPUFence_1157629106):
      static :
        warning("Declaration of " & "GPUFence" &
            " exists but with different size")
    GPUFence
   else:
    GPUFence_1157629106)
  enum_SDL_ColorPrimaries_1157628629 = (when declared(enum_SDL_ColorPrimaries):
    when ownSizeof(enum_SDL_ColorPrimaries) !=
        ownSizeof(enum_SDL_ColorPrimaries_1157628628):
      static :
        warning("Declaration of " & "enum_SDL_ColorPrimaries" &
            " exists but with different size")
    enum_SDL_ColorPrimaries
   else:
    enum_SDL_ColorPrimaries_1157628628)
  struct_SDL_HapticPeriodic_1157629363 = (when declared(
      struct_SDL_HapticPeriodic):
    when ownSizeof(struct_SDL_HapticPeriodic) !=
        ownSizeof(struct_SDL_HapticPeriodic_1157629362):
      static :
        warning("Declaration of " & "struct_SDL_HapticPeriodic" &
            " exists but with different size")
    struct_SDL_HapticPeriodic
   else:
    struct_SDL_HapticPeriodic_1157629362)
  enum_SDL_CameraPosition_1157628703 = (when declared(enum_SDL_CameraPosition):
    when ownSizeof(enum_SDL_CameraPosition) !=
        ownSizeof(enum_SDL_CameraPosition_1157628702):
      static :
        warning("Declaration of " & "enum_SDL_CameraPosition" &
            " exists but with different size")
    enum_SDL_CameraPosition
   else:
    enum_SDL_CameraPosition_1157628702)
  struct_SDL_Point_1157628665 = (when declared(struct_SDL_Point):
    when ownSizeof(struct_SDL_Point) != ownSizeof(struct_SDL_Point_1157628664):
      static :
        warning("Declaration of " & "struct_SDL_Point" &
            " exists but with different size")
    struct_SDL_Point
   else:
    struct_SDL_Point_1157628664)
  GPUComputePipeline_1157629095 = (when declared(GPUComputePipeline):
    when ownSizeof(GPUComputePipeline) != ownSizeof(GPUComputePipeline_1157629094):
      static :
        warning("Declaration of " & "GPUComputePipeline" &
            " exists but with different size")
    GPUComputePipeline
   else:
    GPUComputePipeline_1157629094)
  enum_SDL_GamepadButton_1157628829 = (when declared(enum_SDL_GamepadButton):
    when ownSizeof(enum_SDL_GamepadButton) != ownSizeof(enum_SDL_GamepadButton_1157628828):
      static :
        warning("Declaration of " & "enum_SDL_GamepadButton" &
            " exists but with different size")
    enum_SDL_GamepadButton
   else:
    enum_SDL_GamepadButton_1157628828)
  struct_SDL_AssertData_1157628485 = (when declared(struct_SDL_AssertData):
    when ownSizeof(struct_SDL_AssertData) != ownSizeof(struct_SDL_AssertData_1157628484):
      static :
        warning("Declaration of " & "struct_SDL_AssertData" &
            " exists but with different size")
    struct_SDL_AssertData
   else:
    struct_SDL_AssertData_1157628484)
  enum_SDL_BlendOperation_1157628589 = (when declared(enum_SDL_BlendOperation):
    when ownSizeof(enum_SDL_BlendOperation) !=
        ownSizeof(enum_SDL_BlendOperation_1157628588):
      static :
        warning("Declaration of " & "enum_SDL_BlendOperation" &
            " exists but with different size")
    enum_SDL_BlendOperation
   else:
    enum_SDL_BlendOperation_1157628588)
  struct_SDL_GUID_1157628783 = (when declared(struct_SDL_GUID):
    when ownSizeof(struct_SDL_GUID) != ownSizeof(struct_SDL_GUID_1157628782):
      static :
        warning("Declaration of " & "struct_SDL_GUID" &
            " exists but with different size")
    struct_SDL_GUID
   else:
    struct_SDL_GUID_1157628782)
  AssertionHandler_1157628489 = (when declared(AssertionHandler):
    when ownSizeof(AssertionHandler) != ownSizeof(AssertionHandler_1157628488):
      static :
        warning("Declaration of " & "AssertionHandler" &
            " exists but with different size")
    AssertionHandler
   else:
    AssertionHandler_1157628488)
  enum_SDL_GPUSampleCount_1157629135 = (when declared(enum_SDL_GPUSampleCount):
    when ownSizeof(enum_SDL_GPUSampleCount) !=
        ownSizeof(enum_SDL_GPUSampleCount_1157629134):
      static :
        warning("Declaration of " & "enum_SDL_GPUSampleCount" &
            " exists but with different size")
    enum_SDL_GPUSampleCount
   else:
    enum_SDL_GPUSampleCount_1157629134)
  enum_SDL_GPUPresentMode_1157629205 = (when declared(enum_SDL_GPUPresentMode):
    when ownSizeof(enum_SDL_GPUPresentMode) !=
        ownSizeof(enum_SDL_GPUPresentMode_1157629204):
      static :
        warning("Declaration of " & "enum_SDL_GPUPresentMode" &
            " exists but with different size")
    enum_SDL_GPUPresentMode
   else:
    enum_SDL_GPUPresentMode_1157629204)
  GPUBlitInfo_1157629335 = (when declared(GPUBlitInfo):
    when ownSizeof(GPUBlitInfo) != ownSizeof(GPUBlitInfo_1157629334):
      static :
        warning("Declaration of " & "GPUBlitInfo" &
            " exists but with different size")
    GPUBlitInfo
   else:
    GPUBlitInfo_1157629334)
  GPUStorageBufferReadWriteBinding_1157629347 = (when declared(
      GPUStorageBufferReadWriteBinding):
    when ownSizeof(GPUStorageBufferReadWriteBinding) !=
        ownSizeof(GPUStorageBufferReadWriteBinding_1157629346):
      static :
        warning("Declaration of " & "GPUStorageBufferReadWriteBinding" &
            " exists but with different size")
    GPUStorageBufferReadWriteBinding
   else:
    GPUStorageBufferReadWriteBinding_1157629346)
  enum_SDL_PixelFormat_1157628617 = (when declared(enum_SDL_PixelFormat):
    when ownSizeof(enum_SDL_PixelFormat) != ownSizeof(enum_SDL_PixelFormat_1157628616):
      static :
        warning("Declaration of " & "enum_SDL_PixelFormat" &
            " exists but with different size")
    enum_SDL_PixelFormat
   else:
    enum_SDL_PixelFormat_1157628616)
  struct_SDL_Palette_1157628657 = (when declared(struct_SDL_Palette):
    when ownSizeof(struct_SDL_Palette) != ownSizeof(struct_SDL_Palette_1157628656):
      static :
        warning("Declaration of " & "struct_SDL_Palette" &
            " exists but with different size")
    struct_SDL_Palette
   else:
    struct_SDL_Palette_1157628656)
  PixelFormatDetails_1157628663 = (when declared(PixelFormatDetails):
    when ownSizeof(PixelFormatDetails) != ownSizeof(PixelFormatDetails_1157628662):
      static :
        warning("Declaration of " & "PixelFormatDetails" &
            " exists but with different size")
    PixelFormatDetails
   else:
    PixelFormatDetails_1157628662)
  struct_SDL_GamepadDeviceEvent_1157628985 = (when declared(
      struct_SDL_GamepadDeviceEvent):
    when ownSizeof(struct_SDL_GamepadDeviceEvent) !=
        ownSizeof(struct_SDL_GamepadDeviceEvent_1157628984):
      static :
        warning("Declaration of " & "struct_SDL_GamepadDeviceEvent" &
            " exists but with different size")
    struct_SDL_GamepadDeviceEvent
   else:
    struct_SDL_GamepadDeviceEvent_1157628984)
  struct_SDL_HapticConstant_1157629359 = (when declared(
      struct_SDL_HapticConstant):
    when ownSizeof(struct_SDL_HapticConstant) !=
        ownSizeof(struct_SDL_HapticConstant_1157629358):
      static :
        warning("Declaration of " & "struct_SDL_HapticConstant" &
            " exists but with different size")
    struct_SDL_HapticConstant
   else:
    struct_SDL_HapticConstant_1157629358)
  struct_SDL_GPUStorageBufferReadWriteBinding_1157629345 = (when declared(
      struct_SDL_GPUStorageBufferReadWriteBinding):
    when ownSizeof(struct_SDL_GPUStorageBufferReadWriteBinding) !=
        ownSizeof(struct_SDL_GPUStorageBufferReadWriteBinding_1157629344):
      static :
        warning("Declaration of " &
            "struct_SDL_GPUStorageBufferReadWriteBinding" &
            " exists but with different size")
    struct_SDL_GPUStorageBufferReadWriteBinding
   else:
    struct_SDL_GPUStorageBufferReadWriteBinding_1157629344)
  enum_SDL_GPUFilter_1157629193 = (when declared(enum_SDL_GPUFilter):
    when ownSizeof(enum_SDL_GPUFilter) != ownSizeof(enum_SDL_GPUFilter_1157629192):
      static :
        warning("Declaration of " & "enum_SDL_GPUFilter" &
            " exists but with different size")
    enum_SDL_GPUFilter
   else:
    enum_SDL_GPUFilter_1157629192)
  TextEditingEvent_1157628927 = (when declared(TextEditingEvent):
    when ownSizeof(TextEditingEvent) != ownSizeof(TextEditingEvent_1157628926):
      static :
        warning("Declaration of " & "TextEditingEvent" &
            " exists but with different size")
    TextEditingEvent
   else:
    TextEditingEvent_1157628926)
  struct_SDL_GPUShaderCreateInfo_1157629281 = (when declared(
      struct_SDL_GPUShaderCreateInfo):
    when ownSizeof(struct_SDL_GPUShaderCreateInfo) !=
        ownSizeof(struct_SDL_GPUShaderCreateInfo_1157629280):
      static :
        warning("Declaration of " & "struct_SDL_GPUShaderCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUShaderCreateInfo
   else:
    struct_SDL_GPUShaderCreateInfo_1157629280)
  Thread_1157628527 = (when declared(Thread):
    when ownSizeof(Thread) != ownSizeof(Thread_1157628526):
      static :
        warning("Declaration of " & "Thread" & " exists but with different size")
    Thread
   else:
    Thread_1157628526)
  LogCategory_1157629429 = (when declared(LogCategory):
    when ownSizeof(LogCategory) != ownSizeof(LogCategory_1157629428):
      static :
        warning("Declaration of " & "LogCategory" &
            " exists but with different size")
    LogCategory
   else:
    LogCategory_1157629428)
  Palette_1157628659 = (when declared(Palette):
    when ownSizeof(Palette) != ownSizeof(Palette_1157628658):
      static :
        warning("Declaration of " & "Palette" &
            " exists but with different size")
    Palette
   else:
    Palette_1157628658)
  DialogFileCallback_1157628777 = (when declared(DialogFileCallback):
    when ownSizeof(DialogFileCallback) != ownSizeof(DialogFileCallback_1157628776):
      static :
        warning("Declaration of " & "DialogFileCallback" &
            " exists but with different size")
    DialogFileCallback
   else:
    DialogFileCallback_1157628776)
  DateTime_1157629503 = (when declared(DateTime):
    when ownSizeof(DateTime) != ownSizeof(DateTime_1157629502):
      static :
        warning("Declaration of " & "DateTime" &
            " exists but with different size")
    DateTime
   else:
    DateTime_1157629502)
  enum_SDL_RendererLogicalPresentation_1157629477 = (when declared(
      enum_SDL_RendererLogicalPresentation):
    when ownSizeof(enum_SDL_RendererLogicalPresentation) !=
        ownSizeof(enum_SDL_RendererLogicalPresentation_1157629476):
      static :
        warning("Declaration of " & "enum_SDL_RendererLogicalPresentation" &
            " exists but with different size")
    enum_SDL_RendererLogicalPresentation
   else:
    enum_SDL_RendererLogicalPresentation_1157629476)
  enum_SDL_GPUSamplerMipmapMode_1157629197 = (when declared(
      enum_SDL_GPUSamplerMipmapMode):
    when ownSizeof(enum_SDL_GPUSamplerMipmapMode) !=
        ownSizeof(enum_SDL_GPUSamplerMipmapMode_1157629196):
      static :
        warning("Declaration of " & "enum_SDL_GPUSamplerMipmapMode" &
            " exists but with different size")
    enum_SDL_GPUSamplerMipmapMode
   else:
    enum_SDL_GPUSamplerMipmapMode_1157629196)
  TextEditingCandidatesEvent_1157628931 = (when declared(
      TextEditingCandidatesEvent):
    when ownSizeof(TextEditingCandidatesEvent) !=
        ownSizeof(TextEditingCandidatesEvent_1157628930):
      static :
        warning("Declaration of " & "TextEditingCandidatesEvent" &
            " exists but with different size")
    TextEditingCandidatesEvent
   else:
    TextEditingCandidatesEvent_1157628930)
  Renderer_1157629481 = (when declared(Renderer):
    when ownSizeof(Renderer) != ownSizeof(Renderer_1157629480):
      static :
        warning("Declaration of " & "Renderer" &
            " exists but with different size")
    Renderer
   else:
    Renderer_1157629480)
  GPUCullMode_1157629169 = (when declared(GPUCullMode):
    when ownSizeof(GPUCullMode) != ownSizeof(GPUCullMode_1157629168):
      static :
        warning("Declaration of " & "GPUCullMode" &
            " exists but with different size")
    GPUCullMode
   else:
    GPUCullMode_1157629168)
  AudioFormat_1157628573 = (when declared(AudioFormat):
    when ownSizeof(AudioFormat) != ownSizeof(AudioFormat_1157628572):
      static :
        warning("Declaration of " & "AudioFormat" &
            " exists but with different size")
    AudioFormat
   else:
    AudioFormat_1157628572)
  PenID_1157628881 = (when declared(PenID):
    when ownSizeof(PenID) != ownSizeof(PenID_1157628880):
      static :
        warning("Declaration of " & "PenID" & " exists but with different size")
    PenID
   else:
    PenID_1157628880)
  enum_SDL_ChromaLocation_1157628641 = (when declared(enum_SDL_ChromaLocation):
    when ownSizeof(enum_SDL_ChromaLocation) !=
        ownSizeof(enum_SDL_ChromaLocation_1157628640):
      static :
        warning("Declaration of " & "enum_SDL_ChromaLocation" &
            " exists but with different size")
    enum_SDL_ChromaLocation
   else:
    enum_SDL_ChromaLocation_1157628640)
  HapticDirection_1157629357 = (when declared(HapticDirection):
    when ownSizeof(HapticDirection) != ownSizeof(HapticDirection_1157629356):
      static :
        warning("Declaration of " & "HapticDirection" &
            " exists but with different size")
    HapticDirection
   else:
    HapticDirection_1157629356)
  enum_SDL_PathType_1157629067 = (when declared(enum_SDL_PathType):
    when ownSizeof(enum_SDL_PathType) != ownSizeof(enum_SDL_PathType_1157629066):
      static :
        warning("Declaration of " & "enum_SDL_PathType" &
            " exists but with different size")
    enum_SDL_PathType
   else:
    enum_SDL_PathType_1157629066)
  enum_SDL_HintPriority_1157629399 = (when declared(enum_SDL_HintPriority):
    when ownSizeof(enum_SDL_HintPriority) != ownSizeof(enum_SDL_HintPriority_1157629398):
      static :
        warning("Declaration of " & "enum_SDL_HintPriority" &
            " exists but with different size")
    enum_SDL_HintPriority
   else:
    enum_SDL_HintPriority_1157629398)
  DisplayEvent_1157628911 = (when declared(DisplayEvent):
    when ownSizeof(DisplayEvent) != ownSizeof(DisplayEvent_1157628910):
      static :
        warning("Declaration of " & "DisplayEvent" &
            " exists but with different size")
    DisplayEvent
   else:
    DisplayEvent_1157628910)
  struct_SDL_GPUColorTargetInfo_1157629325 = (when declared(
      struct_SDL_GPUColorTargetInfo):
    when ownSizeof(struct_SDL_GPUColorTargetInfo) !=
        ownSizeof(struct_SDL_GPUColorTargetInfo_1157629324):
      static :
        warning("Declaration of " & "struct_SDL_GPUColorTargetInfo" &
            " exists but with different size")
    struct_SDL_GPUColorTargetInfo
   else:
    struct_SDL_GPUColorTargetInfo_1157629324)
  DateFormat_1157629507 = (when declared(DateFormat):
    when ownSizeof(DateFormat) != ownSizeof(DateFormat_1157629506):
      static :
        warning("Declaration of " & "DateFormat" &
            " exists but with different size")
    DateFormat
   else:
    DateFormat_1157629506)
  DialogFileFilter_1157628775 = (when declared(DialogFileFilter):
    when ownSizeof(DialogFileFilter) != ownSizeof(DialogFileFilter_1157628774):
      static :
        warning("Declaration of " & "DialogFileFilter" &
            " exists but with different size")
    DialogFileFilter
   else:
    DialogFileFilter_1157628774)
  InitState_1157628555 = (when declared(InitState):
    when ownSizeof(InitState) != ownSizeof(InitState_1157628554):
      static :
        warning("Declaration of " & "InitState" &
            " exists but with different size")
    InitState
   else:
    InitState_1157628554)
  GPUStoreOp_1157629119 = (when declared(GPUStoreOp):
    when ownSizeof(GPUStoreOp) != ownSizeof(GPUStoreOp_1157629118):
      static :
        warning("Declaration of " & "GPUStoreOp" &
            " exists but with different size")
    GPUStoreOp
   else:
    GPUStoreOp_1157629118)
  Uint64_1157628449 = (when declared(Uint64):
    when ownSizeof(Uint64) != ownSizeof(Uint64_1157628448):
      static :
        warning("Declaration of " & "Uint64" & " exists but with different size")
    Uint64
   else:
    Uint64_1157628448)
  realloc_func_1157628465 = (when declared(realloc_func):
    when ownSizeof(realloc_func) != ownSizeof(realloc_func_1157628464):
      static :
        warning("Declaration of " & "realloc_func" &
            " exists but with different size")
    realloc_func
   else:
    realloc_func_1157628464)
  Colorspace_1157628647 = (when declared(Colorspace):
    when ownSizeof(Colorspace) != ownSizeof(Colorspace_1157628646):
      static :
        warning("Declaration of " & "Colorspace" &
            " exists but with different size")
    Colorspace
   else:
    Colorspace_1157628646)
  PenMotionEvent_1157629019 = (when declared(PenMotionEvent):
    when ownSizeof(PenMotionEvent) != ownSizeof(PenMotionEvent_1157629018):
      static :
        warning("Declaration of " & "PenMotionEvent" &
            " exists but with different size")
    PenMotionEvent
   else:
    PenMotionEvent_1157629018)
  AsyncIOQueue_1157628505 = (when declared(AsyncIOQueue):
    when ownSizeof(AsyncIOQueue) != ownSizeof(AsyncIOQueue_1157628504):
      static :
        warning("Declaration of " & "AsyncIOQueue" &
            " exists but with different size")
    AsyncIOQueue
   else:
    AsyncIOQueue_1157628504)
  enum_SDL_LogCategory_1157629427 = (when declared(enum_SDL_LogCategory):
    when ownSizeof(enum_SDL_LogCategory) != ownSizeof(enum_SDL_LogCategory_1157629426):
      static :
        warning("Declaration of " & "enum_SDL_LogCategory" &
            " exists but with different size")
    enum_SDL_LogCategory
   else:
    enum_SDL_LogCategory_1157629426)
  enum_SDL_BlendFactor_1157628593 = (when declared(enum_SDL_BlendFactor):
    when ownSizeof(enum_SDL_BlendFactor) != ownSizeof(enum_SDL_BlendFactor_1157628592):
      static :
        warning("Declaration of " & "enum_SDL_BlendFactor" &
            " exists but with different size")
    enum_SDL_BlendFactor
   else:
    enum_SDL_BlendFactor_1157628592)
  ThreadID_1157628529 = (when declared(ThreadID):
    when ownSizeof(ThreadID) != ownSizeof(ThreadID_1157628528):
      static :
        warning("Declaration of " & "ThreadID" &
            " exists but with different size")
    ThreadID
   else:
    ThreadID_1157628528)
  enum_SDL_GLAttr_1157628755 = (when declared(enum_SDL_GLAttr):
    when ownSizeof(enum_SDL_GLAttr) != ownSizeof(enum_SDL_GLAttr_1157628754):
      static :
        warning("Declaration of " & "enum_SDL_GLAttr" &
            " exists but with different size")
    enum_SDL_GLAttr
   else:
    enum_SDL_GLAttr_1157628754)
  GPUPresentMode_1157629207 = (when declared(GPUPresentMode):
    when ownSizeof(GPUPresentMode) != ownSizeof(GPUPresentMode_1157629206):
      static :
        warning("Declaration of " & "GPUPresentMode" &
            " exists but with different size")
    GPUPresentMode
   else:
    GPUPresentMode_1157629206)
  JoyAxisEvent_1157628955 = (when declared(JoyAxisEvent):
    when ownSizeof(JoyAxisEvent) != ownSizeof(JoyAxisEvent_1157628954):
      static :
        warning("Declaration of " & "JoyAxisEvent" &
            " exists but with different size")
    JoyAxisEvent
   else:
    JoyAxisEvent_1157628954)
  struct_SDL_Finger_1157628897 = (when declared(struct_SDL_Finger):
    when ownSizeof(struct_SDL_Finger) != ownSizeof(struct_SDL_Finger_1157628896):
      static :
        warning("Declaration of " & "struct_SDL_Finger" &
            " exists but with different size")
    struct_SDL_Finger
   else:
    struct_SDL_Finger_1157628896)
  enum_SDL_TimeFormat_1157629509 = (when declared(enum_SDL_TimeFormat):
    when ownSizeof(enum_SDL_TimeFormat) != ownSizeof(enum_SDL_TimeFormat_1157629508):
      static :
        warning("Declaration of " & "enum_SDL_TimeFormat" &
            " exists but with different size")
    enum_SDL_TimeFormat
   else:
    enum_SDL_TimeFormat_1157629508)
  PenTouchEvent_1157629023 = (when declared(PenTouchEvent):
    when ownSizeof(PenTouchEvent) != ownSizeof(PenTouchEvent_1157629022):
      static :
        warning("Declaration of " & "PenTouchEvent" &
            " exists but with different size")
    PenTouchEvent
   else:
    PenTouchEvent_1157629022)
  struct_SDL_PathInfo_1157629071 = (when declared(struct_SDL_PathInfo):
    when ownSizeof(struct_SDL_PathInfo) != ownSizeof(struct_SDL_PathInfo_1157629070):
      static :
        warning("Declaration of " & "struct_SDL_PathInfo" &
            " exists but with different size")
    struct_SDL_PathInfo
   else:
    struct_SDL_PathInfo_1157629070)
  GPURenderPass_1157629101 = (when declared(GPURenderPass):
    when ownSizeof(GPURenderPass) != ownSizeof(GPURenderPass_1157629100):
      static :
        warning("Declaration of " & "GPURenderPass" &
            " exists but with different size")
    GPURenderPass
   else:
    GPURenderPass_1157629100)
  struct_SDL_DialogFileFilter_1157628773 = (when declared(
      struct_SDL_DialogFileFilter):
    when ownSizeof(struct_SDL_DialogFileFilter) !=
        ownSizeof(struct_SDL_DialogFileFilter_1157628772):
      static :
        warning("Declaration of " & "struct_SDL_DialogFileFilter" &
            " exists but with different size")
    struct_SDL_DialogFileFilter
   else:
    struct_SDL_DialogFileFilter_1157628772)
  IOWhence_1157628563 = (when declared(IOWhence):
    when ownSizeof(IOWhence) != ownSizeof(IOWhence_1157628562):
      static :
        warning("Declaration of " & "IOWhence" &
            " exists but with different size")
    IOWhence
   else:
    IOWhence_1157628562)
  enum_SDL_JoystickConnectionState_1157628807 = (when declared(
      enum_SDL_JoystickConnectionState):
    when ownSizeof(enum_SDL_JoystickConnectionState) !=
        ownSizeof(enum_SDL_JoystickConnectionState_1157628806):
      static :
        warning("Declaration of " & "enum_SDL_JoystickConnectionState" &
            " exists but with different size")
    enum_SDL_JoystickConnectionState
   else:
    enum_SDL_JoystickConnectionState_1157628806)
  enum_SDL_BitmapOrder_1157628601 = (when declared(enum_SDL_BitmapOrder):
    when ownSizeof(enum_SDL_BitmapOrder) != ownSizeof(enum_SDL_BitmapOrder_1157628600):
      static :
        warning("Declaration of " & "enum_SDL_BitmapOrder" &
            " exists but with different size")
    enum_SDL_BitmapOrder
   else:
    enum_SDL_BitmapOrder_1157628600)
  TextInputType_1157628861 = (when declared(TextInputType):
    when ownSizeof(TextInputType) != ownSizeof(TextInputType_1157628860):
      static :
        warning("Declaration of " & "TextInputType" &
            " exists but with different size")
    TextInputType
   else:
    TextInputType_1157628860)
  struct_SDL_WindowEvent_1157628913 = (when declared(struct_SDL_WindowEvent):
    when ownSizeof(struct_SDL_WindowEvent) != ownSizeof(struct_SDL_WindowEvent_1157628912):
      static :
        warning("Declaration of " & "struct_SDL_WindowEvent" &
            " exists but with different size")
    struct_SDL_WindowEvent
   else:
    struct_SDL_WindowEvent_1157628912)
  struct_SDL_GPUStorageTextureReadWriteBinding_1157629349 = (when declared(
      struct_SDL_GPUStorageTextureReadWriteBinding):
    when ownSizeof(struct_SDL_GPUStorageTextureReadWriteBinding) !=
        ownSizeof(struct_SDL_GPUStorageTextureReadWriteBinding_1157629348):
      static :
        warning("Declaration of " &
            "struct_SDL_GPUStorageTextureReadWriteBinding" &
            " exists but with different size")
    struct_SDL_GPUStorageTextureReadWriteBinding
   else:
    struct_SDL_GPUStorageTextureReadWriteBinding_1157629348)
  Finger_1157628899 = (when declared(Finger):
    when ownSizeof(Finger) != ownSizeof(Finger_1157628898):
      static :
        warning("Declaration of " & "Finger" & " exists but with different size")
    Finger
   else:
    Finger_1157628898)
  enum_SDL_TouchDeviceType_1157628893 = (when declared(enum_SDL_TouchDeviceType):
    when ownSizeof(enum_SDL_TouchDeviceType) !=
        ownSizeof(enum_SDL_TouchDeviceType_1157628892):
      static :
        warning("Declaration of " & "enum_SDL_TouchDeviceType" &
            " exists but with different size")
    enum_SDL_TouchDeviceType
   else:
    enum_SDL_TouchDeviceType_1157628892)
  ChromaLocation_1157628643 = (when declared(ChromaLocation):
    when ownSizeof(ChromaLocation) != ownSizeof(ChromaLocation_1157628642):
      static :
        warning("Declaration of " & "ChromaLocation" &
            " exists but with different size")
    ChromaLocation
   else:
    ChromaLocation_1157628642)
  GamepadAxisEvent_1157628979 = (when declared(GamepadAxisEvent):
    when ownSizeof(GamepadAxisEvent) != ownSizeof(GamepadAxisEvent_1157628978):
      static :
        warning("Declaration of " & "GamepadAxisEvent" &
            " exists but with different size")
    GamepadAxisEvent
   else:
    GamepadAxisEvent_1157628978)
  GPUIndexedIndirectDrawCommand_1157629251 = (when declared(
      GPUIndexedIndirectDrawCommand):
    when ownSizeof(GPUIndexedIndirectDrawCommand) !=
        ownSizeof(GPUIndexedIndirectDrawCommand_1157629250):
      static :
        warning("Declaration of " & "GPUIndexedIndirectDrawCommand" &
            " exists but with different size")
    GPUIndexedIndirectDrawCommand
   else:
    GPUIndexedIndirectDrawCommand_1157629250)
  HapticID_1157629387 = (when declared(HapticID):
    when ownSizeof(HapticID) != ownSizeof(HapticID_1157629386):
      static :
        warning("Declaration of " & "HapticID" &
            " exists but with different size")
    HapticID
   else:
    HapticID_1157629386)
  hid_bus_type_1157629393 = (when declared(hid_bus_type):
    when ownSizeof(hid_bus_type) != ownSizeof(hid_bus_type_1157629392):
      static :
        warning("Declaration of " & "hid_bus_type" &
            " exists but with different size")
    hid_bus_type
   else:
    hid_bus_type_1157629392)
  IOStream_1157628569 = (when declared(IOStream):
    when ownSizeof(IOStream) != ownSizeof(IOStream_1157628568):
      static :
        warning("Declaration of " & "IOStream" &
            " exists but with different size")
    IOStream
   else:
    IOStream_1157628568)
  struct_SDL_FPoint_1157628669 = (when declared(struct_SDL_FPoint):
    when ownSizeof(struct_SDL_FPoint) != ownSizeof(struct_SDL_FPoint_1157628668):
      static :
        warning("Declaration of " & "struct_SDL_FPoint" &
            " exists but with different size")
    struct_SDL_FPoint
   else:
    struct_SDL_FPoint_1157628668)
  PixelType_1157628599 = (when declared(PixelType):
    when ownSizeof(PixelType) != ownSizeof(PixelType_1157628598):
      static :
        warning("Declaration of " & "PixelType" &
            " exists but with different size")
    PixelType
   else:
    PixelType_1157628598)
  AppQuit_func_1157629417 = (when declared(AppQuit_func):
    when ownSizeof(AppQuit_func) != ownSizeof(AppQuit_func_1157629416):
      static :
        warning("Declaration of " & "AppQuit_func" &
            " exists but with different size")
    AppQuit_func
   else:
    AppQuit_func_1157629416)
  GPUCommandBuffer_1157629099 = (when declared(GPUCommandBuffer):
    when ownSizeof(GPUCommandBuffer) != ownSizeof(GPUCommandBuffer_1157629098):
      static :
        warning("Declaration of " & "GPUCommandBuffer" &
            " exists but with different size")
    GPUCommandBuffer
   else:
    GPUCommandBuffer_1157629098)
  struct_SDL_JoyBallEvent_1157628957 = (when declared(struct_SDL_JoyBallEvent):
    when ownSizeof(struct_SDL_JoyBallEvent) !=
        ownSizeof(struct_SDL_JoyBallEvent_1157628956):
      static :
        warning("Declaration of " & "struct_SDL_JoyBallEvent" &
            " exists but with different size")
    struct_SDL_JoyBallEvent
   else:
    struct_SDL_JoyBallEvent_1157628956)
  EnumeratePropertiesCallback_1157628525 = (when declared(
      EnumeratePropertiesCallback):
    when ownSizeof(EnumeratePropertiesCallback) !=
        ownSizeof(EnumeratePropertiesCallback_1157628524):
      static :
        warning("Declaration of " & "EnumeratePropertiesCallback" &
            " exists but with different size")
    EnumeratePropertiesCallback
   else:
    EnumeratePropertiesCallback_1157628524)
  struct_SDL_GPUBufferRegion_1157629241 = (when declared(
      struct_SDL_GPUBufferRegion):
    when ownSizeof(struct_SDL_GPUBufferRegion) !=
        ownSizeof(struct_SDL_GPUBufferRegion_1157629240):
      static :
        warning("Declaration of " & "struct_SDL_GPUBufferRegion" &
            " exists but with different size")
    struct_SDL_GPUBufferRegion
   else:
    struct_SDL_GPUBufferRegion_1157629240)
  struct_SDL_TouchFingerEvent_1157629009 = (when declared(
      struct_SDL_TouchFingerEvent):
    when ownSizeof(struct_SDL_TouchFingerEvent) !=
        ownSizeof(struct_SDL_TouchFingerEvent_1157629008):
      static :
        warning("Declaration of " & "struct_SDL_TouchFingerEvent" &
            " exists but with different size")
    struct_SDL_TouchFingerEvent
   else:
    struct_SDL_TouchFingerEvent_1157629008)
  GPUSamplerAddressMode_1157629203 = (when declared(GPUSamplerAddressMode):
    when ownSizeof(GPUSamplerAddressMode) != ownSizeof(GPUSamplerAddressMode_1157629202):
      static :
        warning("Declaration of " & "GPUSamplerAddressMode" &
            " exists but with different size")
    GPUSamplerAddressMode
   else:
    GPUSamplerAddressMode_1157629202)
  enum_SDL_Colorspace_1157628645 = (when declared(enum_SDL_Colorspace):
    when ownSizeof(enum_SDL_Colorspace) != ownSizeof(enum_SDL_Colorspace_1157628644):
      static :
        warning("Declaration of " & "enum_SDL_Colorspace" &
            " exists but with different size")
    enum_SDL_Colorspace
   else:
    enum_SDL_Colorspace_1157628644)
  PenProximityEvent_1157629015 = (when declared(PenProximityEvent):
    when ownSizeof(PenProximityEvent) != ownSizeof(PenProximityEvent_1157629014):
      static :
        warning("Declaration of " & "PenProximityEvent" &
            " exists but with different size")
    PenProximityEvent
   else:
    PenProximityEvent_1157629014)
  GPUBufferBinding_1157629339 = (when declared(GPUBufferBinding):
    when ownSizeof(GPUBufferBinding) != ownSizeof(GPUBufferBinding_1157629338):
      static :
        warning("Declaration of " & "GPUBufferBinding" &
            " exists but with different size")
    GPUBufferBinding
   else:
    GPUBufferBinding_1157629338)
  StorageInterface_1157629489 = (when declared(StorageInterface):
    when ownSizeof(StorageInterface) != ownSizeof(StorageInterface_1157629488):
      static :
        warning("Declaration of " & "StorageInterface" &
            " exists but with different size")
    StorageInterface
   else:
    StorageInterface_1157629488)
  struct_SDL_StorageInterface_1157629487 = (when declared(
      struct_SDL_StorageInterface):
    when ownSizeof(struct_SDL_StorageInterface) !=
        ownSizeof(struct_SDL_StorageInterface_1157629486):
      static :
        warning("Declaration of " & "struct_SDL_StorageInterface" &
            " exists but with different size")
    struct_SDL_StorageInterface
   else:
    struct_SDL_StorageInterface_1157629486)
  EGLConfig_1157628741 = (when declared(EGLConfig):
    when ownSizeof(EGLConfig) != ownSizeof(EGLConfig_1157628740):
      static :
        warning("Declaration of " & "EGLConfig" &
            " exists but with different size")
    EGLConfig
   else:
    EGLConfig_1157628740)
  struct_SDL_IOStreamInterface_1157628565 = (when declared(
      struct_SDL_IOStreamInterface):
    when ownSizeof(struct_SDL_IOStreamInterface) !=
        ownSizeof(struct_SDL_IOStreamInterface_1157628564):
      static :
        warning("Declaration of " & "struct_SDL_IOStreamInterface" &
            " exists but with different size")
    struct_SDL_IOStreamInterface
   else:
    struct_SDL_IOStreamInterface_1157628564)
  struct_SDL_JoyHatEvent_1157628961 = (when declared(struct_SDL_JoyHatEvent):
    when ownSizeof(struct_SDL_JoyHatEvent) != ownSizeof(struct_SDL_JoyHatEvent_1157628960):
      static :
        warning("Declaration of " & "struct_SDL_JoyHatEvent" &
            " exists but with different size")
    struct_SDL_JoyHatEvent
   else:
    struct_SDL_JoyHatEvent_1157628960)
  GamepadSensorEvent_1157628995 = (when declared(GamepadSensorEvent):
    when ownSizeof(GamepadSensorEvent) != ownSizeof(GamepadSensorEvent_1157628994):
      static :
        warning("Declaration of " & "GamepadSensorEvent" &
            " exists but with different size")
    GamepadSensorEvent
   else:
    GamepadSensorEvent_1157628994)
  MetalView_1157629461 = (when declared(MetalView):
    when ownSizeof(MetalView) != ownSizeof(MetalView_1157629460):
      static :
        warning("Declaration of " & "MetalView" &
            " exists but with different size")
    MetalView
   else:
    MetalView_1157629460)
  CameraDeviceEvent_1157629003 = (when declared(CameraDeviceEvent):
    when ownSizeof(CameraDeviceEvent) != ownSizeof(CameraDeviceEvent_1157629002):
      static :
        warning("Declaration of " & "CameraDeviceEvent" &
            " exists but with different size")
    CameraDeviceEvent
   else:
    CameraDeviceEvent_1157629002)
  enum_SDL_GPUCubeMapFace_1157629139 = (when declared(enum_SDL_GPUCubeMapFace):
    when ownSizeof(enum_SDL_GPUCubeMapFace) !=
        ownSizeof(enum_SDL_GPUCubeMapFace_1157629138):
      static :
        warning("Declaration of " & "enum_SDL_GPUCubeMapFace" &
            " exists but with different size")
    enum_SDL_GPUCubeMapFace
   else:
    enum_SDL_GPUCubeMapFace_1157629138)
  CommonEvent_1157628907 = (when declared(CommonEvent):
    when ownSizeof(CommonEvent) != ownSizeof(CommonEvent_1157628906):
      static :
        warning("Declaration of " & "CommonEvent" &
            " exists but with different size")
    CommonEvent
   else:
    CommonEvent_1157628906)
  Vertex_1157629471 = (when declared(Vertex):
    when ownSizeof(Vertex) != ownSizeof(Vertex_1157629470):
      static :
        warning("Declaration of " & "Vertex" & " exists but with different size")
    Vertex
   else:
    Vertex_1157629470)
  AsyncIO_1157628491 = (when declared(AsyncIO):
    when ownSizeof(AsyncIO) != ownSizeof(AsyncIO_1157628490):
      static :
        warning("Declaration of " & "AsyncIO" &
            " exists but with different size")
    AsyncIO
   else:
    AsyncIO_1157628490)
  Sensor_1157628791 = (when declared(Sensor):
    when ownSizeof(Sensor) != ownSizeof(Sensor_1157628790):
      static :
        warning("Declaration of " & "Sensor" & " exists but with different size")
    Sensor
   else:
    Sensor_1157628790)
  GPUShader_1157629093 = (when declared(GPUShader):
    when ownSizeof(GPUShader) != ownSizeof(GPUShader_1157629092):
      static :
        warning("Declaration of " & "GPUShader" &
            " exists but with different size")
    GPUShader
   else:
    GPUShader_1157629092)
  KeyboardDeviceEvent_1157628919 = (when declared(KeyboardDeviceEvent):
    when ownSizeof(KeyboardDeviceEvent) != ownSizeof(KeyboardDeviceEvent_1157628918):
      static :
        warning("Declaration of " & "KeyboardDeviceEvent" &
            " exists but with different size")
    KeyboardDeviceEvent
   else:
    KeyboardDeviceEvent_1157628918)
  Window_1157628729 = (when declared(Window):
    when ownSizeof(Window) != ownSizeof(Window_1157628728):
      static :
        warning("Declaration of " & "Window" & " exists but with different size")
    Window
   else:
    Window_1157628728)
  CompareCallback_r_1157628473 = (when declared(CompareCallback_r):
    when ownSizeof(CompareCallback_r) != ownSizeof(CompareCallback_r_1157628472):
      static :
        warning("Declaration of " & "CompareCallback_r" &
            " exists but with different size")
    CompareCallback_r
   else:
    CompareCallback_r_1157628472)
  MessageBoxColorScheme_1157629455 = (when declared(MessageBoxColorScheme):
    when ownSizeof(MessageBoxColorScheme) != ownSizeof(MessageBoxColorScheme_1157629454):
      static :
        warning("Declaration of " & "MessageBoxColorScheme" &
            " exists but with different size")
    MessageBoxColorScheme
   else:
    MessageBoxColorScheme_1157629454)
  union_SDL_HapticEffect_1157629383 = (when declared(union_SDL_HapticEffect):
    when ownSizeof(union_SDL_HapticEffect) != ownSizeof(union_SDL_HapticEffect_1157629382):
      static :
        warning("Declaration of " & "union_SDL_HapticEffect" &
            " exists but with different size")
    union_SDL_HapticEffect
   else:
    union_SDL_HapticEffect_1157629382)
  BitmapOrder_1157628603 = (when declared(BitmapOrder):
    when ownSizeof(BitmapOrder) != ownSizeof(BitmapOrder_1157628602):
      static :
        warning("Declaration of " & "BitmapOrder" &
            " exists but with different size")
    BitmapOrder
   else:
    BitmapOrder_1157628602)
  Uint32_1157628445 = (when declared(Uint32):
    when ownSizeof(Uint32) != ownSizeof(Uint32_1157628444):
      static :
        warning("Declaration of " & "Uint32" & " exists but with different size")
    Uint32
   else:
    Uint32_1157628444)
  GPUShaderCreateInfo_1157629283 = (when declared(GPUShaderCreateInfo):
    when ownSizeof(GPUShaderCreateInfo) != ownSizeof(GPUShaderCreateInfo_1157629282):
      static :
        warning("Declaration of " & "GPUShaderCreateInfo" &
            " exists but with different size")
    GPUShaderCreateInfo
   else:
    GPUShaderCreateInfo_1157629282)
  Haptic_1157629353 = (when declared(Haptic):
    when ownSizeof(Haptic) != ownSizeof(Haptic_1157629352):
      static :
        warning("Declaration of " & "Haptic" & " exists but with different size")
    Haptic
   else:
    Haptic_1157629352)
  struct_SDL_HapticRamp_1157629371 = (when declared(struct_SDL_HapticRamp):
    when ownSizeof(struct_SDL_HapticRamp) != ownSizeof(struct_SDL_HapticRamp_1157629370):
      static :
        warning("Declaration of " & "struct_SDL_HapticRamp" &
            " exists but with different size")
    struct_SDL_HapticRamp
   else:
    struct_SDL_HapticRamp_1157629370)
  enum_SDL_GPUCullMode_1157629167 = (when declared(enum_SDL_GPUCullMode):
    when ownSizeof(enum_SDL_GPUCullMode) != ownSizeof(enum_SDL_GPUCullMode_1157629166):
      static :
        warning("Declaration of " & "enum_SDL_GPUCullMode" &
            " exists but with different size")
    enum_SDL_GPUCullMode
   else:
    enum_SDL_GPUCullMode_1157629166)
  enum_SDL_MessageBoxColorType_1157629449 = (when declared(
      enum_SDL_MessageBoxColorType):
    when ownSizeof(enum_SDL_MessageBoxColorType) !=
        ownSizeof(enum_SDL_MessageBoxColorType_1157629448):
      static :
        warning("Declaration of " & "enum_SDL_MessageBoxColorType" &
            " exists but with different size")
    enum_SDL_MessageBoxColorType
   else:
    enum_SDL_MessageBoxColorType_1157629448)
  TimerID_1157629513 = (when declared(TimerID):
    when ownSizeof(TimerID) != ownSizeof(TimerID_1157629512):
      static :
        warning("Declaration of " & "TimerID" &
            " exists but with different size")
    TimerID
   else:
    TimerID_1157629512)
  Scancode_1157628851 = (when declared(Scancode):
    when ownSizeof(Scancode) != ownSizeof(Scancode_1157628850):
      static :
        warning("Declaration of " & "Scancode" &
            " exists but with different size")
    Scancode
   else:
    Scancode_1157628850)
  enum_SDL_ColorRange_1157628625 = (when declared(enum_SDL_ColorRange):
    when ownSizeof(enum_SDL_ColorRange) != ownSizeof(enum_SDL_ColorRange_1157628624):
      static :
        warning("Declaration of " & "enum_SDL_ColorRange" &
            " exists but with different size")
    enum_SDL_ColorRange
   else:
    enum_SDL_ColorRange_1157628624)
  SharedObject_1157629421 = (when declared(SharedObject):
    when ownSizeof(SharedObject) != ownSizeof(SharedObject_1157629420):
      static :
        warning("Declaration of " & "SharedObject" &
            " exists but with different size")
    SharedObject
   else:
    SharedObject_1157629420)
  XEvent_1157629493 = (when declared(XEvent):
    when ownSizeof(XEvent) != ownSizeof(XEvent_1157629492):
      static :
        warning("Declaration of " & "XEvent" & " exists but with different size")
    XEvent
   else:
    XEvent_1157629492)
  enum_SDL_HitTestResult_1157628767 = (when declared(enum_SDL_HitTestResult):
    when ownSizeof(enum_SDL_HitTestResult) != ownSizeof(enum_SDL_HitTestResult_1157628766):
      static :
        warning("Declaration of " & "enum_SDL_HitTestResult" &
            " exists but with different size")
    enum_SDL_HitTestResult
   else:
    enum_SDL_HitTestResult_1157628766)
  struct_SDL_AtomicInt_1157628509 = (when declared(struct_SDL_AtomicInt):
    when ownSizeof(struct_SDL_AtomicInt) != ownSizeof(struct_SDL_AtomicInt_1157628508):
      static :
        warning("Declaration of " & "struct_SDL_AtomicInt" &
            " exists but with different size")
    struct_SDL_AtomicInt
   else:
    struct_SDL_AtomicInt_1157628508)
  malloc_func_1157628461 = (when declared(malloc_func):
    when ownSizeof(malloc_func) != ownSizeof(malloc_func_1157628460):
      static :
        warning("Declaration of " & "malloc_func" &
            " exists but with different size")
    malloc_func
   else:
    malloc_func_1157628460)
  GamepadBinding_1157628847 = (when declared(GamepadBinding):
    when ownSizeof(GamepadBinding) != ownSizeof(GamepadBinding_1157628846):
      static :
        warning("Declaration of " & "GamepadBinding" &
            " exists but with different size")
    GamepadBinding
   else:
    GamepadBinding_1157628846)
  GPUVertexAttribute_1157629267 = (when declared(GPUVertexAttribute):
    when ownSizeof(GPUVertexAttribute) != ownSizeof(GPUVertexAttribute_1157629266):
      static :
        warning("Declaration of " & "GPUVertexAttribute" &
            " exists but with different size")
    GPUVertexAttribute
   else:
    GPUVertexAttribute_1157629266)
  struct_SDL_FRect_1157628677 = (when declared(struct_SDL_FRect):
    when ownSizeof(struct_SDL_FRect) != ownSizeof(struct_SDL_FRect_1157628676):
      static :
        warning("Declaration of " & "struct_SDL_FRect" &
            " exists but with different size")
    struct_SDL_FRect
   else:
    struct_SDL_FRect_1157628676)
  Locale_1157629425 = (when declared(Locale):
    when ownSizeof(Locale) != ownSizeof(Locale_1157629424):
      static :
        warning("Declaration of " & "Locale" & " exists but with different size")
    Locale
   else:
    Locale_1157629424)
  FunctionPointer_1157628479 = (when declared(FunctionPointer):
    when ownSizeof(FunctionPointer) != ownSizeof(FunctionPointer_1157628478):
      static :
        warning("Declaration of " & "FunctionPointer" &
            " exists but with different size")
    FunctionPointer
   else:
    FunctionPointer_1157628478)
  HitTestResult_1157628769 = (when declared(HitTestResult):
    when ownSizeof(HitTestResult) != ownSizeof(HitTestResult_1157628768):
      static :
        warning("Declaration of " & "HitTestResult" &
            " exists but with different size")
    HitTestResult
   else:
    HitTestResult_1157628768)
  struct_SDL_PenTouchEvent_1157629021 = (when declared(struct_SDL_PenTouchEvent):
    when ownSizeof(struct_SDL_PenTouchEvent) !=
        ownSizeof(struct_SDL_PenTouchEvent_1157629020):
      static :
        warning("Declaration of " & "struct_SDL_PenTouchEvent" &
            " exists but with different size")
    struct_SDL_PenTouchEvent
   else:
    struct_SDL_PenTouchEvent_1157629020)
  enum_SDL_GamepadAxis_1157628837 = (when declared(enum_SDL_GamepadAxis):
    when ownSizeof(enum_SDL_GamepadAxis) != ownSizeof(enum_SDL_GamepadAxis_1157628836):
      static :
        warning("Declaration of " & "enum_SDL_GamepadAxis" &
            " exists but with different size")
    enum_SDL_GamepadAxis
   else:
    enum_SDL_GamepadAxis_1157628836)
  MouseWheelDirection_1157628877 = (when declared(MouseWheelDirection):
    when ownSizeof(MouseWheelDirection) != ownSizeof(MouseWheelDirection_1157628876):
      static :
        warning("Declaration of " & "MouseWheelDirection" &
            " exists but with different size")
    MouseWheelDirection
   else:
    MouseWheelDirection_1157628876)
  TransferCharacteristics_1157628635 = (when declared(TransferCharacteristics):
    when ownSizeof(TransferCharacteristics) !=
        ownSizeof(TransferCharacteristics_1157628634):
      static :
        warning("Declaration of " & "TransferCharacteristics" &
            " exists but with different size")
    TransferCharacteristics
   else:
    TransferCharacteristics_1157628634)
  GPUTextureType_1157629133 = (when declared(GPUTextureType):
    when ownSizeof(GPUTextureType) != ownSizeof(GPUTextureType_1157629132):
      static :
        warning("Declaration of " & "GPUTextureType" &
            " exists but with different size")
    GPUTextureType
   else:
    GPUTextureType_1157629132)
  AppIterate_func_1157629413 = (when declared(AppIterate_func):
    when ownSizeof(AppIterate_func) != ownSizeof(AppIterate_func_1157629412):
      static :
        warning("Declaration of " & "AppIterate_func" &
            " exists but with different size")
    AppIterate_func
   else:
    AppIterate_func_1157629412)
  GPUVertexElementFormat_1157629157 = (when declared(GPUVertexElementFormat):
    when ownSizeof(GPUVertexElementFormat) != ownSizeof(GPUVertexElementFormat_1157629156):
      static :
        warning("Declaration of " & "GPUVertexElementFormat" &
            " exists but with different size")
    GPUVertexElementFormat
   else:
    GPUVertexElementFormat_1157629156)
  MouseDeviceEvent_1157628939 = (when declared(MouseDeviceEvent):
    when ownSizeof(MouseDeviceEvent) != ownSizeof(MouseDeviceEvent_1157628938):
      static :
        warning("Declaration of " & "MouseDeviceEvent" &
            " exists but with different size")
    MouseDeviceEvent
   else:
    MouseDeviceEvent_1157628938)
  InitStatus_1157628551 = (when declared(InitStatus):
    when ownSizeof(InitStatus) != ownSizeof(InitStatus_1157628550):
      static :
        warning("Declaration of " & "InitStatus" &
            " exists but with different size")
    InitStatus
   else:
    InitStatus_1157628550)
  enum_SDL_ArrayOrder_1157628609 = (when declared(enum_SDL_ArrayOrder):
    when ownSizeof(enum_SDL_ArrayOrder) != ownSizeof(enum_SDL_ArrayOrder_1157628608):
      static :
        warning("Declaration of " & "enum_SDL_ArrayOrder" &
            " exists but with different size")
    enum_SDL_ArrayOrder
   else:
    enum_SDL_ArrayOrder_1157628608)
  EnumerationResult_1157629079 = (when declared(EnumerationResult):
    when ownSizeof(EnumerationResult) != ownSizeof(EnumerationResult_1157629078):
      static :
        warning("Declaration of " & "EnumerationResult" &
            " exists but with different size")
    EnumerationResult
   else:
    EnumerationResult_1157629078)
  struct_SDL_AudioDeviceEvent_1157628997 = (when declared(
      struct_SDL_AudioDeviceEvent):
    when ownSizeof(struct_SDL_AudioDeviceEvent) !=
        ownSizeof(struct_SDL_AudioDeviceEvent_1157628996):
      static :
        warning("Declaration of " & "struct_SDL_AudioDeviceEvent" &
            " exists but with different size")
    struct_SDL_AudioDeviceEvent
   else:
    struct_SDL_AudioDeviceEvent_1157628996)
  enum_SDL_GPUTextureFormat_1157629125 = (when declared(
      enum_SDL_GPUTextureFormat):
    when ownSizeof(enum_SDL_GPUTextureFormat) !=
        ownSizeof(enum_SDL_GPUTextureFormat_1157629124):
      static :
        warning("Declaration of " & "enum_SDL_GPUTextureFormat" &
            " exists but with different size")
    enum_SDL_GPUTextureFormat
   else:
    enum_SDL_GPUTextureFormat_1157629124)
  enum_SDL_MatrixCoefficients_1157628637 = (when declared(
      enum_SDL_MatrixCoefficients):
    when ownSizeof(enum_SDL_MatrixCoefficients) !=
        ownSizeof(enum_SDL_MatrixCoefficients_1157628636):
      static :
        warning("Declaration of " & "enum_SDL_MatrixCoefficients" &
            " exists but with different size")
    enum_SDL_MatrixCoefficients
   else:
    enum_SDL_MatrixCoefficients_1157628636)
  enum_SDL_GPUPrimitiveType_1157629109 = (when declared(
      enum_SDL_GPUPrimitiveType):
    when ownSizeof(enum_SDL_GPUPrimitiveType) !=
        ownSizeof(enum_SDL_GPUPrimitiveType_1157629108):
      static :
        warning("Declaration of " & "enum_SDL_GPUPrimitiveType" &
            " exists but with different size")
    enum_SDL_GPUPrimitiveType
   else:
    enum_SDL_GPUPrimitiveType_1157629108)
  AppEvent_func_1157629415 = (when declared(AppEvent_func):
    when ownSizeof(AppEvent_func) != ownSizeof(AppEvent_func_1157629414):
      static :
        warning("Declaration of " & "AppEvent_func" &
            " exists but with different size")
    AppEvent_func
   else:
    AppEvent_func_1157629414)
  GPUSamplerCreateInfo_1157629259 = (when declared(GPUSamplerCreateInfo):
    when ownSizeof(GPUSamplerCreateInfo) != ownSizeof(GPUSamplerCreateInfo_1157629258):
      static :
        warning("Declaration of " & "GPUSamplerCreateInfo" &
            " exists but with different size")
    GPUSamplerCreateInfo
   else:
    GPUSamplerCreateInfo_1157629258)
  HapticLeftRight_1157629377 = (when declared(HapticLeftRight):
    when ownSizeof(HapticLeftRight) != ownSizeof(HapticLeftRight_1157629376):
      static :
        warning("Declaration of " & "HapticLeftRight" &
            " exists but with different size")
    HapticLeftRight
   else:
    HapticLeftRight_1157629376)
  EGLIntArrayCallback_1157628753 = (when declared(EGLIntArrayCallback):
    when ownSizeof(EGLIntArrayCallback) != ownSizeof(EGLIntArrayCallback_1157628752):
      static :
        warning("Declaration of " & "EGLIntArrayCallback" &
            " exists but with different size")
    EGLIntArrayCallback
   else:
    EGLIntArrayCallback_1157628752)
  struct_SDL_GPUTextureLocation_1157629225 = (when declared(
      struct_SDL_GPUTextureLocation):
    when ownSizeof(struct_SDL_GPUTextureLocation) !=
        ownSizeof(struct_SDL_GPUTextureLocation_1157629224):
      static :
        warning("Declaration of " & "struct_SDL_GPUTextureLocation" &
            " exists but with different size")
    struct_SDL_GPUTextureLocation
   else:
    struct_SDL_GPUTextureLocation_1157629224)
  struct_SDL_GPUIndexedIndirectDrawCommand_1157629249 = (when declared(
      struct_SDL_GPUIndexedIndirectDrawCommand):
    when ownSizeof(struct_SDL_GPUIndexedIndirectDrawCommand) !=
        ownSizeof(struct_SDL_GPUIndexedIndirectDrawCommand_1157629248):
      static :
        warning("Declaration of " & "struct_SDL_GPUIndexedIndirectDrawCommand" &
            " exists but with different size")
    struct_SDL_GPUIndexedIndirectDrawCommand
   else:
    struct_SDL_GPUIndexedIndirectDrawCommand_1157629248)
  GPUColorTargetDescription_1157629311 = (when declared(
      GPUColorTargetDescription):
    when ownSizeof(GPUColorTargetDescription) !=
        ownSizeof(GPUColorTargetDescription_1157629310):
      static :
        warning("Declaration of " & "GPUColorTargetDescription" &
            " exists but with different size")
    GPUColorTargetDescription
   else:
    GPUColorTargetDescription_1157629310)
  DUMMY_ENUM_1157628459 = (when declared(DUMMY_ENUM):
    when ownSizeof(DUMMY_ENUM) != ownSizeof(DUMMY_ENUM_1157628458):
      static :
        warning("Declaration of " & "DUMMY_ENUM" &
            " exists but with different size")
    DUMMY_ENUM
   else:
    DUMMY_ENUM_1157628458)
  struct_SDL_MessageBoxData_1157629457 = (when declared(
      struct_SDL_MessageBoxData):
    when ownSizeof(struct_SDL_MessageBoxData) !=
        ownSizeof(struct_SDL_MessageBoxData_1157629456):
      static :
        warning("Declaration of " & "struct_SDL_MessageBoxData" &
            " exists but with different size")
    struct_SDL_MessageBoxData
   else:
    struct_SDL_MessageBoxData_1157629456)
  enum_SDL_ColorType_1157628621 = (when declared(enum_SDL_ColorType):
    when ownSizeof(enum_SDL_ColorType) != ownSizeof(enum_SDL_ColorType_1157628620):
      static :
        warning("Declaration of " & "enum_SDL_ColorType" &
            " exists but with different size")
    enum_SDL_ColorType
   else:
    enum_SDL_ColorType_1157628620)
  VirtualJoystickSensorDesc_1157628817 = (when declared(
      VirtualJoystickSensorDesc):
    when ownSizeof(VirtualJoystickSensorDesc) !=
        ownSizeof(VirtualJoystickSensorDesc_1157628816):
      static :
        warning("Declaration of " & "VirtualJoystickSensorDesc" &
            " exists but with different size")
    VirtualJoystickSensorDesc
   else:
    VirtualJoystickSensorDesc_1157628816)
  MatrixCoefficients_1157628639 = (when declared(MatrixCoefficients):
    when ownSizeof(MatrixCoefficients) != ownSizeof(MatrixCoefficients_1157628638):
      static :
        warning("Declaration of " & "MatrixCoefficients" &
            " exists but with different size")
    MatrixCoefficients
   else:
    MatrixCoefficients_1157628638)
  enum_SDL_Scancode_1157628849 = (when declared(enum_SDL_Scancode):
    when ownSizeof(enum_SDL_Scancode) != ownSizeof(enum_SDL_Scancode_1157628848):
      static :
        warning("Declaration of " & "enum_SDL_Scancode" &
            " exists but with different size")
    enum_SDL_Scancode
   else:
    enum_SDL_Scancode_1157628848)
  GamepadTouchpadEvent_1157628991 = (when declared(GamepadTouchpadEvent):
    when ownSizeof(GamepadTouchpadEvent) != ownSizeof(GamepadTouchpadEvent_1157628990):
      static :
        warning("Declaration of " & "GamepadTouchpadEvent" &
            " exists but with different size")
    GamepadTouchpadEvent
   else:
    GamepadTouchpadEvent_1157628990)
  GPUCopyPass_1157629105 = (when declared(GPUCopyPass):
    when ownSizeof(GPUCopyPass) != ownSizeof(GPUCopyPass_1157629104):
      static :
        warning("Declaration of " & "GPUCopyPass" &
            " exists but with different size")
    GPUCopyPass
   else:
    GPUCopyPass_1157629104)
  GPUStorageTextureReadWriteBinding_1157629351 = (when declared(
      GPUStorageTextureReadWriteBinding):
    when ownSizeof(GPUStorageTextureReadWriteBinding) !=
        ownSizeof(GPUStorageTextureReadWriteBinding_1157629350):
      static :
        warning("Declaration of " & "GPUStorageTextureReadWriteBinding" &
            " exists but with different size")
    GPUStorageTextureReadWriteBinding
   else:
    GPUStorageTextureReadWriteBinding_1157629350)
  HapticRamp_1157629373 = (when declared(HapticRamp):
    when ownSizeof(HapticRamp) != ownSizeof(HapticRamp_1157629372):
      static :
        warning("Declaration of " & "HapticRamp" &
            " exists but with different size")
    HapticRamp
   else:
    HapticRamp_1157629372)
  JoyHatEvent_1157628963 = (when declared(JoyHatEvent):
    when ownSizeof(JoyHatEvent) != ownSizeof(JoyHatEvent_1157628962):
      static :
        warning("Declaration of " & "JoyHatEvent" &
            " exists but with different size")
    JoyHatEvent
   else:
    JoyHatEvent_1157628962)
  GPUGraphicsPipeline_1157629097 = (when declared(GPUGraphicsPipeline):
    when ownSizeof(GPUGraphicsPipeline) != ownSizeof(GPUGraphicsPipeline_1157629096):
      static :
        warning("Declaration of " & "GPUGraphicsPipeline" &
            " exists but with different size")
    GPUGraphicsPipeline
   else:
    GPUGraphicsPipeline_1157629096)
  struct_SDL_HapticDirection_1157629355 = (when declared(
      struct_SDL_HapticDirection):
    when ownSizeof(struct_SDL_HapticDirection) !=
        ownSizeof(struct_SDL_HapticDirection_1157629354):
      static :
        warning("Declaration of " & "struct_SDL_HapticDirection" &
            " exists but with different size")
    struct_SDL_HapticDirection
   else:
    struct_SDL_HapticDirection_1157629354)
  JoyBatteryEvent_1157628975 = (when declared(JoyBatteryEvent):
    when ownSizeof(JoyBatteryEvent) != ownSizeof(JoyBatteryEvent_1157628974):
      static :
        warning("Declaration of " & "JoyBatteryEvent" &
            " exists but with different size")
    JoyBatteryEvent
   else:
    JoyBatteryEvent_1157628974)
  PowerState_1157628789 = (when declared(PowerState):
    when ownSizeof(PowerState) != ownSizeof(PowerState_1157628788):
      static :
        warning("Declaration of " & "PowerState" &
            " exists but with different size")
    PowerState
   else:
    PowerState_1157628788)
  MainThreadCallback_1157629419 = (when declared(MainThreadCallback):
    when ownSizeof(MainThreadCallback) != ownSizeof(MainThreadCallback_1157629418):
      static :
        warning("Declaration of " & "MainThreadCallback" &
            " exists but with different size")
    MainThreadCallback
   else:
    MainThreadCallback_1157629418)
  MouseButtonFlags_1157628879 = (when declared(MouseButtonFlags):
    when ownSizeof(MouseButtonFlags) != ownSizeof(MouseButtonFlags_1157628878):
      static :
        warning("Declaration of " & "MouseButtonFlags" &
            " exists but with different size")
    MouseButtonFlags
   else:
    MouseButtonFlags_1157628878)
  struct_SDL_GamepadAxisEvent_1157628977 = (when declared(
      struct_SDL_GamepadAxisEvent):
    when ownSizeof(struct_SDL_GamepadAxisEvent) !=
        ownSizeof(struct_SDL_GamepadAxisEvent_1157628976):
      static :
        warning("Declaration of " & "struct_SDL_GamepadAxisEvent" &
            " exists but with different size")
    struct_SDL_GamepadAxisEvent
   else:
    struct_SDL_GamepadAxisEvent_1157628976)
  struct_SDL_MessageBoxButtonData_1157629441 = (when declared(
      struct_SDL_MessageBoxButtonData):
    when ownSizeof(struct_SDL_MessageBoxButtonData) !=
        ownSizeof(struct_SDL_MessageBoxButtonData_1157629440):
      static :
        warning("Declaration of " & "struct_SDL_MessageBoxButtonData" &
            " exists but with different size")
    struct_SDL_MessageBoxButtonData
   else:
    struct_SDL_MessageBoxButtonData_1157629440)
  enum_SDL_PixelType_1157628597 = (when declared(enum_SDL_PixelType):
    when ownSizeof(enum_SDL_PixelType) != ownSizeof(enum_SDL_PixelType_1157628596):
      static :
        warning("Declaration of " & "enum_SDL_PixelType" &
            " exists but with different size")
    enum_SDL_PixelType
   else:
    enum_SDL_PixelType_1157628596)
  struct_SDL_Locale_1157629423 = (when declared(struct_SDL_Locale):
    when ownSizeof(struct_SDL_Locale) != ownSizeof(struct_SDL_Locale_1157629422):
      static :
        warning("Declaration of " & "struct_SDL_Locale" &
            " exists but with different size")
    struct_SDL_Locale
   else:
    struct_SDL_Locale_1157629422)
  struct_SDL_HapticCondition_1157629367 = (when declared(
      struct_SDL_HapticCondition):
    when ownSizeof(struct_SDL_HapticCondition) !=
        ownSizeof(struct_SDL_HapticCondition_1157629366):
      static :
        warning("Declaration of " & "struct_SDL_HapticCondition" &
            " exists but with different size")
    struct_SDL_HapticCondition
   else:
    struct_SDL_HapticCondition_1157629366)
  struct_SDL_CameraSpec_1157628699 = (when declared(struct_SDL_CameraSpec):
    when ownSizeof(struct_SDL_CameraSpec) != ownSizeof(struct_SDL_CameraSpec_1157628698):
      static :
        warning("Declaration of " & "struct_SDL_CameraSpec" &
            " exists but with different size")
    struct_SDL_CameraSpec
   else:
    struct_SDL_CameraSpec_1157628698)
  AudioSpec_1157628579 = (when declared(AudioSpec):
    when ownSizeof(AudioSpec) != ownSizeof(AudioSpec_1157628578):
      static :
        warning("Declaration of " & "AudioSpec" &
            " exists but with different size")
    AudioSpec
   else:
    AudioSpec_1157628578)
  struct_SDL_PixelFormatDetails_1157628661 = (when declared(
      struct_SDL_PixelFormatDetails):
    when ownSizeof(struct_SDL_PixelFormatDetails) !=
        ownSizeof(struct_SDL_PixelFormatDetails_1157628660):
      static :
        warning("Declaration of " & "struct_SDL_PixelFormatDetails" &
            " exists but with different size")
    struct_SDL_PixelFormatDetails
   else:
    struct_SDL_PixelFormatDetails_1157628660)
  GPUSampler_1157629091 = (when declared(GPUSampler):
    when ownSizeof(GPUSampler) != ownSizeof(GPUSampler_1157629090):
      static :
        warning("Declaration of " & "GPUSampler" &
            " exists but with different size")
    GPUSampler
   else:
    GPUSampler_1157629090)
  GLContextFlag_typedef_1157628761 = (when declared(GLContextFlag_typedef):
    when ownSizeof(GLContextFlag_typedef) != ownSizeof(GLContextFlag_typedef_1157628760):
      static :
        warning("Declaration of " & "GLContextFlag_typedef" &
            " exists but with different size")
    GLContextFlag_typedef
   else:
    GLContextFlag_typedef_1157628760)
  Color_1157628651 = (when declared(Color):
    when ownSizeof(Color) != ownSizeof(Color_1157628650):
      static :
        warning("Declaration of " & "Color" & " exists but with different size")
    Color
   else:
    Color_1157628650)
  struct_SDL_GPUTextureCreateInfo_1157629285 = (when declared(
      struct_SDL_GPUTextureCreateInfo):
    when ownSizeof(struct_SDL_GPUTextureCreateInfo) !=
        ownSizeof(struct_SDL_GPUTextureCreateInfo_1157629284):
      static :
        warning("Declaration of " & "struct_SDL_GPUTextureCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUTextureCreateInfo
   else:
    struct_SDL_GPUTextureCreateInfo_1157629284)
  PathInfo_1157629073 = (when declared(PathInfo):
    when ownSizeof(PathInfo) != ownSizeof(PathInfo_1157629072):
      static :
        warning("Declaration of " & "PathInfo" &
            " exists but with different size")
    PathInfo
   else:
    PathInfo_1157629072)
  GPUDevice_1157629083 = (when declared(GPUDevice):
    when ownSizeof(GPUDevice) != ownSizeof(GPUDevice_1157629082):
      static :
        warning("Declaration of " & "GPUDevice" &
            " exists but with different size")
    GPUDevice
   else:
    GPUDevice_1157629082)
  GamepadButtonLabel_1157628835 = (when declared(GamepadButtonLabel):
    when ownSizeof(GamepadButtonLabel) != ownSizeof(GamepadButtonLabel_1157628834):
      static :
        warning("Declaration of " & "GamepadButtonLabel" &
            " exists but with different size")
    GamepadButtonLabel
   else:
    GamepadButtonLabel_1157628834)
  GPUComputePipelineCreateInfo_1157629323 = (when declared(
      GPUComputePipelineCreateInfo):
    when ownSizeof(GPUComputePipelineCreateInfo) !=
        ownSizeof(GPUComputePipelineCreateInfo_1157629322):
      static :
        warning("Declaration of " & "GPUComputePipelineCreateInfo" &
            " exists but with different size")
    GPUComputePipelineCreateInfo
   else:
    GPUComputePipelineCreateInfo_1157629322)
  GPUFrontFace_1157629173 = (when declared(GPUFrontFace):
    when ownSizeof(GPUFrontFace) != ownSizeof(GPUFrontFace_1157629172):
      static :
        warning("Declaration of " & "GPUFrontFace" &
            " exists but with different size")
    GPUFrontFace
   else:
    GPUFrontFace_1157629172)
  GPUBufferUsageFlags_1157629143 = (when declared(GPUBufferUsageFlags):
    when ownSizeof(GPUBufferUsageFlags) != ownSizeof(GPUBufferUsageFlags_1157629142):
      static :
        warning("Declaration of " & "GPUBufferUsageFlags" &
            " exists but with different size")
    GPUBufferUsageFlags
   else:
    GPUBufferUsageFlags_1157629142)
  GPUTextureLocation_1157629227 = (when declared(GPUTextureLocation):
    when ownSizeof(GPUTextureLocation) != ownSizeof(GPUTextureLocation_1157629226):
      static :
        warning("Declaration of " & "GPUTextureLocation" &
            " exists but with different size")
    GPUTextureLocation
   else:
    GPUTextureLocation_1157629226)
  HapticEffect_1157629385 = (when declared(HapticEffect):
    when ownSizeof(HapticEffect) != ownSizeof(HapticEffect_1157629384):
      static :
        warning("Declaration of " & "HapticEffect" &
            " exists but with different size")
    HapticEffect
   else:
    HapticEffect_1157629384)
  enum_SDL_LogPriority_1157629431 = (when declared(enum_SDL_LogPriority):
    when ownSizeof(enum_SDL_LogPriority) != ownSizeof(enum_SDL_LogPriority_1157629430):
      static :
        warning("Declaration of " & "enum_SDL_LogPriority" &
            " exists but with different size")
    enum_SDL_LogPriority
   else:
    enum_SDL_LogPriority_1157629430)
  Sint64_1157628447 = (when declared(Sint64):
    when ownSizeof(Sint64) != ownSizeof(Sint64_1157628446):
      static :
        warning("Declaration of " & "Sint64" & " exists but with different size")
    Sint64
   else:
    Sint64_1157628446)
  GPUGraphicsPipelineCreateInfo_1157629319 = (when declared(
      GPUGraphicsPipelineCreateInfo):
    when ownSizeof(GPUGraphicsPipelineCreateInfo) !=
        ownSizeof(GPUGraphicsPipelineCreateInfo_1157629318):
      static :
        warning("Declaration of " & "GPUGraphicsPipelineCreateInfo" &
            " exists but with different size")
    GPUGraphicsPipelineCreateInfo
   else:
    GPUGraphicsPipelineCreateInfo_1157629318)
  WindowFlags_1157628731 = (when declared(WindowFlags):
    when ownSizeof(WindowFlags) != ownSizeof(WindowFlags_1157628730):
      static :
        warning("Declaration of " & "WindowFlags" &
            " exists but with different size")
    WindowFlags
   else:
    WindowFlags_1157628730)
  PropertiesID_1157628517 = (when declared(PropertiesID):
    when ownSizeof(PropertiesID) != ownSizeof(PropertiesID_1157628516):
      static :
        warning("Declaration of " & "PropertiesID" &
            " exists but with different size")
    PropertiesID
   else:
    PropertiesID_1157628516)
  DisplayID_1157628711 = (when declared(DisplayID):
    when ownSizeof(DisplayID) != ownSizeof(DisplayID_1157628710):
      static :
        warning("Declaration of " & "DisplayID" &
            " exists but with different size")
    DisplayID
   else:
    DisplayID_1157628710)
  enum_SDL_EventType_1157628901 = (when declared(enum_SDL_EventType):
    when ownSizeof(enum_SDL_EventType) != ownSizeof(enum_SDL_EventType_1157628900):
      static :
        warning("Declaration of " & "enum_SDL_EventType" &
            " exists but with different size")
    enum_SDL_EventType
   else:
    enum_SDL_EventType_1157628900)
  struct_SDL_TextInputEvent_1157628933 = (when declared(
      struct_SDL_TextInputEvent):
    when ownSizeof(struct_SDL_TextInputEvent) !=
        ownSizeof(struct_SDL_TextInputEvent_1157628932):
      static :
        warning("Declaration of " & "struct_SDL_TextInputEvent" &
            " exists but with different size")
    struct_SDL_TextInputEvent
   else:
    struct_SDL_TextInputEvent_1157628932)
  AudioStreamCallback_1157628583 = (when declared(AudioStreamCallback):
    when ownSizeof(AudioStreamCallback) != ownSizeof(AudioStreamCallback_1157628582):
      static :
        warning("Declaration of " & "AudioStreamCallback" &
            " exists but with different size")
    AudioStreamCallback
   else:
    AudioStreamCallback_1157628582)
  FColor_1157628655 = (when declared(FColor):
    when ownSizeof(FColor) != ownSizeof(FColor_1157628654):
      static :
        warning("Declaration of " & "FColor" & " exists but with different size")
    FColor
   else:
    FColor_1157628654)
  ScaleMode_1157628685 = (when declared(ScaleMode):
    when ownSizeof(ScaleMode) != ownSizeof(ScaleMode_1157628684):
      static :
        warning("Declaration of " & "ScaleMode" &
            " exists but with different size")
    ScaleMode
   else:
    ScaleMode_1157628684)
  struct_SDL_AtomicU32_1157628513 = (when declared(struct_SDL_AtomicU32):
    when ownSizeof(struct_SDL_AtomicU32) != ownSizeof(struct_SDL_AtomicU32_1157628512):
      static :
        warning("Declaration of " & "struct_SDL_AtomicU32" &
            " exists but with different size")
    struct_SDL_AtomicU32
   else:
    struct_SDL_AtomicU32_1157628512)
  struct_SDL_DisplayMode_1157628721 = (when declared(struct_SDL_DisplayMode):
    when ownSizeof(struct_SDL_DisplayMode) != ownSizeof(struct_SDL_DisplayMode_1157628720):
      static :
        warning("Declaration of " & "struct_SDL_DisplayMode" &
            " exists but with different size")
    struct_SDL_DisplayMode
   else:
    struct_SDL_DisplayMode_1157628720)
  FileDialogType_1157628781 = (when declared(FileDialogType):
    when ownSizeof(FileDialogType) != ownSizeof(FileDialogType_1157628780):
      static :
        warning("Declaration of " & "FileDialogType" &
            " exists but with different size")
    FileDialogType
   else:
    FileDialogType_1157628780)
  TouchID_1157628889 = (when declared(TouchID):
    when ownSizeof(TouchID) != ownSizeof(TouchID_1157628888):
      static :
        warning("Declaration of " & "TouchID" &
            " exists but with different size")
    TouchID
   else:
    TouchID_1157628888)
  GPUBlendFactor_1157629189 = (when declared(GPUBlendFactor):
    when ownSizeof(GPUBlendFactor) != ownSizeof(GPUBlendFactor_1157629188):
      static :
        warning("Declaration of " & "GPUBlendFactor" &
            " exists but with different size")
    GPUBlendFactor
   else:
    GPUBlendFactor_1157629188)
  enum_SDL_AsyncIOTaskType_1157628493 = (when declared(enum_SDL_AsyncIOTaskType):
    when ownSizeof(enum_SDL_AsyncIOTaskType) !=
        ownSizeof(enum_SDL_AsyncIOTaskType_1157628492):
      static :
        warning("Declaration of " & "enum_SDL_AsyncIOTaskType" &
            " exists but with different size")
    enum_SDL_AsyncIOTaskType
   else:
    enum_SDL_AsyncIOTaskType_1157628492)
  enum_SDL_SystemTheme_1157628715 = (when declared(enum_SDL_SystemTheme):
    when ownSizeof(enum_SDL_SystemTheme) != ownSizeof(enum_SDL_SystemTheme_1157628714):
      static :
        warning("Declaration of " & "enum_SDL_SystemTheme" &
            " exists but with different size")
    enum_SDL_SystemTheme
   else:
    enum_SDL_SystemTheme_1157628714)
  GPUTexture_1157629089 = (when declared(GPUTexture):
    when ownSizeof(GPUTexture) != ownSizeof(GPUTexture_1157629088):
      static :
        warning("Declaration of " & "GPUTexture" &
            " exists but with different size")
    GPUTexture
   else:
    GPUTexture_1157629088)
  struct_SDL_GPUTransferBufferCreateInfo_1157629293 = (when declared(
      struct_SDL_GPUTransferBufferCreateInfo):
    when ownSizeof(struct_SDL_GPUTransferBufferCreateInfo) !=
        ownSizeof(struct_SDL_GPUTransferBufferCreateInfo_1157629292):
      static :
        warning("Declaration of " & "struct_SDL_GPUTransferBufferCreateInfo" &
            " exists but with different size")
    struct_SDL_GPUTransferBufferCreateInfo
   else:
    struct_SDL_GPUTransferBufferCreateInfo_1157629292)
  SpinLock_1157628507 = (when declared(SpinLock):
    when ownSizeof(SpinLock) != ownSizeof(SpinLock_1157628506):
      static :
        warning("Declaration of " & "SpinLock" &
            " exists but with different size")
    SpinLock
   else:
    SpinLock_1157628506)
  TouchFingerEvent_1157629011 = (when declared(TouchFingerEvent):
    when ownSizeof(TouchFingerEvent) != ownSizeof(TouchFingerEvent_1157629010):
      static :
        warning("Declaration of " & "TouchFingerEvent" &
            " exists but with different size")
    TouchFingerEvent
   else:
    TouchFingerEvent_1157629010)
  GamepadDeviceEvent_1157628987 = (when declared(GamepadDeviceEvent):
    when ownSizeof(GamepadDeviceEvent) != ownSizeof(GamepadDeviceEvent_1157628986):
      static :
        warning("Declaration of " & "GamepadDeviceEvent" &
            " exists but with different size")
    GamepadDeviceEvent
   else:
    GamepadDeviceEvent_1157628986)
  GPUComputePass_1157629103 = (when declared(GPUComputePass):
    when ownSizeof(GPUComputePass) != ownSizeof(GPUComputePass_1157629102):
      static :
        warning("Declaration of " & "GPUComputePass" &
            " exists but with different size")
    GPUComputePass
   else:
    GPUComputePass_1157629102)
  WindowID_1157628713 = (when declared(WindowID):
    when ownSizeof(WindowID) != ownSizeof(WindowID_1157628712):
      static :
        warning("Declaration of " & "WindowID" &
            " exists but with different size")
    WindowID
   else:
    WindowID_1157628712)
  struct_SDL_JoyAxisEvent_1157628953 = (when declared(struct_SDL_JoyAxisEvent):
    when ownSizeof(struct_SDL_JoyAxisEvent) !=
        ownSizeof(struct_SDL_JoyAxisEvent_1157628952):
      static :
        warning("Declaration of " & "struct_SDL_JoyAxisEvent" &
            " exists but with different size")
    struct_SDL_JoyAxisEvent
   else:
    struct_SDL_JoyAxisEvent_1157628952)
  TextureAccess_1157629475 = (when declared(TextureAccess):
    when ownSizeof(TextureAccess) != ownSizeof(TextureAccess_1157629474):
      static :
        warning("Declaration of " & "TextureAccess" &
            " exists but with different size")
    TextureAccess
   else:
    TextureAccess_1157629474)
  struct_SDL_PenMotionEvent_1157629017 = (when declared(
      struct_SDL_PenMotionEvent):
    when ownSizeof(struct_SDL_PenMotionEvent) !=
        ownSizeof(struct_SDL_PenMotionEvent_1157629016):
      static :
        warning("Declaration of " & "struct_SDL_PenMotionEvent" &
            " exists but with different size")
    struct_SDL_PenMotionEvent
   else:
    struct_SDL_PenMotionEvent_1157629016)
  GPUBufferCreateInfo_1157629291 = (when declared(GPUBufferCreateInfo):
    when ownSizeof(GPUBufferCreateInfo) != ownSizeof(GPUBufferCreateInfo_1157629290):
      static :
        warning("Declaration of " & "GPUBufferCreateInfo" &
            " exists but with different size")
    GPUBufferCreateInfo
   else:
    GPUBufferCreateInfo_1157629290)
  struct_SDL_Rect_1157628673 = (when declared(struct_SDL_Rect):
    when ownSizeof(struct_SDL_Rect) != ownSizeof(struct_SDL_Rect_1157628672):
      static :
        warning("Declaration of " & "struct_SDL_Rect" &
            " exists but with different size")
    struct_SDL_Rect
   else:
    struct_SDL_Rect_1157628672)
  VirtualJoystickDesc_1157628821 = (when declared(VirtualJoystickDesc):
    when ownSizeof(VirtualJoystickDesc) != ownSizeof(VirtualJoystickDesc_1157628820):
      static :
        warning("Declaration of " & "VirtualJoystickDesc" &
            " exists but with different size")
    VirtualJoystickDesc
   else:
    VirtualJoystickDesc_1157628820)
  struct_SDL_VirtualJoystickDesc_1157628819 = (when declared(
      struct_SDL_VirtualJoystickDesc):
    when ownSizeof(struct_SDL_VirtualJoystickDesc) !=
        ownSizeof(struct_SDL_VirtualJoystickDesc_1157628818):
      static :
        warning("Declaration of " & "struct_SDL_VirtualJoystickDesc" &
            " exists but with different size")
    struct_SDL_VirtualJoystickDesc
   else:
    struct_SDL_VirtualJoystickDesc_1157628818)
  Mutex_1157628541 = (when declared(Mutex):
    when ownSizeof(Mutex) != ownSizeof(Mutex_1157628540):
      static :
        warning("Declaration of " & "Mutex" & " exists but with different size")
    Mutex
   else:
    Mutex_1157628540)
  IOStatus_1157628559 = (when declared(IOStatus):
    when ownSizeof(IOStatus) != ownSizeof(IOStatus_1157628558):
      static :
        warning("Declaration of " & "IOStatus" &
            " exists but with different size")
    IOStatus
   else:
    IOStatus_1157628558)
  enum_SDL_ScaleMode_1157628683 = (when declared(enum_SDL_ScaleMode):
    when ownSizeof(enum_SDL_ScaleMode) != ownSizeof(enum_SDL_ScaleMode_1157628682):
      static :
        warning("Declaration of " & "enum_SDL_ScaleMode" &
            " exists but with different size")
    enum_SDL_ScaleMode
   else:
    enum_SDL_ScaleMode_1157628682)
  enum_SDL_PenAxis_1157628885 = (when declared(enum_SDL_PenAxis):
    when ownSizeof(enum_SDL_PenAxis) != ownSizeof(enum_SDL_PenAxis_1157628884):
      static :
        warning("Declaration of " & "enum_SDL_PenAxis" &
            " exists but with different size")
    enum_SDL_PenAxis
   else:
    enum_SDL_PenAxis_1157628884)
  GPUTextureCreateInfo_1157629287 = (when declared(GPUTextureCreateInfo):
    when ownSizeof(GPUTextureCreateInfo) != ownSizeof(GPUTextureCreateInfo_1157629286):
      static :
        warning("Declaration of " & "GPUTextureCreateInfo" &
            " exists but with different size")
    GPUTextureCreateInfo
   else:
    GPUTextureCreateInfo_1157629286)
  JoyDeviceEvent_1157628971 = (when declared(JoyDeviceEvent):
    when ownSizeof(JoyDeviceEvent) != ownSizeof(JoyDeviceEvent_1157628970):
      static :
        warning("Declaration of " & "JoyDeviceEvent" &
            " exists but with different size")
    JoyDeviceEvent
   else:
    JoyDeviceEvent_1157628970)
  GPUSwapchainComposition_1157629211 = (when declared(GPUSwapchainComposition):
    when ownSizeof(GPUSwapchainComposition) !=
        ownSizeof(GPUSwapchainComposition_1157629210):
      static :
        warning("Declaration of " & "GPUSwapchainComposition" &
            " exists but with different size")
    GPUSwapchainComposition
   else:
    GPUSwapchainComposition_1157629210)
  struct_SDL_MouseWheelEvent_1157628949 = (when declared(
      struct_SDL_MouseWheelEvent):
    when ownSizeof(struct_SDL_MouseWheelEvent) !=
        ownSizeof(struct_SDL_MouseWheelEvent_1157628948):
      static :
        warning("Declaration of " & "struct_SDL_MouseWheelEvent" &
            " exists but with different size")
    struct_SDL_MouseWheelEvent
   else:
    struct_SDL_MouseWheelEvent_1157628948)
  X11EventHook_1157629495 = (when declared(X11EventHook):
    when ownSizeof(X11EventHook) != ownSizeof(X11EventHook_1157629494):
      static :
        warning("Declaration of " & "X11EventHook" &
            " exists but with different size")
    X11EventHook
   else:
    X11EventHook_1157629494)
  SystemTheme_1157628717 = (when declared(SystemTheme):
    when ownSizeof(SystemTheme) != ownSizeof(SystemTheme_1157628716):
      static :
        warning("Declaration of " & "SystemTheme" &
            " exists but with different size")
    SystemTheme
   else:
    SystemTheme_1157628716)
  struct_SDL_Vertex_1157629469 = (when declared(struct_SDL_Vertex):
    when ownSizeof(struct_SDL_Vertex) != ownSizeof(struct_SDL_Vertex_1157629468):
      static :
        warning("Declaration of " & "struct_SDL_Vertex" &
            " exists but with different size")
    struct_SDL_Vertex
   else:
    struct_SDL_Vertex_1157629468)
  ClipboardDataCallback_1157628707 = (when declared(ClipboardDataCallback):
    when ownSizeof(ClipboardDataCallback) != ownSizeof(ClipboardDataCallback_1157628706):
      static :
        warning("Declaration of " & "ClipboardDataCallback" &
            " exists but with different size")
    ClipboardDataCallback
   else:
    ClipboardDataCallback_1157628706)
  GPUVertexInputState_1157629271 = (when declared(GPUVertexInputState):
    when ownSizeof(GPUVertexInputState) != ownSizeof(GPUVertexInputState_1157629270):
      static :
        warning("Declaration of " & "GPUVertexInputState" &
            " exists but with different size")
    GPUVertexInputState
   else:
    GPUVertexInputState_1157629270)
  enum_SDL_GamepadType_1157628825 = (when declared(enum_SDL_GamepadType):
    when ownSizeof(enum_SDL_GamepadType) != ownSizeof(enum_SDL_GamepadType_1157628824):
      static :
        warning("Declaration of " & "enum_SDL_GamepadType" &
            " exists but with different size")
    enum_SDL_GamepadType
   else:
    enum_SDL_GamepadType_1157628824)
  KeyboardID_1157628857 = (when declared(KeyboardID):
    when ownSizeof(KeyboardID) != ownSizeof(KeyboardID_1157628856):
      static :
        warning("Declaration of " & "KeyboardID" &
            " exists but with different size")
    KeyboardID
   else:
    KeyboardID_1157628856)
  GPUBlitRegion_1157629235 = (when declared(GPUBlitRegion):
    when ownSizeof(GPUBlitRegion) != ownSizeof(GPUBlitRegion_1157629234):
      static :
        warning("Declaration of " & "GPUBlitRegion" &
            " exists but with different size")
    GPUBlitRegion
   else:
    GPUBlitRegion_1157629234)
  MessageBoxData_1157629459 = (when declared(MessageBoxData):
    when ownSizeof(MessageBoxData) != ownSizeof(MessageBoxData_1157629458):
      static :
        warning("Declaration of " & "MessageBoxData" &
            " exists but with different size")
    MessageBoxData
   else:
    MessageBoxData_1157629458)
  GamepadButtonEvent_1157628983 = (when declared(GamepadButtonEvent):
    when ownSizeof(GamepadButtonEvent) != ownSizeof(GamepadButtonEvent_1157628982):
      static :
        warning("Declaration of " & "GamepadButtonEvent" &
            " exists but with different size")
    GamepadButtonEvent
   else:
    GamepadButtonEvent_1157628982)
  intptr_t_1157628747 = (when declared(intptr_t):
    when ownSizeof(intptr_t) != ownSizeof(intptr_t_1157628746):
      static :
        warning("Declaration of " & "intptr_t" &
            " exists but with different size")
    intptr_t
   else:
    intptr_t_1157628746)
  GPUBufferRegion_1157629243 = (when declared(GPUBufferRegion):
    when ownSizeof(GPUBufferRegion) != ownSizeof(GPUBufferRegion_1157629242):
      static :
        warning("Declaration of " & "GPUBufferRegion" &
            " exists but with different size")
    GPUBufferRegion
   else:
    GPUBufferRegion_1157629242)
  free_func_1157628467 = (when declared(free_func):
    when ownSizeof(free_func) != ownSizeof(free_func_1157628466):
      static :
        warning("Declaration of " & "free_func" &
            " exists but with different size")
    free_func
   else:
    free_func_1157628466)
  FPoint_1157628671 = (when declared(FPoint):
    when ownSizeof(FPoint) != ownSizeof(FPoint_1157628670):
      static :
        warning("Declaration of " & "FPoint" & " exists but with different size")
    FPoint
   else:
    FPoint_1157628670)
  struct_SDL_JoyBatteryEvent_1157628973 = (when declared(
      struct_SDL_JoyBatteryEvent):
    when ownSizeof(struct_SDL_JoyBatteryEvent) !=
        ownSizeof(struct_SDL_JoyBatteryEvent_1157628972):
      static :
        warning("Declaration of " & "struct_SDL_JoyBatteryEvent" &
            " exists but with different size")
    struct_SDL_JoyBatteryEvent
   else:
    struct_SDL_JoyBatteryEvent_1157628972)
  GPUSampleCount_1157629137 = (when declared(GPUSampleCount):
    when ownSizeof(GPUSampleCount) != ownSizeof(GPUSampleCount_1157629136):
      static :
        warning("Declaration of " & "GPUSampleCount" &
            " exists but with different size")
    GPUSampleCount
   else:
    GPUSampleCount_1157629136)
  HapticConstant_1157629361 = (when declared(HapticConstant):
    when ownSizeof(HapticConstant) != ownSizeof(HapticConstant_1157629360):
      static :
        warning("Declaration of " & "HapticConstant" &
            " exists but with different size")
    HapticConstant
   else:
    HapticConstant_1157629360)
  AppResult_1157629409 = (when declared(AppResult):
    when ownSizeof(AppResult) != ownSizeof(AppResult_1157629408):
      static :
        warning("Declaration of " & "AppResult" &
            " exists but with different size")
    AppResult
   else:
    AppResult_1157629408)
  GPUBufferLocation_1157629239 = (when declared(GPUBufferLocation):
    when ownSizeof(GPUBufferLocation) != ownSizeof(GPUBufferLocation_1157629238):
      static :
        warning("Declaration of " & "GPUBufferLocation" &
            " exists but with different size")
    GPUBufferLocation
   else:
    GPUBufferLocation_1157629238)
  struct_SDL_DateTime_1157629501 = (when declared(struct_SDL_DateTime):
    when ownSizeof(struct_SDL_DateTime) != ownSizeof(struct_SDL_DateTime_1157629500):
      static :
        warning("Declaration of " & "struct_SDL_DateTime" &
            " exists but with different size")
    struct_SDL_DateTime
   else:
    struct_SDL_DateTime_1157629500)
  AudioStream_1157628581 = (when declared(AudioStream):
    when ownSizeof(AudioStream) != ownSizeof(AudioStream_1157628580):
      static :
        warning("Declaration of " & "AudioStream" &
            " exists but with different size")
    AudioStream
   else:
    AudioStream_1157628580)
  DisplayMode_1157628723 = (when declared(DisplayMode):
    when ownSizeof(DisplayMode) != ownSizeof(DisplayMode_1157628722):
      static :
        warning("Declaration of " & "DisplayMode" &
            " exists but with different size")
    DisplayMode
   else:
    DisplayMode_1157628722)
  HitTest_1157628771 = (when declared(HitTest):
    when ownSizeof(HitTest) != ownSizeof(HitTest_1157628770):
      static :
        warning("Declaration of " & "HitTest" &
            " exists but with different size")
    HitTest
   else:
    HitTest_1157628770)
  Capitalization_1157628865 = (when declared(Capitalization):
    when ownSizeof(Capitalization) != ownSizeof(Capitalization_1157628864):
      static :
        warning("Declaration of " & "Capitalization" &
            " exists but with different size")
    Capitalization
   else:
    Capitalization_1157628864)
  MouseButtonEvent_1157628947 = (when declared(MouseButtonEvent):
    when ownSizeof(MouseButtonEvent) != ownSizeof(MouseButtonEvent_1157628946):
      static :
        warning("Declaration of " & "MouseButtonEvent" &
            " exists but with different size")
    MouseButtonEvent
   else:
    MouseButtonEvent_1157628946)
  struct_SDL_SensorEvent_1157629041 = (when declared(struct_SDL_SensorEvent):
    when ownSizeof(struct_SDL_SensorEvent) != ownSizeof(struct_SDL_SensorEvent_1157629040):
      static :
        warning("Declaration of " & "struct_SDL_SensorEvent" &
            " exists but with different size")
    struct_SDL_SensorEvent
   else:
    struct_SDL_SensorEvent_1157629040)
  Surface_1157628693 = (when declared(Surface):
    when ownSizeof(Surface) != ownSizeof(Surface_1157628692):
      static :
        warning("Declaration of " & "Surface" &
            " exists but with different size")
    Surface
   else:
    Surface_1157628692)
  union_SDL_Event_1157629053 = (when declared(union_SDL_Event):
    when ownSizeof(union_SDL_Event) != ownSizeof(union_SDL_Event_1157629052):
      static :
        warning("Declaration of " & "union_SDL_Event" &
            " exists but with different size")
    union_SDL_Event
   else:
    union_SDL_Event_1157629052)
  enum_SDL_FlipMode_1157628687 = (when declared(enum_SDL_FlipMode):
    when ownSizeof(enum_SDL_FlipMode) != ownSizeof(enum_SDL_FlipMode_1157628686):
      static :
        warning("Declaration of " & "enum_SDL_FlipMode" &
            " exists but with different size")
    enum_SDL_FlipMode
   else:
    enum_SDL_FlipMode_1157628686)
  struct_SDL_GPUGraphicsPipelineTargetInfo_1157629313 = (when declared(
      struct_SDL_GPUGraphicsPipelineTargetInfo):
    when ownSizeof(struct_SDL_GPUGraphicsPipelineTargetInfo) !=
        ownSizeof(struct_SDL_GPUGraphicsPipelineTargetInfo_1157629312):
      static :
        warning("Declaration of " & "struct_SDL_GPUGraphicsPipelineTargetInfo" &
            " exists but with different size")
    struct_SDL_GPUGraphicsPipelineTargetInfo
   else:
    struct_SDL_GPUGraphicsPipelineTargetInfo_1157629312)
  EventFilter_1157629061 = (when declared(EventFilter):
    when ownSizeof(EventFilter) != ownSizeof(EventFilter_1157629060):
      static :
        warning("Declaration of " & "EventFilter" &
            " exists but with different size")
    EventFilter
   else:
    EventFilter_1157629060)
  enum_SDL_DateFormat_1157629505 = (when declared(enum_SDL_DateFormat):
    when ownSizeof(enum_SDL_DateFormat) != ownSizeof(enum_SDL_DateFormat_1157629504):
      static :
        warning("Declaration of " & "enum_SDL_DateFormat" &
            " exists but with different size")
    enum_SDL_DateFormat
   else:
    enum_SDL_DateFormat_1157629504)
  enum_SDL_AudioFormat_1157628571 = (when declared(enum_SDL_AudioFormat):
    when ownSizeof(enum_SDL_AudioFormat) != ownSizeof(enum_SDL_AudioFormat_1157628570):
      static :
        warning("Declaration of " & "enum_SDL_AudioFormat" &
            " exists but with different size")
    enum_SDL_AudioFormat
   else:
    enum_SDL_AudioFormat_1157628570)
  enum_SDL_GPUBlendFactor_1157629187 = (when declared(enum_SDL_GPUBlendFactor):
    when ownSizeof(enum_SDL_GPUBlendFactor) !=
        ownSizeof(enum_SDL_GPUBlendFactor_1157629186):
      static :
        warning("Declaration of " & "enum_SDL_GPUBlendFactor" &
            " exists but with different size")
    enum_SDL_GPUBlendFactor
   else:
    enum_SDL_GPUBlendFactor_1157629186)
  GLContextResetNotification_1157628765 = (when declared(
      GLContextResetNotification):
    when ownSizeof(GLContextResetNotification) !=
        ownSizeof(GLContextResetNotification_1157628764):
      static :
        warning("Declaration of " & "GLContextResetNotification" &
            " exists but with different size")
    GLContextResetNotification
   else:
    GLContextResetNotification_1157628764)
  AppInit_func_1157629411 = (when declared(AppInit_func):
    when ownSizeof(AppInit_func) != ownSizeof(AppInit_func_1157629410):
      static :
        warning("Declaration of " & "AppInit_func" &
            " exists but with different size")
    AppInit_func
   else:
    AppInit_func_1157629410)
  PackedLayout_1157628615 = (when declared(PackedLayout):
    when ownSizeof(PackedLayout) != ownSizeof(PackedLayout_1157628614):
      static :
        warning("Declaration of " & "PackedLayout" &
            " exists but with different size")
    PackedLayout
   else:
    PackedLayout_1157628614)
  struct_SDL_GPUBufferBinding_1157629337 = (when declared(
      struct_SDL_GPUBufferBinding):
    when ownSizeof(struct_SDL_GPUBufferBinding) !=
        ownSizeof(struct_SDL_GPUBufferBinding_1157629336):
      static :
        warning("Declaration of " & "struct_SDL_GPUBufferBinding" &
            " exists but with different size")
    struct_SDL_GPUBufferBinding
   else:
    struct_SDL_GPUBufferBinding_1157629336)
  struct_SDL_InitState_1157628553 = (when declared(struct_SDL_InitState):
    when ownSizeof(struct_SDL_InitState) != ownSizeof(struct_SDL_InitState_1157628552):
      static :
        warning("Declaration of " & "struct_SDL_InitState" &
            " exists but with different size")
    struct_SDL_InitState
   else:
    struct_SDL_InitState_1157628552)
  BlendOperation_1157628591 = (when declared(BlendOperation):
    when ownSizeof(BlendOperation) != ownSizeof(BlendOperation_1157628590):
      static :
        warning("Declaration of " & "BlendOperation" &
            " exists but with different size")
    BlendOperation
   else:
    BlendOperation_1157628590)
  struct_SDL_Surface_1157628691 = (when declared(struct_SDL_Surface):
    when ownSizeof(struct_SDL_Surface) != ownSizeof(struct_SDL_Surface_1157628690):
      static :
        warning("Declaration of " & "struct_SDL_Surface" &
            " exists but with different size")
    struct_SDL_Surface
   else:
    struct_SDL_Surface_1157628690)
  MouseID_1157628867 = (when declared(MouseID):
    when ownSizeof(MouseID) != ownSizeof(MouseID_1157628866):
      static :
        warning("Declaration of " & "MouseID" &
            " exists but with different size")
    MouseID
   else:
    MouseID_1157628866)
  TextInputEvent_1157628935 = (when declared(TextInputEvent):
    when ownSizeof(TextInputEvent) != ownSizeof(TextInputEvent_1157628934):
      static :
        warning("Declaration of " & "TextInputEvent" &
            " exists but with different size")
    TextInputEvent
   else:
    TextInputEvent_1157628934)
  struct_SDL_GPUBlitRegion_1157629233 = (when declared(struct_SDL_GPUBlitRegion):
    when ownSizeof(struct_SDL_GPUBlitRegion) !=
        ownSizeof(struct_SDL_GPUBlitRegion_1157629232):
      static :
        warning("Declaration of " & "struct_SDL_GPUBlitRegion" &
            " exists but with different size")
    struct_SDL_GPUBlitRegion
   else:
    struct_SDL_GPUBlitRegion_1157629232)
  struct_SDL_GPURasterizerState_1157629297 = (when declared(
      struct_SDL_GPURasterizerState):
    when ownSizeof(struct_SDL_GPURasterizerState) !=
        ownSizeof(struct_SDL_GPURasterizerState_1157629296):
      static :
        warning("Declaration of " & "struct_SDL_GPURasterizerState" &
            " exists but with different size")
    struct_SDL_GPURasterizerState
   else:
    struct_SDL_GPURasterizerState_1157629296)
  enum_SDL_GPUSamplerAddressMode_1157629201 = (when declared(
      enum_SDL_GPUSamplerAddressMode):
    when ownSizeof(enum_SDL_GPUSamplerAddressMode) !=
        ownSizeof(enum_SDL_GPUSamplerAddressMode_1157629200):
      static :
        warning("Declaration of " & "enum_SDL_GPUSamplerAddressMode" &
            " exists but with different size")
    enum_SDL_GPUSamplerAddressMode
   else:
    enum_SDL_GPUSamplerAddressMode_1157629200)
  DropEvent_1157629035 = (when declared(DropEvent):
    when ownSizeof(DropEvent) != ownSizeof(DropEvent_1157629034):
      static :
        warning("Declaration of " & "DropEvent" &
            " exists but with different size")
    DropEvent
   else:
    DropEvent_1157629034)
  enum_SDL_AppResult_1157629407 = (when declared(enum_SDL_AppResult):
    when ownSizeof(enum_SDL_AppResult) != ownSizeof(enum_SDL_AppResult_1157629406):
      static :
        warning("Declaration of " & "enum_SDL_AppResult" &
            " exists but with different size")
    enum_SDL_AppResult
   else:
    enum_SDL_AppResult_1157629406)
  struct_SDL_DisplayEvent_1157628909 = (when declared(struct_SDL_DisplayEvent):
    when ownSizeof(struct_SDL_DisplayEvent) !=
        ownSizeof(struct_SDL_DisplayEvent_1157628908):
      static :
        warning("Declaration of " & "struct_SDL_DisplayEvent" &
            " exists but with different size")
    struct_SDL_DisplayEvent
   else:
    struct_SDL_DisplayEvent_1157628908)
  PixelFormat_1157628619 = (when declared(PixelFormat):
    when ownSizeof(PixelFormat) != ownSizeof(PixelFormat_1157628618):
      static :
        warning("Declaration of " & "PixelFormat" &
            " exists but with different size")
    PixelFormat
   else:
    PixelFormat_1157628618)
  CameraPosition_1157628705 = (when declared(CameraPosition):
    when ownSizeof(CameraPosition) != ownSizeof(CameraPosition_1157628704):
      static :
        warning("Declaration of " & "CameraPosition" &
            " exists but with different size")
    CameraPosition
   else:
    CameraPosition_1157628704)
  GPUShaderStage_1157629151 = (when declared(GPUShaderStage):
    when ownSizeof(GPUShaderStage) != ownSizeof(GPUShaderStage_1157629150):
      static :
        warning("Declaration of " & "GPUShaderStage" &
            " exists but with different size")
    GPUShaderStage
   else:
    GPUShaderStage_1157629150)
  CameraSpec_1157628701 = (when declared(CameraSpec):
    when ownSizeof(CameraSpec) != ownSizeof(CameraSpec_1157628700):
      static :
        warning("Declaration of " & "CameraSpec" &
            " exists but with different size")
    CameraSpec
   else:
    CameraSpec_1157628700)
  Environment_1157628469 = (when declared(Environment):
    when ownSizeof(Environment) != ownSizeof(Environment_1157628468):
      static :
        warning("Declaration of " & "Environment" &
            " exists but with different size")
    Environment
   else:
    Environment_1157628468)
  Joystick_1157628799 = (when declared(Joystick):
    when ownSizeof(Joystick) != ownSizeof(Joystick_1157628798):
      static :
        warning("Declaration of " & "Joystick" &
            " exists but with different size")
    Joystick
   else:
    Joystick_1157628798)
  struct_SDL_GPUMultisampleState_1157629301 = (when declared(
      struct_SDL_GPUMultisampleState):
    when ownSizeof(struct_SDL_GPUMultisampleState) !=
        ownSizeof(struct_SDL_GPUMultisampleState_1157629300):
      static :
        warning("Declaration of " & "struct_SDL_GPUMultisampleState" &
            " exists but with different size")
    struct_SDL_GPUMultisampleState
   else:
    struct_SDL_GPUMultisampleState_1157629300)
  wchar_t_1157628475 = (when declared(wchar_t):
    when ownSizeof(wchar_t) != ownSizeof(wchar_t_1157628474):
      static :
        warning("Declaration of " & "wchar_t" &
            " exists but with different size")
    wchar_t
   else:
    wchar_t_1157628474)
  GPUBlendOp_1157629185 = (when declared(GPUBlendOp):
    when ownSizeof(GPUBlendOp) != ownSizeof(GPUBlendOp_1157629184):
      static :
        warning("Declaration of " & "GPUBlendOp" &
            " exists but with different size")
    GPUBlendOp
   else:
    GPUBlendOp_1157629184)
  enum_SDL_IOWhence_1157628561 = (when declared(enum_SDL_IOWhence):
    when ownSizeof(enum_SDL_IOWhence) != ownSizeof(enum_SDL_IOWhence_1157628560):
      static :
        warning("Declaration of " & "enum_SDL_IOWhence" &
            " exists but with different size")
    enum_SDL_IOWhence
   else:
    enum_SDL_IOWhence_1157628560)
  JoyBallEvent_1157628959 = (when declared(JoyBallEvent):
    when ownSizeof(JoyBallEvent) != ownSizeof(JoyBallEvent_1157628958):
      static :
        warning("Declaration of " & "JoyBallEvent" &
            " exists but with different size")
    JoyBallEvent
   else:
    JoyBallEvent_1157628958)
  GPUTextureSamplerBinding_1157629343 = (when declared(GPUTextureSamplerBinding):
    when ownSizeof(GPUTextureSamplerBinding) !=
        ownSizeof(GPUTextureSamplerBinding_1157629342):
      static :
        warning("Declaration of " & "GPUTextureSamplerBinding" &
            " exists but with different size")
    GPUTextureSamplerBinding
   else:
    GPUTextureSamplerBinding_1157629342)
  Sint16_1157628439 = (when declared(Sint16):
    when ownSizeof(Sint16) != ownSizeof(Sint16_1157628438):
      static :
        warning("Declaration of " & "Sint16" & " exists but with different size")
    Sint16
   else:
    Sint16_1157628438)
  Folder_1157629065 = (when declared(Folder):
    when ownSizeof(Folder) != ownSizeof(Folder_1157629064):
      static :
        warning("Declaration of " & "Folder" & " exists but with different size")
    Folder
   else:
    Folder_1157629064)
  struct_SDL_GPUViewport_1157629213 = (when declared(struct_SDL_GPUViewport):
    when ownSizeof(struct_SDL_GPUViewport) != ownSizeof(struct_SDL_GPUViewport_1157629212):
      static :
        warning("Declaration of " & "struct_SDL_GPUViewport" &
            " exists but with different size")
    struct_SDL_GPUViewport
   else:
    struct_SDL_GPUViewport_1157629212)
  AsyncIOResult_1157628499 = (when declared(AsyncIOResult):
    when ownSizeof(AsyncIOResult) != ownSizeof(AsyncIOResult_1157628498):
      static :
        warning("Declaration of " & "AsyncIOResult" &
            " exists but with different size")
    AsyncIOResult
   else:
    AsyncIOResult_1157628498)
  Sint8_1157628435 = (when declared(Sint8):
    when ownSizeof(Sint8) != ownSizeof(Sint8_1157628434):
      static :
        warning("Declaration of " & "Sint8" & " exists but with different size")
    Sint8
   else:
    Sint8_1157628434)
  Process_1157629463 = (when declared(Process):
    when ownSizeof(Process) != ownSizeof(Process_1157629462):
      static :
        warning("Declaration of " & "Process" &
            " exists but with different size")
    Process
   else:
    Process_1157629462)
  EGLSurface_1157628743 = (when declared(EGLSurface):
    when ownSizeof(EGLSurface) != ownSizeof(EGLSurface_1157628742):
      static :
        warning("Declaration of " & "EGLSurface" &
            " exists but with different size")
    EGLSurface
   else:
    EGLSurface_1157628742)
  struct_SDL_MouseDeviceEvent_1157628937 = (when declared(
      struct_SDL_MouseDeviceEvent):
    when ownSizeof(struct_SDL_MouseDeviceEvent) !=
        ownSizeof(struct_SDL_MouseDeviceEvent_1157628936):
      static :
        warning("Declaration of " & "struct_SDL_MouseDeviceEvent" &
            " exists but with different size")
    struct_SDL_MouseDeviceEvent
   else:
    struct_SDL_MouseDeviceEvent_1157628936)
  struct_SDL_HapticCustom_1157629379 = (when declared(struct_SDL_HapticCustom):
    when ownSizeof(struct_SDL_HapticCustom) !=
        ownSizeof(struct_SDL_HapticCustom_1157629378):
      static :
        warning("Declaration of " & "struct_SDL_HapticCustom" &
            " exists but with different size")
    struct_SDL_HapticCustom
   else:
    struct_SDL_HapticCustom_1157629378)
  struct_SDL_Color_1157628649 = (when declared(struct_SDL_Color):
    when ownSizeof(struct_SDL_Color) != ownSizeof(struct_SDL_Color_1157628648):
      static :
        warning("Declaration of " & "struct_SDL_Color" &
            " exists but with different size")
    struct_SDL_Color
   else:
    struct_SDL_Color_1157628648)
  enum_SDL_DisplayOrientation_1157628725 = (when declared(
      enum_SDL_DisplayOrientation):
    when ownSizeof(enum_SDL_DisplayOrientation) !=
        ownSizeof(enum_SDL_DisplayOrientation_1157628724):
      static :
        warning("Declaration of " & "enum_SDL_DisplayOrientation" &
            " exists but with different size")
    enum_SDL_DisplayOrientation
   else:
    enum_SDL_DisplayOrientation_1157628724)
  enum_SDL_GPUShaderStage_1157629149 = (when declared(enum_SDL_GPUShaderStage):
    when ownSizeof(enum_SDL_GPUShaderStage) !=
        ownSizeof(enum_SDL_GPUShaderStage_1157629148):
      static :
        warning("Declaration of " & "enum_SDL_GPUShaderStage" &
            " exists but with different size")
    enum_SDL_GPUShaderStage
   else:
    enum_SDL_GPUShaderStage_1157629148)
  struct_SDL_GPUVertexAttribute_1157629265 = (when declared(
      struct_SDL_GPUVertexAttribute):
    when ownSizeof(struct_SDL_GPUVertexAttribute) !=
        ownSizeof(struct_SDL_GPUVertexAttribute_1157629264):
      static :
        warning("Declaration of " & "struct_SDL_GPUVertexAttribute" &
            " exists but with different size")
    struct_SDL_GPUVertexAttribute
   else:
    struct_SDL_GPUVertexAttribute_1157629264)
  GamepadAxis_1157628839 = (when declared(GamepadAxis):
    when ownSizeof(GamepadAxis) != ownSizeof(GamepadAxis_1157628838):
      static :
        warning("Declaration of " & "GamepadAxis" &
            " exists but with different size")
    GamepadAxis
   else:
    GamepadAxis_1157628838)
  struct_SDL_AudioSpec_1157628577 = (when declared(struct_SDL_AudioSpec):
    when ownSizeof(struct_SDL_AudioSpec) != ownSizeof(struct_SDL_AudioSpec_1157628576):
      static :
        warning("Declaration of " & "struct_SDL_AudioSpec" &
            " exists but with different size")
    struct_SDL_AudioSpec
   else:
    struct_SDL_AudioSpec_1157628576)
  GPURasterizerState_1157629299 = (when declared(GPURasterizerState):
    when ownSizeof(GPURasterizerState) != ownSizeof(GPURasterizerState_1157629298):
      static :
        warning("Declaration of " & "GPURasterizerState" &
            " exists but with different size")
    GPURasterizerState
   else:
    GPURasterizerState_1157629298)
  CameraID_1157628695 = (when declared(CameraID):
    when ownSizeof(CameraID) != ownSizeof(CameraID_1157628694):
      static :
        warning("Declaration of " & "CameraID" &
            " exists but with different size")
    CameraID
   else:
    CameraID_1157628694)
  enum_SDL_GPUCompareOp_1157629175 = (when declared(enum_SDL_GPUCompareOp):
    when ownSizeof(enum_SDL_GPUCompareOp) != ownSizeof(enum_SDL_GPUCompareOp_1157629174):
      static :
        warning("Declaration of " & "enum_SDL_GPUCompareOp" &
            " exists but with different size")
    enum_SDL_GPUCompareOp
   else:
    enum_SDL_GPUCompareOp_1157629174)
  RenderEvent_1157629007 = (when declared(RenderEvent):
    when ownSizeof(RenderEvent) != ownSizeof(RenderEvent_1157629006):
      static :
        warning("Declaration of " & "RenderEvent" &
            " exists but with different size")
    RenderEvent
   else:
    RenderEvent_1157629006)
  Sint32_1157628443 = (when declared(Sint32):
    when ownSizeof(Sint32) != ownSizeof(Sint32_1157628442):
      static :
        warning("Declaration of " & "Sint32" & " exists but with different size")
    Sint32
   else:
    Sint32_1157628442)
  enum_SDL_TextInputType_1157628859 = (when declared(enum_SDL_TextInputType):
    when ownSizeof(enum_SDL_TextInputType) != ownSizeof(enum_SDL_TextInputType_1157628858):
      static :
        warning("Declaration of " & "enum_SDL_TextInputType" &
            " exists but with different size")
    enum_SDL_TextInputType
   else:
    enum_SDL_TextInputType_1157628858)
  GPUSamplerMipmapMode_1157629199 = (when declared(GPUSamplerMipmapMode):
    when ownSizeof(GPUSamplerMipmapMode) != ownSizeof(GPUSamplerMipmapMode_1157629198):
      static :
        warning("Declaration of " & "GPUSamplerMipmapMode" &
            " exists but with different size")
    GPUSamplerMipmapMode
   else:
    GPUSamplerMipmapMode_1157629198)
  struct_SDL_CameraDeviceEvent_1157629001 = (when declared(
      struct_SDL_CameraDeviceEvent):
    when ownSizeof(struct_SDL_CameraDeviceEvent) !=
        ownSizeof(struct_SDL_CameraDeviceEvent_1157629000):
      static :
        warning("Declaration of " & "struct_SDL_CameraDeviceEvent" &
            " exists but with different size")
    struct_SDL_CameraDeviceEvent
   else:
    struct_SDL_CameraDeviceEvent_1157629000)
  EnumerateDirectoryCallback_1157629081 = (when declared(
      EnumerateDirectoryCallback):
    when ownSizeof(EnumerateDirectoryCallback) !=
        ownSizeof(EnumerateDirectoryCallback_1157629080):
      static :
        warning("Declaration of " & "EnumerateDirectoryCallback" &
            " exists but with different size")
    EnumerateDirectoryCallback
   else:
    EnumerateDirectoryCallback_1157629080)
  enum_SDL_hid_bus_type_1157629391 = (when declared(enum_SDL_hid_bus_type):
    when ownSizeof(enum_SDL_hid_bus_type) != ownSizeof(enum_SDL_hid_bus_type_1157629390):
      static :
        warning("Declaration of " & "enum_SDL_hid_bus_type" &
            " exists but with different size")
    enum_SDL_hid_bus_type
   else:
    enum_SDL_hid_bus_type_1157629390)
  GPUTextureFormat_1157629127 = (when declared(GPUTextureFormat):
    when ownSizeof(GPUTextureFormat) != ownSizeof(GPUTextureFormat_1157629126):
      static :
        warning("Declaration of " & "GPUTextureFormat" &
            " exists but with different size")
    GPUTextureFormat
   else:
    GPUTextureFormat_1157629126)
  Semaphore_1157628545 = (when declared(Semaphore):
    when ownSizeof(Semaphore) != ownSizeof(Semaphore_1157628544):
      static :
        warning("Declaration of " & "Semaphore" &
            " exists but with different size")
    Semaphore
   else:
    Semaphore_1157628544)
  GPUShaderFormat_1157629153 = (when declared(GPUShaderFormat):
    when ownSizeof(GPUShaderFormat) != ownSizeof(GPUShaderFormat_1157629152):
      static :
        warning("Declaration of " & "GPUShaderFormat" &
            " exists but with different size")
    GPUShaderFormat
   else:
    GPUShaderFormat_1157629152)
  RWLock_1157628543 = (when declared(RWLock):
    when ownSizeof(RWLock) != ownSizeof(RWLock_1157628542):
      static :
        warning("Declaration of " & "RWLock" & " exists but with different size")
    RWLock
   else:
    RWLock_1157628542)
  AudioPostmixCallback_1157628585 = (when declared(AudioPostmixCallback):
    when ownSizeof(AudioPostmixCallback) != ownSizeof(AudioPostmixCallback_1157628584):
      static :
        warning("Declaration of " & "AudioPostmixCallback" &
            " exists but with different size")
    AudioPostmixCallback
   else:
    AudioPostmixCallback_1157628584)
  struct_SDL_TextEditingEvent_1157628925 = (when declared(
      struct_SDL_TextEditingEvent):
    when ownSizeof(struct_SDL_TextEditingEvent) !=
        ownSizeof(struct_SDL_TextEditingEvent_1157628924):
      static :
        warning("Declaration of " & "struct_SDL_TextEditingEvent" &
            " exists but with different size")
    struct_SDL_TextEditingEvent
   else:
    struct_SDL_TextEditingEvent_1157628924)
  HapticCondition_1157629369 = (when declared(HapticCondition):
    when ownSizeof(HapticCondition) != ownSizeof(HapticCondition_1157629368):
      static :
        warning("Declaration of " & "HapticCondition" &
            " exists but with different size")
    HapticCondition
   else:
    HapticCondition_1157629368)
  GLProfile_typedef_1157628759 = (when declared(GLProfile_typedef):
    when ownSizeof(GLProfile_typedef) != ownSizeof(GLProfile_typedef_1157628758):
      static :
        warning("Declaration of " & "GLProfile_typedef" &
            " exists but with different size")
    GLProfile_typedef
   else:
    GLProfile_typedef_1157628758)
  ColorPrimaries_1157628631 = (when declared(ColorPrimaries):
    when ownSizeof(ColorPrimaries) != ownSizeof(ColorPrimaries_1157628630):
      static :
        warning("Declaration of " & "ColorPrimaries" &
            " exists but with different size")
    ColorPrimaries
   else:
    ColorPrimaries_1157628630)
  Point_1157628667 = (when declared(Point):
    when ownSizeof(Point) != ownSizeof(Point_1157628666):
      static :
        warning("Declaration of " & "Point" & " exists but with different size")
    Point
   else:
    Point_1157628666)
  struct_SDL_GamepadTouchpadEvent_1157628989 = (when declared(
      struct_SDL_GamepadTouchpadEvent):
    when ownSizeof(struct_SDL_GamepadTouchpadEvent) !=
        ownSizeof(struct_SDL_GamepadTouchpadEvent_1157628988):
      static :
        warning("Declaration of " & "struct_SDL_GamepadTouchpadEvent" &
            " exists but with different size")
    struct_SDL_GamepadTouchpadEvent
   else:
    struct_SDL_GamepadTouchpadEvent_1157628988)
  JoystickID_1157628801 = (when declared(JoystickID):
    when ownSizeof(JoystickID) != ownSizeof(JoystickID_1157628800):
      static :
        warning("Declaration of " & "JoystickID" &
            " exists but with different size")
    JoystickID
   else:
    JoystickID_1157628800)
  HapticCustom_1157629381 = (when declared(HapticCustom):
    when ownSizeof(HapticCustom) != ownSizeof(HapticCustom_1157629380):
      static :
        warning("Declaration of " & "HapticCustom" &
            " exists but with different size")
    HapticCustom
   else:
    HapticCustom_1157629380)
  EGLDisplay_1157628739 = (when declared(EGLDisplay):
    when ownSizeof(EGLDisplay) != ownSizeof(EGLDisplay_1157628738):
      static :
        warning("Declaration of " & "EGLDisplay" &
            " exists but with different size")
    EGLDisplay
   else:
    EGLDisplay_1157628738)
  JoyButtonEvent_1157628967 = (when declared(JoyButtonEvent):
    when ownSizeof(JoyButtonEvent) != ownSizeof(JoyButtonEvent_1157628966):
      static :
        warning("Declaration of " & "JoyButtonEvent" &
            " exists but with different size")
    JoyButtonEvent
   else:
    JoyButtonEvent_1157628966)
  struct_SDL_MessageBoxColorScheme_1157629453 = (when declared(
      struct_SDL_MessageBoxColorScheme):
    when ownSizeof(struct_SDL_MessageBoxColorScheme) !=
        ownSizeof(struct_SDL_MessageBoxColorScheme_1157629452):
      static :
        warning("Declaration of " & "struct_SDL_MessageBoxColorScheme" &
            " exists but with different size")
    struct_SDL_MessageBoxColorScheme
   else:
    struct_SDL_MessageBoxColorScheme_1157629452)
  GPUColorComponentFlags_1157629191 = (when declared(GPUColorComponentFlags):
    when ownSizeof(GPUColorComponentFlags) != ownSizeof(GPUColorComponentFlags_1157629190):
      static :
        warning("Declaration of " & "GPUColorComponentFlags" &
            " exists but with different size")
    GPUColorComponentFlags
   else:
    GPUColorComponentFlags_1157629190)
  alignment_test_1157628455 = (when declared(alignment_test):
    when ownSizeof(alignment_test) != ownSizeof(alignment_test_1157628454):
      static :
        warning("Declaration of " & "alignment_test" &
            " exists but with different size")
    alignment_test
   else:
    alignment_test_1157628454)
  AtomicInt_1157628511 = (when declared(AtomicInt):
    when ownSizeof(AtomicInt) != ownSizeof(AtomicInt_1157628510):
      static :
        warning("Declaration of " & "AtomicInt" &
            " exists but with different size")
    AtomicInt
   else:
    AtomicInt_1157628510)
  enum_SDL_AssertState_1157628481 = (when declared(enum_SDL_AssertState):
    when ownSizeof(enum_SDL_AssertState) != ownSizeof(enum_SDL_AssertState_1157628480):
      static :
        warning("Declaration of " & "enum_SDL_AssertState" &
            " exists but with different size")
    enum_SDL_AssertState
   else:
    enum_SDL_AssertState_1157628480)
  Camera_1157628697 = (when declared(Camera):
    when ownSizeof(Camera) != ownSizeof(Camera_1157628696):
      static :
        warning("Declaration of " & "Camera" & " exists but with different size")
    Camera
   else:
    Camera_1157628696)
  enum_SDL_GPUStoreOp_1157629117 = (when declared(enum_SDL_GPUStoreOp):
    when ownSizeof(enum_SDL_GPUStoreOp) != ownSizeof(enum_SDL_GPUStoreOp_1157629116):
      static :
        warning("Declaration of " & "enum_SDL_GPUStoreOp" &
            " exists but with different size")
    enum_SDL_GPUStoreOp
   else:
    enum_SDL_GPUStoreOp_1157629116)
  PenAxis_1157628887 = (when declared(PenAxis):
    when ownSizeof(PenAxis) != ownSizeof(PenAxis_1157628886):
      static :
        warning("Declaration of " & "PenAxis" &
            " exists but with different size")
    PenAxis
   else:
    PenAxis_1157628886)
  struct_SDL_PenAxisEvent_1157629029 = (when declared(struct_SDL_PenAxisEvent):
    when ownSizeof(struct_SDL_PenAxisEvent) !=
        ownSizeof(struct_SDL_PenAxisEvent_1157629028):
      static :
        warning("Declaration of " & "struct_SDL_PenAxisEvent" &
            " exists but with different size")
    struct_SDL_PenAxisEvent
   else:
    struct_SDL_PenAxisEvent_1157629028)
  GPULoadOp_1157629115 = (when declared(GPULoadOp):
    when ownSizeof(GPULoadOp) != ownSizeof(GPULoadOp_1157629114):
      static :
        warning("Declaration of " & "GPULoadOp" &
            " exists but with different size")
    GPULoadOp
   else:
    GPULoadOp_1157629114)
  AssertState_1157628483 = (when declared(AssertState):
    when ownSizeof(AssertState) != ownSizeof(AssertState_1157628482):
      static :
        warning("Declaration of " & "AssertState" &
            " exists but with different size")
    AssertState
   else:
    AssertState_1157628482)
  struct_SDL_FColor_1157628653 = (when declared(struct_SDL_FColor):
    when ownSizeof(struct_SDL_FColor) != ownSizeof(struct_SDL_FColor_1157628652):
      static :
        warning("Declaration of " & "struct_SDL_FColor" &
            " exists but with different size")
    struct_SDL_FColor
   else:
    struct_SDL_FColor_1157628652)
  FingerID_1157628891 = (when declared(FingerID):
    when ownSizeof(FingerID) != ownSizeof(FingerID_1157628890):
      static :
        warning("Declaration of " & "FingerID" &
            " exists but with different size")
    FingerID
   else:
    FingerID_1157628890)
  enum_SDL_GPUFrontFace_1157629171 = (when declared(enum_SDL_GPUFrontFace):
    when ownSizeof(enum_SDL_GPUFrontFace) != ownSizeof(enum_SDL_GPUFrontFace_1157629170):
      static :
        warning("Declaration of " & "enum_SDL_GPUFrontFace" &
            " exists but with different size")
    enum_SDL_GPUFrontFace
   else:
    enum_SDL_GPUFrontFace_1157629170)
  GPUIndirectDrawCommand_1157629247 = (when declared(GPUIndirectDrawCommand):
    when ownSizeof(GPUIndirectDrawCommand) != ownSizeof(GPUIndirectDrawCommand_1157629246):
      static :
        warning("Declaration of " & "GPUIndirectDrawCommand" &
            " exists but with different size")
    GPUIndirectDrawCommand
   else:
    GPUIndirectDrawCommand_1157629246)
  struct_SDL_GPUVertexBufferDescription_1157629261 = (when declared(
      struct_SDL_GPUVertexBufferDescription):
    when ownSizeof(struct_SDL_GPUVertexBufferDescription) !=
        ownSizeof(struct_SDL_GPUVertexBufferDescription_1157629260):
      static :
        warning("Declaration of " & "struct_SDL_GPUVertexBufferDescription" &
            " exists but with different size")
    struct_SDL_GPUVertexBufferDescription
   else:
    struct_SDL_GPUVertexBufferDescription_1157629260)
when not declared(struct_SDL_GPUDepthStencilState):
  type
    struct_SDL_GPUDepthStencilState* = struct_SDL_GPUDepthStencilState_1157629304
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUDepthStencilState" &
        " already exists, not redeclaring")
when not declared(QuitEvent):
  type
    QuitEvent* = QuitEvent_1157629046
else:
  static :
    hint("Declaration of " & "QuitEvent" & " already exists, not redeclaring")
when not declared(GPUFillMode):
  type
    GPUFillMode* = GPUFillMode_1157629164
else:
  static :
    hint("Declaration of " & "GPUFillMode" & " already exists, not redeclaring")
when not declared(GLAttr_typedef):
  type
    GLAttr_typedef* = GLAttr_typedef_1157628756
else:
  static :
    hint("Declaration of " & "GLAttr_typedef" &
        " already exists, not redeclaring")
when not declared(enum_SDL_Sandbox):
  type
    enum_SDL_Sandbox* = enum_SDL_Sandbox_1157629496
else:
  static :
    hint("Declaration of " & "enum_SDL_Sandbox" &
        " already exists, not redeclaring")
when not declared(BlendFactor):
  type
    BlendFactor* = BlendFactor_1157628594
else:
  static :
    hint("Declaration of " & "BlendFactor" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUColorTargetBlendState):
  type
    struct_SDL_GPUColorTargetBlendState* = struct_SDL_GPUColorTargetBlendState_1157629276
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUColorTargetBlendState" &
        " already exists, not redeclaring")
when not declared(GPUIndexElementSize):
  type
    GPUIndexElementSize* = GPUIndexElementSize_1157629122
else:
  static :
    hint("Declaration of " & "GPUIndexElementSize" &
        " already exists, not redeclaring")
when not declared(enum_SDL_ProcessIO):
  type
    enum_SDL_ProcessIO* = enum_SDL_ProcessIO_1157629464
else:
  static :
    hint("Declaration of " & "enum_SDL_ProcessIO" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PackedOrder):
  type
    enum_SDL_PackedOrder* = enum_SDL_PackedOrder_1157628604
else:
  static :
    hint("Declaration of " & "enum_SDL_PackedOrder" &
        " already exists, not redeclaring")
when not declared(PropertyType):
  type
    PropertyType* = PropertyType_1157628520
else:
  static :
    hint("Declaration of " & "PropertyType" & " already exists, not redeclaring")
when not declared(GamepadType):
  type
    GamepadType* = GamepadType_1157628826
else:
  static :
    hint("Declaration of " & "GamepadType" & " already exists, not redeclaring")
when not declared(EGLint):
  type
    EGLint* = EGLint_1157628748
else:
  static :
    hint("Declaration of " & "EGLint" & " already exists, not redeclaring")
when not declared(GPUTransferBufferLocation):
  type
    GPUTransferBufferLocation* = GPUTransferBufferLocation_1157629222
else:
  static :
    hint("Declaration of " & "GPUTransferBufferLocation" &
        " already exists, not redeclaring")
when not declared(enum_SDL_Capitalization):
  type
    enum_SDL_Capitalization* = enum_SDL_Capitalization_1157628862
else:
  static :
    hint("Declaration of " & "enum_SDL_Capitalization" &
        " already exists, not redeclaring")
when not declared(GPUPrimitiveType):
  type
    GPUPrimitiveType* = GPUPrimitiveType_1157629110
else:
  static :
    hint("Declaration of " & "GPUPrimitiveType" &
        " already exists, not redeclaring")
when not declared(GPUCompareOp):
  type
    GPUCompareOp* = GPUCompareOp_1157629176
else:
  static :
    hint("Declaration of " & "GPUCompareOp" & " already exists, not redeclaring")
when not declared(IOStreamInterface):
  type
    IOStreamInterface* = IOStreamInterface_1157628566
else:
  static :
    hint("Declaration of " & "IOStreamInterface" &
        " already exists, not redeclaring")
when not declared(GPUMultisampleState):
  type
    GPUMultisampleState* = GPUMultisampleState_1157629302
else:
  static :
    hint("Declaration of " & "GPUMultisampleState" &
        " already exists, not redeclaring")
when not declared(InitFlags):
  type
    InitFlags* = InitFlags_1157629404
else:
  static :
    hint("Declaration of " & "InitFlags" & " already exists, not redeclaring")
when not declared(hid_device):
  type
    hid_device* = hid_device_1157629388
else:
  static :
    hint("Declaration of " & "hid_device" & " already exists, not redeclaring")
when not declared(ClipboardCleanupCallback):
  type
    ClipboardCleanupCallback* = ClipboardCleanupCallback_1157628708
else:
  static :
    hint("Declaration of " & "ClipboardCleanupCallback" &
        " already exists, not redeclaring")
when not declared(EGLAttrib):
  type
    EGLAttrib* = EGLAttrib_1157628744
else:
  static :
    hint("Declaration of " & "EGLAttrib" & " already exists, not redeclaring")
when not declared(RendererLogicalPresentation):
  type
    RendererLogicalPresentation* = RendererLogicalPresentation_1157629478
else:
  static :
    hint("Declaration of " & "RendererLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_JoyButtonEvent):
  type
    struct_SDL_JoyButtonEvent* = struct_SDL_JoyButtonEvent_1157628964
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyButtonEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_JoystickType):
  type
    enum_SDL_JoystickType* = enum_SDL_JoystickType_1157628802
else:
  static :
    hint("Declaration of " & "enum_SDL_JoystickType" &
        " already exists, not redeclaring")
when not declared(enum_SDL_MouseWheelDirection):
  type
    enum_SDL_MouseWheelDirection* = enum_SDL_MouseWheelDirection_1157628874
else:
  static :
    hint("Declaration of " & "enum_SDL_MouseWheelDirection" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUFillMode):
  type
    enum_SDL_GPUFillMode* = enum_SDL_GPUFillMode_1157629162
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUFillMode" &
        " already exists, not redeclaring")
when not declared(struct_SDL_VirtualJoystickSensorDesc):
  type
    struct_SDL_VirtualJoystickSensorDesc* = struct_SDL_VirtualJoystickSensorDesc_1157628814
else:
  static :
    hint("Declaration of " & "struct_SDL_VirtualJoystickSensorDesc" &
        " already exists, not redeclaring")
when not declared(SystemCursor):
  type
    SystemCursor* = SystemCursor_1157628872
else:
  static :
    hint("Declaration of " & "SystemCursor" & " already exists, not redeclaring")
when not declared(struct_SDL_GamepadSensorEvent):
  type
    struct_SDL_GamepadSensorEvent* = struct_SDL_GamepadSensorEvent_1157628992
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUVertexInputRate):
  type
    enum_SDL_GPUVertexInputRate* = enum_SDL_GPUVertexInputRate_1157629158
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUVertexInputRate" &
        " already exists, not redeclaring")
when not declared(GPUIndirectDispatchCommand):
  type
    GPUIndirectDispatchCommand* = GPUIndirectDispatchCommand_1157629254
else:
  static :
    hint("Declaration of " & "GPUIndirectDispatchCommand" &
        " already exists, not redeclaring")
when not declared(Uint8):
  type
    Uint8* = Uint8_1157628436
else:
  static :
    hint("Declaration of " & "Uint8" & " already exists, not redeclaring")
when not declared(struct_SDL_AsyncIOOutcome):
  type
    struct_SDL_AsyncIOOutcome* = struct_SDL_AsyncIOOutcome_1157628500
else:
  static :
    hint("Declaration of " & "struct_SDL_AsyncIOOutcome" &
        " already exists, not redeclaring")
when not declared(SurfaceFlags):
  type
    SurfaceFlags* = SurfaceFlags_1157628680
else:
  static :
    hint("Declaration of " & "SurfaceFlags" & " already exists, not redeclaring")
when not declared(struct_SDL_VirtualJoystickTouchpadDesc):
  type
    struct_SDL_VirtualJoystickTouchpadDesc* = struct_SDL_VirtualJoystickTouchpadDesc_1157628810
else:
  static :
    hint("Declaration of " & "struct_SDL_VirtualJoystickTouchpadDesc" &
        " already exists, not redeclaring")
when not declared(ThreadPriority):
  type
    ThreadPriority* = ThreadPriority_1157628534
else:
  static :
    hint("Declaration of " & "ThreadPriority" &
        " already exists, not redeclaring")
when not declared(GPUStencilOp):
  type
    GPUStencilOp* = GPUStencilOp_1157629180
else:
  static :
    hint("Declaration of " & "GPUStencilOp" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUBlitInfo):
  type
    struct_SDL_GPUBlitInfo* = struct_SDL_GPUBlitInfo_1157629332
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBlitInfo" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUComputePipelineCreateInfo):
  type
    struct_SDL_GPUComputePipelineCreateInfo* = struct_SDL_GPUComputePipelineCreateInfo_1157629320
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUComputePipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTextureSamplerBinding):
  type
    struct_SDL_GPUTextureSamplerBinding* = struct_SDL_GPUTextureSamplerBinding_1157629340
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTextureSamplerBinding" &
        " already exists, not redeclaring")
when not declared(struct_SDL_hid_device_info):
  type
    struct_SDL_hid_device_info* = struct_SDL_hid_device_info_1157629394
else:
  static :
    hint("Declaration of " & "struct_SDL_hid_device_info" &
        " already exists, not redeclaring")
when not declared(struct_SDL_alignment_test):
  type
    struct_SDL_alignment_test* = struct_SDL_alignment_test_1157628452
else:
  static :
    hint("Declaration of " & "struct_SDL_alignment_test" &
        " already exists, not redeclaring")
when not declared(Sandbox):
  type
    Sandbox* = Sandbox_1157629498
else:
  static :
    hint("Declaration of " & "Sandbox" & " already exists, not redeclaring")
when not declared(PenAxisEvent):
  type
    PenAxisEvent* = PenAxisEvent_1157629030
else:
  static :
    hint("Declaration of " & "PenAxisEvent" & " already exists, not redeclaring")
when not declared(GPUVertexBufferDescription):
  type
    GPUVertexBufferDescription* = GPUVertexBufferDescription_1157629262
else:
  static :
    hint("Declaration of " & "GPUVertexBufferDescription" &
        " already exists, not redeclaring")
when not declared(ProcessIO):
  type
    ProcessIO* = ProcessIO_1157629466
else:
  static :
    hint("Declaration of " & "ProcessIO" & " already exists, not redeclaring")
when not declared(PenInputFlags):
  type
    PenInputFlags* = PenInputFlags_1157628882
else:
  static :
    hint("Declaration of " & "PenInputFlags" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PropertyType):
  type
    enum_SDL_PropertyType* = enum_SDL_PropertyType_1157628518
else:
  static :
    hint("Declaration of " & "enum_SDL_PropertyType" &
        " already exists, not redeclaring")
when not declared(AsyncIOTaskType):
  type
    AsyncIOTaskType* = AsyncIOTaskType_1157628494
else:
  static :
    hint("Declaration of " & "AsyncIOTaskType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUVertexInputState):
  type
    struct_SDL_GPUVertexInputState* = struct_SDL_GPUVertexInputState_1157629268
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUVertexInputState" &
        " already exists, not redeclaring")
when not declared(ColorType):
  type
    ColorType* = ColorType_1157628622
else:
  static :
    hint("Declaration of " & "ColorType" & " already exists, not redeclaring")
when not declared(Rect):
  type
    Rect* = Rect_1157628674
else:
  static :
    hint("Declaration of " & "Rect" & " already exists, not redeclaring")
when not declared(AudioDeviceID):
  type
    AudioDeviceID* = AudioDeviceID_1157628574
else:
  static :
    hint("Declaration of " & "AudioDeviceID" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUIndirectDispatchCommand):
  type
    struct_SDL_GPUIndirectDispatchCommand* = struct_SDL_GPUIndirectDispatchCommand_1157629252
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUIndirectDispatchCommand" &
        " already exists, not redeclaring")
when not declared(GPUViewport):
  type
    GPUViewport* = GPUViewport_1157629214
else:
  static :
    hint("Declaration of " & "GPUViewport" & " already exists, not redeclaring")
when not declared(AtomicU32):
  type
    AtomicU32* = AtomicU32_1157628514
else:
  static :
    hint("Declaration of " & "AtomicU32" & " already exists, not redeclaring")
when not declared(calloc_func):
  type
    calloc_func* = calloc_func_1157628462
else:
  static :
    hint("Declaration of " & "calloc_func" & " already exists, not redeclaring")
when not declared(enum_SDL_ThreadPriority):
  type
    enum_SDL_ThreadPriority* = enum_SDL_ThreadPriority_1157628532
else:
  static :
    hint("Declaration of " & "enum_SDL_ThreadPriority" &
        " already exists, not redeclaring")
when not declared(struct_SDL_PenProximityEvent):
  type
    struct_SDL_PenProximityEvent* = struct_SDL_PenProximityEvent_1157629012
else:
  static :
    hint("Declaration of " & "struct_SDL_PenProximityEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Texture):
  type
    struct_SDL_Texture* = struct_SDL_Texture_1157629482
else:
  static :
    hint("Declaration of " & "struct_SDL_Texture" &
        " already exists, not redeclaring")
when not declared(HapticPeriodic):
  type
    HapticPeriodic* = HapticPeriodic_1157629364
else:
  static :
    hint("Declaration of " & "HapticPeriodic" &
        " already exists, not redeclaring")
when not declared(KeyboardEvent):
  type
    KeyboardEvent* = KeyboardEvent_1157628922
else:
  static :
    hint("Declaration of " & "KeyboardEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_UserEvent):
  type
    struct_SDL_UserEvent* = struct_SDL_UserEvent_1157629048
else:
  static :
    hint("Declaration of " & "struct_SDL_UserEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTransferBufferLocation):
  type
    struct_SDL_GPUTransferBufferLocation* = struct_SDL_GPUTransferBufferLocation_1157629220
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTransferBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUIndirectDrawCommand):
  type
    struct_SDL_GPUIndirectDrawCommand* = struct_SDL_GPUIndirectDrawCommand_1157629244
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(MessageBoxColorType):
  type
    MessageBoxColorType* = MessageBoxColorType_1157629450
else:
  static :
    hint("Declaration of " & "MessageBoxColorType" &
        " already exists, not redeclaring")
when not declared(MessageBoxColor):
  type
    MessageBoxColor* = MessageBoxColor_1157629446
else:
  static :
    hint("Declaration of " & "MessageBoxColor" &
        " already exists, not redeclaring")
when not declared(enum_SDL_TransferCharacteristics):
  type
    enum_SDL_TransferCharacteristics* = enum_SDL_TransferCharacteristics_1157628632
else:
  static :
    hint("Declaration of " & "enum_SDL_TransferCharacteristics" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUStencilOpState):
  type
    struct_SDL_GPUStencilOpState* = struct_SDL_GPUStencilOpState_1157629272
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUStencilOpState" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUBufferCreateInfo):
  type
    struct_SDL_GPUBufferCreateInfo* = struct_SDL_GPUBufferCreateInfo_1157629288
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(LogOutputFunction):
  type
    LogOutputFunction* = LogOutputFunction_1157629434
else:
  static :
    hint("Declaration of " & "LogOutputFunction" &
        " already exists, not redeclaring")
when not declared(enum_SDL_InitStatus):
  type
    enum_SDL_InitStatus* = enum_SDL_InitStatus_1157628548
else:
  static :
    hint("Declaration of " & "enum_SDL_InitStatus" &
        " already exists, not redeclaring")
when not declared(EventType):
  type
    EventType* = EventType_1157628902
else:
  static :
    hint("Declaration of " & "EventType" & " already exists, not redeclaring")
when not declared(struct_SDL_KeyboardEvent):
  type
    struct_SDL_KeyboardEvent* = struct_SDL_KeyboardEvent_1157628920
else:
  static :
    hint("Declaration of " & "struct_SDL_KeyboardEvent" &
        " already exists, not redeclaring")
when not declared(TimeFormat):
  type
    TimeFormat* = TimeFormat_1157629510
else:
  static :
    hint("Declaration of " & "TimeFormat" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUTextureTransferInfo):
  type
    struct_SDL_GPUTextureTransferInfo* = struct_SDL_GPUTextureTransferInfo_1157629216
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTextureTransferInfo" &
        " already exists, not redeclaring")
when not declared(TouchDeviceType):
  type
    TouchDeviceType* = TouchDeviceType_1157628894
else:
  static :
    hint("Declaration of " & "TouchDeviceType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUDepthStencilTargetInfo):
  type
    struct_SDL_GPUDepthStencilTargetInfo* = struct_SDL_GPUDepthStencilTargetInfo_1157629328
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUDepthStencilTargetInfo" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTextureRegion):
  type
    struct_SDL_GPUTextureRegion* = struct_SDL_GPUTextureRegion_1157629228
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTextureRegion" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUBufferLocation):
  type
    struct_SDL_GPUBufferLocation* = struct_SDL_GPUBufferLocation_1157629236
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_TextEditingCandidatesEvent):
  type
    struct_SDL_TextEditingCandidatesEvent* = struct_SDL_TextEditingCandidatesEvent_1157628928
else:
  static :
    hint("Declaration of " & "struct_SDL_TextEditingCandidatesEvent" &
        " already exists, not redeclaring")
when not declared(BlendMode):
  type
    BlendMode* = BlendMode_1157628586
else:
  static :
    hint("Declaration of " & "BlendMode" & " already exists, not redeclaring")
when not declared(DisplayOrientation):
  type
    DisplayOrientation* = DisplayOrientation_1157628726
else:
  static :
    hint("Declaration of " & "DisplayOrientation" &
        " already exists, not redeclaring")
when not declared(UserEvent_typedef):
  type
    UserEvent_typedef* = UserEvent_typedef_1157629050
else:
  static :
    hint("Declaration of " & "UserEvent_typedef" &
        " already exists, not redeclaring")
when not declared(GPUDepthStencilState):
  type
    GPUDepthStencilState* = GPUDepthStencilState_1157629306
else:
  static :
    hint("Declaration of " & "GPUDepthStencilState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_FileDialogType):
  type
    enum_SDL_FileDialogType* = enum_SDL_FileDialogType_1157628778
else:
  static :
    hint("Declaration of " & "enum_SDL_FileDialogType" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUStencilOp):
  type
    enum_SDL_GPUStencilOp* = enum_SDL_GPUStencilOp_1157629178
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUStencilOp" &
        " already exists, not redeclaring")
when not declared(GamepadButton):
  type
    GamepadButton* = GamepadButton_1157628830
else:
  static :
    hint("Declaration of " & "GamepadButton" &
        " already exists, not redeclaring")
when not declared(Gamepad):
  type
    Gamepad* = Gamepad_1157628822
else:
  static :
    hint("Declaration of " & "Gamepad" & " already exists, not redeclaring")
when not declared(GPUDepthStencilTargetInfo):
  type
    GPUDepthStencilTargetInfo* = GPUDepthStencilTargetInfo_1157629330
else:
  static :
    hint("Declaration of " & "GPUDepthStencilTargetInfo" &
        " already exists, not redeclaring")
when not declared(TimerCallback):
  type
    TimerCallback* = TimerCallback_1157629514
else:
  static :
    hint("Declaration of " & "TimerCallback" &
        " already exists, not redeclaring")
when not declared(GPUTransferBufferUsage):
  type
    GPUTransferBufferUsage* = GPUTransferBufferUsage_1157629146
else:
  static :
    hint("Declaration of " & "GPUTransferBufferUsage" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUBlendOp):
  type
    enum_SDL_GPUBlendOp* = enum_SDL_GPUBlendOp_1157629182
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUBlendOp" &
        " already exists, not redeclaring")
when not declared(NSTimerCallback):
  type
    NSTimerCallback* = NSTimerCallback_1157629516
else:
  static :
    hint("Declaration of " & "NSTimerCallback" &
        " already exists, not redeclaring")
when not declared(hid_device_info):
  type
    hid_device_info* = hid_device_info_1157629396
else:
  static :
    hint("Declaration of " & "hid_device_info" &
        " already exists, not redeclaring")
when not declared(VirtualJoystickTouchpadDesc):
  type
    VirtualJoystickTouchpadDesc* = VirtualJoystickTouchpadDesc_1157628812
else:
  static :
    hint("Declaration of " & "VirtualJoystickTouchpadDesc" &
        " already exists, not redeclaring")
when not declared(enum_SDL_IOStatus):
  type
    enum_SDL_IOStatus* = enum_SDL_IOStatus_1157628556
else:
  static :
    hint("Declaration of " & "enum_SDL_IOStatus" &
        " already exists, not redeclaring")
when not declared(DisplayModeData):
  type
    DisplayModeData* = DisplayModeData_1157628718
else:
  static :
    hint("Declaration of " & "DisplayModeData" &
        " already exists, not redeclaring")
when not declared(Uint16):
  type
    Uint16* = Uint16_1157628440
else:
  static :
    hint("Declaration of " & "Uint16" & " already exists, not redeclaring")
when not declared(JoystickConnectionState):
  type
    JoystickConnectionState* = JoystickConnectionState_1157628808
else:
  static :
    hint("Declaration of " & "JoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(GlobFlags):
  type
    GlobFlags* = GlobFlags_1157629074
else:
  static :
    hint("Declaration of " & "GlobFlags" & " already exists, not redeclaring")
when not declared(enum_SDL_GPULoadOp):
  type
    enum_SDL_GPULoadOp* = enum_SDL_GPULoadOp_1157629112
else:
  static :
    hint("Declaration of " & "enum_SDL_GPULoadOp" &
        " already exists, not redeclaring")
when not declared(GPUTextureUsageFlags):
  type
    GPUTextureUsageFlags* = GPUTextureUsageFlags_1157629128
else:
  static :
    hint("Declaration of " & "GPUTextureUsageFlags" &
        " already exists, not redeclaring")
when not declared(HintPriority):
  type
    HintPriority* = HintPriority_1157629400
else:
  static :
    hint("Declaration of " & "HintPriority" & " already exists, not redeclaring")
when not declared(SensorEvent):
  type
    SensorEvent* = SensorEvent_1157629042
else:
  static :
    hint("Declaration of " & "SensorEvent" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipelineTargetInfo):
  type
    GPUGraphicsPipelineTargetInfo* = GPUGraphicsPipelineTargetInfo_1157629314
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipelineTargetInfo" &
        " already exists, not redeclaring")
when not declared(FlipMode):
  type
    FlipMode* = FlipMode_1157628688
else:
  static :
    hint("Declaration of " & "FlipMode" & " already exists, not redeclaring")
when not declared(MessageBoxFlags):
  type
    MessageBoxFlags* = MessageBoxFlags_1157629436
else:
  static :
    hint("Declaration of " & "MessageBoxFlags" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GamepadBindingType):
  type
    enum_SDL_GamepadBindingType* = enum_SDL_GamepadBindingType_1157628840
else:
  static :
    hint("Declaration of " & "enum_SDL_GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(Condition):
  type
    Condition* = Condition_1157628546
else:
  static :
    hint("Declaration of " & "Condition" & " already exists, not redeclaring")
when not declared(PathType):
  type
    PathType* = PathType_1157629068
else:
  static :
    hint("Declaration of " & "PathType" & " already exists, not redeclaring")
when not declared(ArrayOrder):
  type
    ArrayOrder* = ArrayOrder_1157628610
else:
  static :
    hint("Declaration of " & "ArrayOrder" & " already exists, not redeclaring")
when not declared(GPUTextureTransferInfo):
  type
    GPUTextureTransferInfo* = GPUTextureTransferInfo_1157629218
else:
  static :
    hint("Declaration of " & "GPUTextureTransferInfo" &
        " already exists, not redeclaring")
when not declared(MessageBoxButtonData):
  type
    MessageBoxButtonData* = MessageBoxButtonData_1157629442
else:
  static :
    hint("Declaration of " & "MessageBoxButtonData" &
        " already exists, not redeclaring")
when not declared(enum_SDL_TextureAccess):
  type
    enum_SDL_TextureAccess* = enum_SDL_TextureAccess_1157629472
else:
  static :
    hint("Declaration of " & "enum_SDL_TextureAccess" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MouseButtonEvent):
  type
    struct_SDL_MouseButtonEvent* = struct_SDL_MouseButtonEvent_1157628944
else:
  static :
    hint("Declaration of " & "struct_SDL_MouseButtonEvent" &
        " already exists, not redeclaring")
when not declared(GPUCubeMapFace):
  type
    GPUCubeMapFace* = GPUCubeMapFace_1157629140
else:
  static :
    hint("Declaration of " & "GPUCubeMapFace" &
        " already exists, not redeclaring")
when not declared(struct_SDL_KeyboardDeviceEvent):
  type
    struct_SDL_KeyboardDeviceEvent* = struct_SDL_KeyboardDeviceEvent_1157628916
else:
  static :
    hint("Declaration of " & "struct_SDL_KeyboardDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUFilter):
  type
    GPUFilter* = GPUFilter_1157629194
else:
  static :
    hint("Declaration of " & "GPUFilter" & " already exists, not redeclaring")
when not declared(GPUTextureRegion):
  type
    GPUTextureRegion* = GPUTextureRegion_1157629230
else:
  static :
    hint("Declaration of " & "GPUTextureRegion" &
        " already exists, not redeclaring")
when not declared(HintCallback):
  type
    HintCallback* = HintCallback_1157629402
else:
  static :
    hint("Declaration of " & "HintCallback" & " already exists, not redeclaring")
when not declared(GUID):
  type
    GUID* = GUID_1157628784
else:
  static :
    hint("Declaration of " & "GUID" & " already exists, not redeclaring")
when not declared(Event):
  type
    Event* = Event_1157629054
else:
  static :
    hint("Declaration of " & "Event" & " already exists, not redeclaring")
when not declared(Time):
  type
    Time* = Time_1157628450
else:
  static :
    hint("Declaration of " & "Time" & " already exists, not redeclaring")
when not declared(enum_SDL_SystemCursor):
  type
    enum_SDL_SystemCursor* = enum_SDL_SystemCursor_1157628870
else:
  static :
    hint("Declaration of " & "enum_SDL_SystemCursor" &
        " already exists, not redeclaring")
when not declared(enum_SDL_EnumerationResult):
  type
    enum_SDL_EnumerationResult* = enum_SDL_EnumerationResult_1157629076
else:
  static :
    hint("Declaration of " & "enum_SDL_EnumerationResult" &
        " already exists, not redeclaring")
when not declared(LogPriority):
  type
    LogPriority* = LogPriority_1157629432
else:
  static :
    hint("Declaration of " & "LogPriority" & " already exists, not redeclaring")
when not declared(enum_SDL_PowerState):
  type
    enum_SDL_PowerState* = enum_SDL_PowerState_1157628786
else:
  static :
    hint("Declaration of " & "enum_SDL_PowerState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_SensorType):
  type
    enum_SDL_SensorType* = enum_SDL_SensorType_1157628794
else:
  static :
    hint("Declaration of " & "enum_SDL_SensorType" &
        " already exists, not redeclaring")
when not declared(SensorID):
  type
    SensorID* = SensorID_1157628792
else:
  static :
    hint("Declaration of " & "SensorID" & " already exists, not redeclaring")
when not declared(GPUColorTargetBlendState):
  type
    GPUColorTargetBlendState* = GPUColorTargetBlendState_1157629278
else:
  static :
    hint("Declaration of " & "GPUColorTargetBlendState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUSwapchainComposition):
  type
    enum_SDL_GPUSwapchainComposition* = enum_SDL_GPUSwapchainComposition_1157629208
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticLeftRight):
  type
    struct_SDL_HapticLeftRight* = struct_SDL_HapticLeftRight_1157629374
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticLeftRight" &
        " already exists, not redeclaring")
when not declared(AssertData):
  type
    AssertData* = AssertData_1157628486
else:
  static :
    hint("Declaration of " & "AssertData" & " already exists, not redeclaring")
when not declared(EventAction):
  type
    EventAction* = EventAction_1157629058
else:
  static :
    hint("Declaration of " & "EventAction" & " already exists, not redeclaring")
when not declared(MouseMotionEvent):
  type
    MouseMotionEvent* = MouseMotionEvent_1157628942
else:
  static :
    hint("Declaration of " & "MouseMotionEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MouseMotionEvent):
  type
    struct_SDL_MouseMotionEvent* = struct_SDL_MouseMotionEvent_1157628940
else:
  static :
    hint("Declaration of " & "struct_SDL_MouseMotionEvent" &
        " already exists, not redeclaring")
when not declared(AudioDeviceEvent):
  type
    AudioDeviceEvent* = AudioDeviceEvent_1157628998
else:
  static :
    hint("Declaration of " & "AudioDeviceEvent" &
        " already exists, not redeclaring")
when not declared(Keymod):
  type
    Keymod* = Keymod_1157628854
else:
  static :
    hint("Declaration of " & "Keymod" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUColorTargetDescription):
  type
    struct_SDL_GPUColorTargetDescription* = struct_SDL_GPUColorTargetDescription_1157629308
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUColorTargetDescription" &
        " already exists, not redeclaring")
when not declared(enum_SDL_DUMMY_ENUM):
  type
    enum_SDL_DUMMY_ENUM* = enum_SDL_DUMMY_ENUM_1157628456
else:
  static :
    hint("Declaration of " & "enum_SDL_DUMMY_ENUM" &
        " already exists, not redeclaring")
when not declared(Cursor):
  type
    Cursor* = Cursor_1157628868
else:
  static :
    hint("Declaration of " & "Cursor" & " already exists, not redeclaring")
when not declared(Storage):
  type
    Storage* = Storage_1157629490
else:
  static :
    hint("Declaration of " & "Storage" & " already exists, not redeclaring")
when not declared(enum_SDL_EventAction):
  type
    enum_SDL_EventAction* = enum_SDL_EventAction_1157629056
else:
  static :
    hint("Declaration of " & "enum_SDL_EventAction" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GamepadButtonEvent):
  type
    struct_SDL_GamepadButtonEvent* = struct_SDL_GamepadButtonEvent_1157628980
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(GPUTransferBuffer):
  type
    GPUTransferBuffer* = GPUTransferBuffer_1157629086
else:
  static :
    hint("Declaration of " & "GPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(GLContext):
  type
    GLContext* = GLContext_1157628736
else:
  static :
    hint("Declaration of " & "GLContext" & " already exists, not redeclaring")
when not declared(struct_SDL_RenderEvent):
  type
    struct_SDL_RenderEvent* = struct_SDL_RenderEvent_1157629004
else:
  static :
    hint("Declaration of " & "struct_SDL_RenderEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_JoyDeviceEvent):
  type
    struct_SDL_JoyDeviceEvent* = struct_SDL_JoyDeviceEvent_1157628968
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyDeviceEvent" &
        " already exists, not redeclaring")
when not declared(iconv_t):
  type
    iconv_t* = iconv_t_1157628476
else:
  static :
    hint("Declaration of " & "iconv_t" & " already exists, not redeclaring")
when not declared(ColorRange):
  type
    ColorRange* = ColorRange_1157628626
else:
  static :
    hint("Declaration of " & "ColorRange" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUSamplerCreateInfo):
  type
    struct_SDL_GPUSamplerCreateInfo* = struct_SDL_GPUSamplerCreateInfo_1157629256
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUSamplerCreateInfo" &
        " already exists, not redeclaring")
when not declared(Texture):
  type
    Texture* = Texture_1157629484
else:
  static :
    hint("Declaration of " & "Texture" & " already exists, not redeclaring")
when not declared(SensorType):
  type
    SensorType* = SensorType_1157628796
else:
  static :
    hint("Declaration of " & "SensorType" & " already exists, not redeclaring")
when not declared(enum_SDL_Folder):
  type
    enum_SDL_Folder* = enum_SDL_Folder_1157629062
else:
  static :
    hint("Declaration of " & "enum_SDL_Folder" &
        " already exists, not redeclaring")
when not declared(enum_SDL_AsyncIOResult):
  type
    enum_SDL_AsyncIOResult* = enum_SDL_AsyncIOResult_1157628496
else:
  static :
    hint("Declaration of " & "enum_SDL_AsyncIOResult" &
        " already exists, not redeclaring")
when not declared(PackedOrder):
  type
    PackedOrder* = PackedOrder_1157628606
else:
  static :
    hint("Declaration of " & "PackedOrder" & " already exists, not redeclaring")
when not declared(ClipboardEvent):
  type
    ClipboardEvent* = ClipboardEvent_1157629038
else:
  static :
    hint("Declaration of " & "ClipboardEvent" &
        " already exists, not redeclaring")
when not declared(GPUColorTargetInfo):
  type
    GPUColorTargetInfo* = GPUColorTargetInfo_1157629326
else:
  static :
    hint("Declaration of " & "GPUColorTargetInfo" &
        " already exists, not redeclaring")
when not declared(JoystickType):
  type
    JoystickType* = JoystickType_1157628804
else:
  static :
    hint("Declaration of " & "JoystickType" & " already exists, not redeclaring")
when not declared(struct_SDL_CommonEvent):
  type
    struct_SDL_CommonEvent* = struct_SDL_CommonEvent_1157628904
else:
  static :
    hint("Declaration of " & "struct_SDL_CommonEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUTransferBufferUsage):
  type
    enum_SDL_GPUTransferBufferUsage* = enum_SDL_GPUTransferBufferUsage_1157629144
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUTransferBufferUsage" &
        " already exists, not redeclaring")
when not declared(GPUVertexInputRate):
  type
    GPUVertexInputRate* = GPUVertexInputRate_1157629160
else:
  static :
    hint("Declaration of " & "GPUVertexInputRate" &
        " already exists, not redeclaring")
when not declared(FRect):
  type
    FRect* = FRect_1157628678
else:
  static :
    hint("Declaration of " & "FRect" & " already exists, not redeclaring")
when not declared(struct_SDL_PenButtonEvent):
  type
    struct_SDL_PenButtonEvent* = struct_SDL_PenButtonEvent_1157629024
else:
  static :
    hint("Declaration of " & "struct_SDL_PenButtonEvent" &
        " already exists, not redeclaring")
when not declared(GamepadBindingType):
  type
    GamepadBindingType* = GamepadBindingType_1157628842
else:
  static :
    hint("Declaration of " & "GamepadBindingType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUGraphicsPipelineCreateInfo):
  type
    struct_SDL_GPUGraphicsPipelineCreateInfo* = struct_SDL_GPUGraphicsPipelineCreateInfo_1157629316
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUGraphicsPipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(CompareCallback):
  type
    CompareCallback* = CompareCallback_1157628470
else:
  static :
    hint("Declaration of " & "CompareCallback" &
        " already exists, not redeclaring")
when not declared(AsyncIOOutcome):
  type
    AsyncIOOutcome* = AsyncIOOutcome_1157628502
else:
  static :
    hint("Declaration of " & "AsyncIOOutcome" &
        " already exists, not redeclaring")
when not declared(ThreadFunction):
  type
    ThreadFunction* = ThreadFunction_1157628536
else:
  static :
    hint("Declaration of " & "ThreadFunction" &
        " already exists, not redeclaring")
when not declared(MouseWheelEvent):
  type
    MouseWheelEvent* = MouseWheelEvent_1157628950
else:
  static :
    hint("Declaration of " & "MouseWheelEvent" &
        " already exists, not redeclaring")
when not declared(PenButtonEvent):
  type
    PenButtonEvent* = PenButtonEvent_1157629026
else:
  static :
    hint("Declaration of " & "PenButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DropEvent):
  type
    struct_SDL_DropEvent* = struct_SDL_DropEvent_1157629032
else:
  static :
    hint("Declaration of " & "struct_SDL_DropEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_QuitEvent):
  type
    struct_SDL_QuitEvent* = struct_SDL_QuitEvent_1157629044
else:
  static :
    hint("Declaration of " & "struct_SDL_QuitEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_ClipboardEvent):
  type
    struct_SDL_ClipboardEvent* = struct_SDL_ClipboardEvent_1157629036
else:
  static :
    hint("Declaration of " & "struct_SDL_ClipboardEvent" &
        " already exists, not redeclaring")
when not declared(FlashOperation):
  type
    FlashOperation* = FlashOperation_1157628734
else:
  static :
    hint("Declaration of " & "FlashOperation" &
        " already exists, not redeclaring")
when not declared(EGLAttribArrayCallback):
  type
    EGLAttribArrayCallback* = EGLAttribArrayCallback_1157628750
else:
  static :
    hint("Declaration of " & "EGLAttribArrayCallback" &
        " already exists, not redeclaring")
when not declared(WindowEvent):
  type
    WindowEvent* = WindowEvent_1157628914
else:
  static :
    hint("Declaration of " & "WindowEvent" & " already exists, not redeclaring")
when not declared(GPUTransferBufferCreateInfo):
  type
    GPUTransferBufferCreateInfo* = GPUTransferBufferCreateInfo_1157629294
else:
  static :
    hint("Declaration of " & "GPUTransferBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUVertexElementFormat):
  type
    enum_SDL_GPUVertexElementFormat* = enum_SDL_GPUVertexElementFormat_1157629154
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUVertexElementFormat" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUIndexElementSize):
  type
    enum_SDL_GPUIndexElementSize* = enum_SDL_GPUIndexElementSize_1157629120
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUIndexElementSize" &
        " already exists, not redeclaring")
when not declared(MessageBoxButtonFlags):
  type
    MessageBoxButtonFlags* = MessageBoxButtonFlags_1157629438
else:
  static :
    hint("Declaration of " & "MessageBoxButtonFlags" &
        " already exists, not redeclaring")
when not declared(TLSID):
  type
    TLSID* = TLSID_1157628530
else:
  static :
    hint("Declaration of " & "TLSID" & " already exists, not redeclaring")
when not declared(CleanupPropertyCallback):
  type
    CleanupPropertyCallback* = CleanupPropertyCallback_1157628522
else:
  static :
    hint("Declaration of " & "CleanupPropertyCallback" &
        " already exists, not redeclaring")
when not declared(GPUBuffer):
  type
    GPUBuffer* = GPUBuffer_1157629084
else:
  static :
    hint("Declaration of " & "GPUBuffer" & " already exists, not redeclaring")
when not declared(GLContextReleaseFlag_typedef):
  type
    GLContextReleaseFlag_typedef* = GLContextReleaseFlag_typedef_1157628762
else:
  static :
    hint("Declaration of " & "GLContextReleaseFlag_typedef" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUTextureType):
  type
    enum_SDL_GPUTextureType* = enum_SDL_GPUTextureType_1157629130
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUTextureType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GamepadBinding):
  type
    struct_SDL_GamepadBinding* = struct_SDL_GamepadBinding_1157628844
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadBinding" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MessageBoxColor):
  type
    struct_SDL_MessageBoxColor* = struct_SDL_MessageBoxColor_1157629444
else:
  static :
    hint("Declaration of " & "struct_SDL_MessageBoxColor" &
        " already exists, not redeclaring")
when not declared(GPUStencilOpState):
  type
    GPUStencilOpState* = GPUStencilOpState_1157629274
else:
  static :
    hint("Declaration of " & "GPUStencilOpState" &
        " already exists, not redeclaring")
when not declared(TLSDestructorCallback):
  type
    TLSDestructorCallback* = TLSDestructorCallback_1157628538
else:
  static :
    hint("Declaration of " & "TLSDestructorCallback" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PackedLayout):
  type
    enum_SDL_PackedLayout* = enum_SDL_PackedLayout_1157628612
else:
  static :
    hint("Declaration of " & "enum_SDL_PackedLayout" &
        " already exists, not redeclaring")
when not declared(enum_SDL_FlashOperation):
  type
    enum_SDL_FlashOperation* = enum_SDL_FlashOperation_1157628732
else:
  static :
    hint("Declaration of " & "enum_SDL_FlashOperation" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GamepadButtonLabel):
  type
    enum_SDL_GamepadButtonLabel* = enum_SDL_GamepadButtonLabel_1157628832
else:
  static :
    hint("Declaration of " & "enum_SDL_GamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(Keycode):
  type
    Keycode* = Keycode_1157628852
else:
  static :
    hint("Declaration of " & "Keycode" & " already exists, not redeclaring")
when not declared(GPUFence):
  type
    GPUFence* = GPUFence_1157629106
else:
  static :
    hint("Declaration of " & "GPUFence" & " already exists, not redeclaring")
when not declared(enum_SDL_ColorPrimaries):
  type
    enum_SDL_ColorPrimaries* = enum_SDL_ColorPrimaries_1157628628
else:
  static :
    hint("Declaration of " & "enum_SDL_ColorPrimaries" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticPeriodic):
  type
    struct_SDL_HapticPeriodic* = struct_SDL_HapticPeriodic_1157629362
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticPeriodic" &
        " already exists, not redeclaring")
when not declared(enum_SDL_CameraPosition):
  type
    enum_SDL_CameraPosition* = enum_SDL_CameraPosition_1157628702
else:
  static :
    hint("Declaration of " & "enum_SDL_CameraPosition" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Point):
  type
    struct_SDL_Point* = struct_SDL_Point_1157628664
else:
  static :
    hint("Declaration of " & "struct_SDL_Point" &
        " already exists, not redeclaring")
when not declared(GPUComputePipeline):
  type
    GPUComputePipeline* = GPUComputePipeline_1157629094
else:
  static :
    hint("Declaration of " & "GPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GamepadButton):
  type
    enum_SDL_GamepadButton* = enum_SDL_GamepadButton_1157628828
else:
  static :
    hint("Declaration of " & "enum_SDL_GamepadButton" &
        " already exists, not redeclaring")
when not declared(struct_SDL_AssertData):
  type
    struct_SDL_AssertData* = struct_SDL_AssertData_1157628484
else:
  static :
    hint("Declaration of " & "struct_SDL_AssertData" &
        " already exists, not redeclaring")
when not declared(enum_SDL_BlendOperation):
  type
    enum_SDL_BlendOperation* = enum_SDL_BlendOperation_1157628588
else:
  static :
    hint("Declaration of " & "enum_SDL_BlendOperation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GUID):
  type
    struct_SDL_GUID* = struct_SDL_GUID_1157628782
else:
  static :
    hint("Declaration of " & "struct_SDL_GUID" &
        " already exists, not redeclaring")
when not declared(AssertionHandler):
  type
    AssertionHandler* = AssertionHandler_1157628488
else:
  static :
    hint("Declaration of " & "AssertionHandler" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUSampleCount):
  type
    enum_SDL_GPUSampleCount* = enum_SDL_GPUSampleCount_1157629134
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUSampleCount" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUPresentMode):
  type
    enum_SDL_GPUPresentMode* = enum_SDL_GPUPresentMode_1157629204
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUPresentMode" &
        " already exists, not redeclaring")
when not declared(GPUBlitInfo):
  type
    GPUBlitInfo* = GPUBlitInfo_1157629334
else:
  static :
    hint("Declaration of " & "GPUBlitInfo" & " already exists, not redeclaring")
when not declared(GPUStorageBufferReadWriteBinding):
  type
    GPUStorageBufferReadWriteBinding* = GPUStorageBufferReadWriteBinding_1157629346
else:
  static :
    hint("Declaration of " & "GPUStorageBufferReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PixelFormat):
  type
    enum_SDL_PixelFormat* = enum_SDL_PixelFormat_1157628616
else:
  static :
    hint("Declaration of " & "enum_SDL_PixelFormat" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Palette):
  type
    struct_SDL_Palette* = struct_SDL_Palette_1157628656
else:
  static :
    hint("Declaration of " & "struct_SDL_Palette" &
        " already exists, not redeclaring")
when not declared(PixelFormatDetails):
  type
    PixelFormatDetails* = PixelFormatDetails_1157628662
else:
  static :
    hint("Declaration of " & "PixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GamepadDeviceEvent):
  type
    struct_SDL_GamepadDeviceEvent* = struct_SDL_GamepadDeviceEvent_1157628984
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticConstant):
  type
    struct_SDL_HapticConstant* = struct_SDL_HapticConstant_1157629358
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticConstant" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUStorageBufferReadWriteBinding):
  type
    struct_SDL_GPUStorageBufferReadWriteBinding* = struct_SDL_GPUStorageBufferReadWriteBinding_1157629344
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUStorageBufferReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUFilter):
  type
    enum_SDL_GPUFilter* = enum_SDL_GPUFilter_1157629192
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUFilter" &
        " already exists, not redeclaring")
when not declared(TextEditingEvent):
  type
    TextEditingEvent* = TextEditingEvent_1157628926
else:
  static :
    hint("Declaration of " & "TextEditingEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUShaderCreateInfo):
  type
    struct_SDL_GPUShaderCreateInfo* = struct_SDL_GPUShaderCreateInfo_1157629280
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUShaderCreateInfo" &
        " already exists, not redeclaring")
when not declared(Thread):
  type
    Thread* = Thread_1157628526
else:
  static :
    hint("Declaration of " & "Thread" & " already exists, not redeclaring")
when not declared(LogCategory):
  type
    LogCategory* = LogCategory_1157629428
else:
  static :
    hint("Declaration of " & "LogCategory" & " already exists, not redeclaring")
when not declared(Palette):
  type
    Palette* = Palette_1157628658
else:
  static :
    hint("Declaration of " & "Palette" & " already exists, not redeclaring")
when not declared(DialogFileCallback):
  type
    DialogFileCallback* = DialogFileCallback_1157628776
else:
  static :
    hint("Declaration of " & "DialogFileCallback" &
        " already exists, not redeclaring")
when not declared(DateTime):
  type
    DateTime* = DateTime_1157629502
else:
  static :
    hint("Declaration of " & "DateTime" & " already exists, not redeclaring")
when not declared(enum_SDL_RendererLogicalPresentation):
  type
    enum_SDL_RendererLogicalPresentation* = enum_SDL_RendererLogicalPresentation_1157629476
else:
  static :
    hint("Declaration of " & "enum_SDL_RendererLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUSamplerMipmapMode):
  type
    enum_SDL_GPUSamplerMipmapMode* = enum_SDL_GPUSamplerMipmapMode_1157629196
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUSamplerMipmapMode" &
        " already exists, not redeclaring")
when not declared(TextEditingCandidatesEvent):
  type
    TextEditingCandidatesEvent* = TextEditingCandidatesEvent_1157628930
else:
  static :
    hint("Declaration of " & "TextEditingCandidatesEvent" &
        " already exists, not redeclaring")
when not declared(Renderer):
  type
    Renderer* = Renderer_1157629480
else:
  static :
    hint("Declaration of " & "Renderer" & " already exists, not redeclaring")
when not declared(GPUCullMode):
  type
    GPUCullMode* = GPUCullMode_1157629168
else:
  static :
    hint("Declaration of " & "GPUCullMode" & " already exists, not redeclaring")
when not declared(AudioFormat):
  type
    AudioFormat* = AudioFormat_1157628572
else:
  static :
    hint("Declaration of " & "AudioFormat" & " already exists, not redeclaring")
when not declared(PenID):
  type
    PenID* = PenID_1157628880
else:
  static :
    hint("Declaration of " & "PenID" & " already exists, not redeclaring")
when not declared(enum_SDL_ChromaLocation):
  type
    enum_SDL_ChromaLocation* = enum_SDL_ChromaLocation_1157628640
else:
  static :
    hint("Declaration of " & "enum_SDL_ChromaLocation" &
        " already exists, not redeclaring")
when not declared(HapticDirection):
  type
    HapticDirection* = HapticDirection_1157629356
else:
  static :
    hint("Declaration of " & "HapticDirection" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PathType):
  type
    enum_SDL_PathType* = enum_SDL_PathType_1157629066
else:
  static :
    hint("Declaration of " & "enum_SDL_PathType" &
        " already exists, not redeclaring")
when not declared(enum_SDL_HintPriority):
  type
    enum_SDL_HintPriority* = enum_SDL_HintPriority_1157629398
else:
  static :
    hint("Declaration of " & "enum_SDL_HintPriority" &
        " already exists, not redeclaring")
when not declared(DisplayEvent):
  type
    DisplayEvent* = DisplayEvent_1157628910
else:
  static :
    hint("Declaration of " & "DisplayEvent" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUColorTargetInfo):
  type
    struct_SDL_GPUColorTargetInfo* = struct_SDL_GPUColorTargetInfo_1157629324
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUColorTargetInfo" &
        " already exists, not redeclaring")
when not declared(DateFormat):
  type
    DateFormat* = DateFormat_1157629506
else:
  static :
    hint("Declaration of " & "DateFormat" & " already exists, not redeclaring")
when not declared(DialogFileFilter):
  type
    DialogFileFilter* = DialogFileFilter_1157628774
else:
  static :
    hint("Declaration of " & "DialogFileFilter" &
        " already exists, not redeclaring")
when not declared(InitState):
  type
    InitState* = InitState_1157628554
else:
  static :
    hint("Declaration of " & "InitState" & " already exists, not redeclaring")
when not declared(GPUStoreOp):
  type
    GPUStoreOp* = GPUStoreOp_1157629118
else:
  static :
    hint("Declaration of " & "GPUStoreOp" & " already exists, not redeclaring")
when not declared(Uint64):
  type
    Uint64* = Uint64_1157628448
else:
  static :
    hint("Declaration of " & "Uint64" & " already exists, not redeclaring")
when not declared(realloc_func):
  type
    realloc_func* = realloc_func_1157628464
else:
  static :
    hint("Declaration of " & "realloc_func" & " already exists, not redeclaring")
when not declared(Colorspace):
  type
    Colorspace* = Colorspace_1157628646
else:
  static :
    hint("Declaration of " & "Colorspace" & " already exists, not redeclaring")
when not declared(PenMotionEvent):
  type
    PenMotionEvent* = PenMotionEvent_1157629018
else:
  static :
    hint("Declaration of " & "PenMotionEvent" &
        " already exists, not redeclaring")
when not declared(AsyncIOQueue):
  type
    AsyncIOQueue* = AsyncIOQueue_1157628504
else:
  static :
    hint("Declaration of " & "AsyncIOQueue" & " already exists, not redeclaring")
when not declared(enum_SDL_LogCategory):
  type
    enum_SDL_LogCategory* = enum_SDL_LogCategory_1157629426
else:
  static :
    hint("Declaration of " & "enum_SDL_LogCategory" &
        " already exists, not redeclaring")
when not declared(enum_SDL_BlendFactor):
  type
    enum_SDL_BlendFactor* = enum_SDL_BlendFactor_1157628592
else:
  static :
    hint("Declaration of " & "enum_SDL_BlendFactor" &
        " already exists, not redeclaring")
when not declared(ThreadID):
  type
    ThreadID* = ThreadID_1157628528
else:
  static :
    hint("Declaration of " & "ThreadID" & " already exists, not redeclaring")
when not declared(enum_SDL_GLAttr):
  type
    enum_SDL_GLAttr* = enum_SDL_GLAttr_1157628754
else:
  static :
    hint("Declaration of " & "enum_SDL_GLAttr" &
        " already exists, not redeclaring")
when not declared(GPUPresentMode):
  type
    GPUPresentMode* = GPUPresentMode_1157629206
else:
  static :
    hint("Declaration of " & "GPUPresentMode" &
        " already exists, not redeclaring")
when not declared(JoyAxisEvent):
  type
    JoyAxisEvent* = JoyAxisEvent_1157628954
else:
  static :
    hint("Declaration of " & "JoyAxisEvent" & " already exists, not redeclaring")
when not declared(struct_SDL_Finger):
  type
    struct_SDL_Finger* = struct_SDL_Finger_1157628896
else:
  static :
    hint("Declaration of " & "struct_SDL_Finger" &
        " already exists, not redeclaring")
when not declared(enum_SDL_TimeFormat):
  type
    enum_SDL_TimeFormat* = enum_SDL_TimeFormat_1157629508
else:
  static :
    hint("Declaration of " & "enum_SDL_TimeFormat" &
        " already exists, not redeclaring")
when not declared(PenTouchEvent):
  type
    PenTouchEvent* = PenTouchEvent_1157629022
else:
  static :
    hint("Declaration of " & "PenTouchEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_PathInfo):
  type
    struct_SDL_PathInfo* = struct_SDL_PathInfo_1157629070
else:
  static :
    hint("Declaration of " & "struct_SDL_PathInfo" &
        " already exists, not redeclaring")
when not declared(GPURenderPass):
  type
    GPURenderPass* = GPURenderPass_1157629100
else:
  static :
    hint("Declaration of " & "GPURenderPass" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DialogFileFilter):
  type
    struct_SDL_DialogFileFilter* = struct_SDL_DialogFileFilter_1157628772
else:
  static :
    hint("Declaration of " & "struct_SDL_DialogFileFilter" &
        " already exists, not redeclaring")
when not declared(IOWhence):
  type
    IOWhence* = IOWhence_1157628562
else:
  static :
    hint("Declaration of " & "IOWhence" & " already exists, not redeclaring")
when not declared(enum_SDL_JoystickConnectionState):
  type
    enum_SDL_JoystickConnectionState* = enum_SDL_JoystickConnectionState_1157628806
else:
  static :
    hint("Declaration of " & "enum_SDL_JoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_BitmapOrder):
  type
    enum_SDL_BitmapOrder* = enum_SDL_BitmapOrder_1157628600
else:
  static :
    hint("Declaration of " & "enum_SDL_BitmapOrder" &
        " already exists, not redeclaring")
when not declared(TextInputType):
  type
    TextInputType* = TextInputType_1157628860
else:
  static :
    hint("Declaration of " & "TextInputType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_WindowEvent):
  type
    struct_SDL_WindowEvent* = struct_SDL_WindowEvent_1157628912
else:
  static :
    hint("Declaration of " & "struct_SDL_WindowEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUStorageTextureReadWriteBinding):
  type
    struct_SDL_GPUStorageTextureReadWriteBinding* = struct_SDL_GPUStorageTextureReadWriteBinding_1157629348
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUStorageTextureReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(Finger):
  type
    Finger* = Finger_1157628898
else:
  static :
    hint("Declaration of " & "Finger" & " already exists, not redeclaring")
when not declared(enum_SDL_TouchDeviceType):
  type
    enum_SDL_TouchDeviceType* = enum_SDL_TouchDeviceType_1157628892
else:
  static :
    hint("Declaration of " & "enum_SDL_TouchDeviceType" &
        " already exists, not redeclaring")
when not declared(ChromaLocation):
  type
    ChromaLocation* = ChromaLocation_1157628642
else:
  static :
    hint("Declaration of " & "ChromaLocation" &
        " already exists, not redeclaring")
when not declared(GamepadAxisEvent):
  type
    GamepadAxisEvent* = GamepadAxisEvent_1157628978
else:
  static :
    hint("Declaration of " & "GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(GPUIndexedIndirectDrawCommand):
  type
    GPUIndexedIndirectDrawCommand* = GPUIndexedIndirectDrawCommand_1157629250
else:
  static :
    hint("Declaration of " & "GPUIndexedIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(HapticID):
  type
    HapticID* = HapticID_1157629386
else:
  static :
    hint("Declaration of " & "HapticID" & " already exists, not redeclaring")
when not declared(hid_bus_type):
  type
    hid_bus_type* = hid_bus_type_1157629392
else:
  static :
    hint("Declaration of " & "hid_bus_type" & " already exists, not redeclaring")
when not declared(IOStream):
  type
    IOStream* = IOStream_1157628568
else:
  static :
    hint("Declaration of " & "IOStream" & " already exists, not redeclaring")
when not declared(struct_SDL_FPoint):
  type
    struct_SDL_FPoint* = struct_SDL_FPoint_1157628668
else:
  static :
    hint("Declaration of " & "struct_SDL_FPoint" &
        " already exists, not redeclaring")
when not declared(PixelType):
  type
    PixelType* = PixelType_1157628598
else:
  static :
    hint("Declaration of " & "PixelType" & " already exists, not redeclaring")
when not declared(AppQuit_func):
  type
    AppQuit_func* = AppQuit_func_1157629416
else:
  static :
    hint("Declaration of " & "AppQuit_func" & " already exists, not redeclaring")
when not declared(GPUCommandBuffer):
  type
    GPUCommandBuffer* = GPUCommandBuffer_1157629098
else:
  static :
    hint("Declaration of " & "GPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(struct_SDL_JoyBallEvent):
  type
    struct_SDL_JoyBallEvent* = struct_SDL_JoyBallEvent_1157628956
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyBallEvent" &
        " already exists, not redeclaring")
when not declared(EnumeratePropertiesCallback):
  type
    EnumeratePropertiesCallback* = EnumeratePropertiesCallback_1157628524
else:
  static :
    hint("Declaration of " & "EnumeratePropertiesCallback" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUBufferRegion):
  type
    struct_SDL_GPUBufferRegion* = struct_SDL_GPUBufferRegion_1157629240
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBufferRegion" &
        " already exists, not redeclaring")
when not declared(struct_SDL_TouchFingerEvent):
  type
    struct_SDL_TouchFingerEvent* = struct_SDL_TouchFingerEvent_1157629008
else:
  static :
    hint("Declaration of " & "struct_SDL_TouchFingerEvent" &
        " already exists, not redeclaring")
when not declared(GPUSamplerAddressMode):
  type
    GPUSamplerAddressMode* = GPUSamplerAddressMode_1157629202
else:
  static :
    hint("Declaration of " & "GPUSamplerAddressMode" &
        " already exists, not redeclaring")
when not declared(enum_SDL_Colorspace):
  type
    enum_SDL_Colorspace* = enum_SDL_Colorspace_1157628644
else:
  static :
    hint("Declaration of " & "enum_SDL_Colorspace" &
        " already exists, not redeclaring")
when not declared(PenProximityEvent):
  type
    PenProximityEvent* = PenProximityEvent_1157629014
else:
  static :
    hint("Declaration of " & "PenProximityEvent" &
        " already exists, not redeclaring")
when not declared(GPUBufferBinding):
  type
    GPUBufferBinding* = GPUBufferBinding_1157629338
else:
  static :
    hint("Declaration of " & "GPUBufferBinding" &
        " already exists, not redeclaring")
when not declared(StorageInterface):
  type
    StorageInterface* = StorageInterface_1157629488
else:
  static :
    hint("Declaration of " & "StorageInterface" &
        " already exists, not redeclaring")
when not declared(struct_SDL_StorageInterface):
  type
    struct_SDL_StorageInterface* = struct_SDL_StorageInterface_1157629486
else:
  static :
    hint("Declaration of " & "struct_SDL_StorageInterface" &
        " already exists, not redeclaring")
when not declared(EGLConfig):
  type
    EGLConfig* = EGLConfig_1157628740
else:
  static :
    hint("Declaration of " & "EGLConfig" & " already exists, not redeclaring")
when not declared(struct_SDL_IOStreamInterface):
  type
    struct_SDL_IOStreamInterface* = struct_SDL_IOStreamInterface_1157628564
else:
  static :
    hint("Declaration of " & "struct_SDL_IOStreamInterface" &
        " already exists, not redeclaring")
when not declared(struct_SDL_JoyHatEvent):
  type
    struct_SDL_JoyHatEvent* = struct_SDL_JoyHatEvent_1157628960
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyHatEvent" &
        " already exists, not redeclaring")
when not declared(GamepadSensorEvent):
  type
    GamepadSensorEvent* = GamepadSensorEvent_1157628994
else:
  static :
    hint("Declaration of " & "GamepadSensorEvent" &
        " already exists, not redeclaring")
when not declared(MetalView):
  type
    MetalView* = MetalView_1157629460
else:
  static :
    hint("Declaration of " & "MetalView" & " already exists, not redeclaring")
when not declared(CameraDeviceEvent):
  type
    CameraDeviceEvent* = CameraDeviceEvent_1157629002
else:
  static :
    hint("Declaration of " & "CameraDeviceEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUCubeMapFace):
  type
    enum_SDL_GPUCubeMapFace* = enum_SDL_GPUCubeMapFace_1157629138
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUCubeMapFace" &
        " already exists, not redeclaring")
when not declared(CommonEvent):
  type
    CommonEvent* = CommonEvent_1157628906
else:
  static :
    hint("Declaration of " & "CommonEvent" & " already exists, not redeclaring")
when not declared(Vertex):
  type
    Vertex* = Vertex_1157629470
else:
  static :
    hint("Declaration of " & "Vertex" & " already exists, not redeclaring")
when not declared(AsyncIO):
  type
    AsyncIO* = AsyncIO_1157628490
else:
  static :
    hint("Declaration of " & "AsyncIO" & " already exists, not redeclaring")
when not declared(Sensor):
  type
    Sensor* = Sensor_1157628790
else:
  static :
    hint("Declaration of " & "Sensor" & " already exists, not redeclaring")
when not declared(GPUShader):
  type
    GPUShader* = GPUShader_1157629092
else:
  static :
    hint("Declaration of " & "GPUShader" & " already exists, not redeclaring")
when not declared(KeyboardDeviceEvent):
  type
    KeyboardDeviceEvent* = KeyboardDeviceEvent_1157628918
else:
  static :
    hint("Declaration of " & "KeyboardDeviceEvent" &
        " already exists, not redeclaring")
when not declared(Window):
  type
    Window* = Window_1157628728
else:
  static :
    hint("Declaration of " & "Window" & " already exists, not redeclaring")
when not declared(CompareCallback_r):
  type
    CompareCallback_r* = CompareCallback_r_1157628472
else:
  static :
    hint("Declaration of " & "CompareCallback_r" &
        " already exists, not redeclaring")
when not declared(MessageBoxColorScheme):
  type
    MessageBoxColorScheme* = MessageBoxColorScheme_1157629454
else:
  static :
    hint("Declaration of " & "MessageBoxColorScheme" &
        " already exists, not redeclaring")
when not declared(union_SDL_HapticEffect):
  type
    union_SDL_HapticEffect* = union_SDL_HapticEffect_1157629382
else:
  static :
    hint("Declaration of " & "union_SDL_HapticEffect" &
        " already exists, not redeclaring")
when not declared(BitmapOrder):
  type
    BitmapOrder* = BitmapOrder_1157628602
else:
  static :
    hint("Declaration of " & "BitmapOrder" & " already exists, not redeclaring")
when not declared(Uint32):
  type
    Uint32* = Uint32_1157628444
else:
  static :
    hint("Declaration of " & "Uint32" & " already exists, not redeclaring")
when not declared(GPUShaderCreateInfo):
  type
    GPUShaderCreateInfo* = GPUShaderCreateInfo_1157629282
else:
  static :
    hint("Declaration of " & "GPUShaderCreateInfo" &
        " already exists, not redeclaring")
when not declared(Haptic):
  type
    Haptic* = Haptic_1157629352
else:
  static :
    hint("Declaration of " & "Haptic" & " already exists, not redeclaring")
when not declared(struct_SDL_HapticRamp):
  type
    struct_SDL_HapticRamp* = struct_SDL_HapticRamp_1157629370
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticRamp" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUCullMode):
  type
    enum_SDL_GPUCullMode* = enum_SDL_GPUCullMode_1157629166
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUCullMode" &
        " already exists, not redeclaring")
when not declared(enum_SDL_MessageBoxColorType):
  type
    enum_SDL_MessageBoxColorType* = enum_SDL_MessageBoxColorType_1157629448
else:
  static :
    hint("Declaration of " & "enum_SDL_MessageBoxColorType" &
        " already exists, not redeclaring")
when not declared(TimerID):
  type
    TimerID* = TimerID_1157629512
else:
  static :
    hint("Declaration of " & "TimerID" & " already exists, not redeclaring")
when not declared(Scancode):
  type
    Scancode* = Scancode_1157628850
else:
  static :
    hint("Declaration of " & "Scancode" & " already exists, not redeclaring")
when not declared(enum_SDL_ColorRange):
  type
    enum_SDL_ColorRange* = enum_SDL_ColorRange_1157628624
else:
  static :
    hint("Declaration of " & "enum_SDL_ColorRange" &
        " already exists, not redeclaring")
when not declared(SharedObject):
  type
    SharedObject* = SharedObject_1157629420
else:
  static :
    hint("Declaration of " & "SharedObject" & " already exists, not redeclaring")
when not declared(XEvent):
  type
    XEvent* = XEvent_1157629492
else:
  static :
    hint("Declaration of " & "XEvent" & " already exists, not redeclaring")
when not declared(enum_SDL_HitTestResult):
  type
    enum_SDL_HitTestResult* = enum_SDL_HitTestResult_1157628766
else:
  static :
    hint("Declaration of " & "enum_SDL_HitTestResult" &
        " already exists, not redeclaring")
when not declared(struct_SDL_AtomicInt):
  type
    struct_SDL_AtomicInt* = struct_SDL_AtomicInt_1157628508
else:
  static :
    hint("Declaration of " & "struct_SDL_AtomicInt" &
        " already exists, not redeclaring")
when not declared(malloc_func):
  type
    malloc_func* = malloc_func_1157628460
else:
  static :
    hint("Declaration of " & "malloc_func" & " already exists, not redeclaring")
when not declared(GamepadBinding):
  type
    GamepadBinding* = GamepadBinding_1157628846
else:
  static :
    hint("Declaration of " & "GamepadBinding" &
        " already exists, not redeclaring")
when not declared(GPUVertexAttribute):
  type
    GPUVertexAttribute* = GPUVertexAttribute_1157629266
else:
  static :
    hint("Declaration of " & "GPUVertexAttribute" &
        " already exists, not redeclaring")
when not declared(struct_SDL_FRect):
  type
    struct_SDL_FRect* = struct_SDL_FRect_1157628676
else:
  static :
    hint("Declaration of " & "struct_SDL_FRect" &
        " already exists, not redeclaring")
when not declared(Locale):
  type
    Locale* = Locale_1157629424
else:
  static :
    hint("Declaration of " & "Locale" & " already exists, not redeclaring")
when not declared(FunctionPointer):
  type
    FunctionPointer* = FunctionPointer_1157628478
else:
  static :
    hint("Declaration of " & "FunctionPointer" &
        " already exists, not redeclaring")
when not declared(HitTestResult):
  type
    HitTestResult* = HitTestResult_1157628768
else:
  static :
    hint("Declaration of " & "HitTestResult" &
        " already exists, not redeclaring")
when not declared(struct_SDL_PenTouchEvent):
  type
    struct_SDL_PenTouchEvent* = struct_SDL_PenTouchEvent_1157629020
else:
  static :
    hint("Declaration of " & "struct_SDL_PenTouchEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GamepadAxis):
  type
    enum_SDL_GamepadAxis* = enum_SDL_GamepadAxis_1157628836
else:
  static :
    hint("Declaration of " & "enum_SDL_GamepadAxis" &
        " already exists, not redeclaring")
when not declared(MouseWheelDirection):
  type
    MouseWheelDirection* = MouseWheelDirection_1157628876
else:
  static :
    hint("Declaration of " & "MouseWheelDirection" &
        " already exists, not redeclaring")
when not declared(TransferCharacteristics):
  type
    TransferCharacteristics* = TransferCharacteristics_1157628634
else:
  static :
    hint("Declaration of " & "TransferCharacteristics" &
        " already exists, not redeclaring")
when not declared(GPUTextureType):
  type
    GPUTextureType* = GPUTextureType_1157629132
else:
  static :
    hint("Declaration of " & "GPUTextureType" &
        " already exists, not redeclaring")
when not declared(AppIterate_func):
  type
    AppIterate_func* = AppIterate_func_1157629412
else:
  static :
    hint("Declaration of " & "AppIterate_func" &
        " already exists, not redeclaring")
when not declared(GPUVertexElementFormat):
  type
    GPUVertexElementFormat* = GPUVertexElementFormat_1157629156
else:
  static :
    hint("Declaration of " & "GPUVertexElementFormat" &
        " already exists, not redeclaring")
when not declared(MouseDeviceEvent):
  type
    MouseDeviceEvent* = MouseDeviceEvent_1157628938
else:
  static :
    hint("Declaration of " & "MouseDeviceEvent" &
        " already exists, not redeclaring")
when not declared(InitStatus):
  type
    InitStatus* = InitStatus_1157628550
else:
  static :
    hint("Declaration of " & "InitStatus" & " already exists, not redeclaring")
when not declared(enum_SDL_ArrayOrder):
  type
    enum_SDL_ArrayOrder* = enum_SDL_ArrayOrder_1157628608
else:
  static :
    hint("Declaration of " & "enum_SDL_ArrayOrder" &
        " already exists, not redeclaring")
when not declared(EnumerationResult):
  type
    EnumerationResult* = EnumerationResult_1157629078
else:
  static :
    hint("Declaration of " & "EnumerationResult" &
        " already exists, not redeclaring")
when not declared(struct_SDL_AudioDeviceEvent):
  type
    struct_SDL_AudioDeviceEvent* = struct_SDL_AudioDeviceEvent_1157628996
else:
  static :
    hint("Declaration of " & "struct_SDL_AudioDeviceEvent" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUTextureFormat):
  type
    enum_SDL_GPUTextureFormat* = enum_SDL_GPUTextureFormat_1157629124
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUTextureFormat" &
        " already exists, not redeclaring")
when not declared(enum_SDL_MatrixCoefficients):
  type
    enum_SDL_MatrixCoefficients* = enum_SDL_MatrixCoefficients_1157628636
else:
  static :
    hint("Declaration of " & "enum_SDL_MatrixCoefficients" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUPrimitiveType):
  type
    enum_SDL_GPUPrimitiveType* = enum_SDL_GPUPrimitiveType_1157629108
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUPrimitiveType" &
        " already exists, not redeclaring")
when not declared(AppEvent_func):
  type
    AppEvent_func* = AppEvent_func_1157629414
else:
  static :
    hint("Declaration of " & "AppEvent_func" &
        " already exists, not redeclaring")
when not declared(GPUSamplerCreateInfo):
  type
    GPUSamplerCreateInfo* = GPUSamplerCreateInfo_1157629258
else:
  static :
    hint("Declaration of " & "GPUSamplerCreateInfo" &
        " already exists, not redeclaring")
when not declared(HapticLeftRight):
  type
    HapticLeftRight* = HapticLeftRight_1157629376
else:
  static :
    hint("Declaration of " & "HapticLeftRight" &
        " already exists, not redeclaring")
when not declared(EGLIntArrayCallback):
  type
    EGLIntArrayCallback* = EGLIntArrayCallback_1157628752
else:
  static :
    hint("Declaration of " & "EGLIntArrayCallback" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUTextureLocation):
  type
    struct_SDL_GPUTextureLocation* = struct_SDL_GPUTextureLocation_1157629224
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTextureLocation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUIndexedIndirectDrawCommand):
  type
    struct_SDL_GPUIndexedIndirectDrawCommand* = struct_SDL_GPUIndexedIndirectDrawCommand_1157629248
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUIndexedIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(GPUColorTargetDescription):
  type
    GPUColorTargetDescription* = GPUColorTargetDescription_1157629310
else:
  static :
    hint("Declaration of " & "GPUColorTargetDescription" &
        " already exists, not redeclaring")
when not declared(DUMMY_ENUM):
  type
    DUMMY_ENUM* = DUMMY_ENUM_1157628458
else:
  static :
    hint("Declaration of " & "DUMMY_ENUM" & " already exists, not redeclaring")
when not declared(struct_SDL_MessageBoxData):
  type
    struct_SDL_MessageBoxData* = struct_SDL_MessageBoxData_1157629456
else:
  static :
    hint("Declaration of " & "struct_SDL_MessageBoxData" &
        " already exists, not redeclaring")
when not declared(enum_SDL_ColorType):
  type
    enum_SDL_ColorType* = enum_SDL_ColorType_1157628620
else:
  static :
    hint("Declaration of " & "enum_SDL_ColorType" &
        " already exists, not redeclaring")
when not declared(VirtualJoystickSensorDesc):
  type
    VirtualJoystickSensorDesc* = VirtualJoystickSensorDesc_1157628816
else:
  static :
    hint("Declaration of " & "VirtualJoystickSensorDesc" &
        " already exists, not redeclaring")
when not declared(MatrixCoefficients):
  type
    MatrixCoefficients* = MatrixCoefficients_1157628638
else:
  static :
    hint("Declaration of " & "MatrixCoefficients" &
        " already exists, not redeclaring")
when not declared(enum_SDL_Scancode):
  type
    enum_SDL_Scancode* = enum_SDL_Scancode_1157628848
else:
  static :
    hint("Declaration of " & "enum_SDL_Scancode" &
        " already exists, not redeclaring")
when not declared(GamepadTouchpadEvent):
  type
    GamepadTouchpadEvent* = GamepadTouchpadEvent_1157628990
else:
  static :
    hint("Declaration of " & "GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(GPUCopyPass):
  type
    GPUCopyPass* = GPUCopyPass_1157629104
else:
  static :
    hint("Declaration of " & "GPUCopyPass" & " already exists, not redeclaring")
when not declared(GPUStorageTextureReadWriteBinding):
  type
    GPUStorageTextureReadWriteBinding* = GPUStorageTextureReadWriteBinding_1157629350
else:
  static :
    hint("Declaration of " & "GPUStorageTextureReadWriteBinding" &
        " already exists, not redeclaring")
when not declared(HapticRamp):
  type
    HapticRamp* = HapticRamp_1157629372
else:
  static :
    hint("Declaration of " & "HapticRamp" & " already exists, not redeclaring")
when not declared(JoyHatEvent):
  type
    JoyHatEvent* = JoyHatEvent_1157628962
else:
  static :
    hint("Declaration of " & "JoyHatEvent" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipeline):
  type
    GPUGraphicsPipeline* = GPUGraphicsPipeline_1157629096
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticDirection):
  type
    struct_SDL_HapticDirection* = struct_SDL_HapticDirection_1157629354
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticDirection" &
        " already exists, not redeclaring")
when not declared(JoyBatteryEvent):
  type
    JoyBatteryEvent* = JoyBatteryEvent_1157628974
else:
  static :
    hint("Declaration of " & "JoyBatteryEvent" &
        " already exists, not redeclaring")
when not declared(PowerState):
  type
    PowerState* = PowerState_1157628788
else:
  static :
    hint("Declaration of " & "PowerState" & " already exists, not redeclaring")
when not declared(MainThreadCallback):
  type
    MainThreadCallback* = MainThreadCallback_1157629418
else:
  static :
    hint("Declaration of " & "MainThreadCallback" &
        " already exists, not redeclaring")
when not declared(MouseButtonFlags):
  type
    MouseButtonFlags* = MouseButtonFlags_1157628878
else:
  static :
    hint("Declaration of " & "MouseButtonFlags" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GamepadAxisEvent):
  type
    struct_SDL_GamepadAxisEvent* = struct_SDL_GamepadAxisEvent_1157628976
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadAxisEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MessageBoxButtonData):
  type
    struct_SDL_MessageBoxButtonData* = struct_SDL_MessageBoxButtonData_1157629440
else:
  static :
    hint("Declaration of " & "struct_SDL_MessageBoxButtonData" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PixelType):
  type
    enum_SDL_PixelType* = enum_SDL_PixelType_1157628596
else:
  static :
    hint("Declaration of " & "enum_SDL_PixelType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Locale):
  type
    struct_SDL_Locale* = struct_SDL_Locale_1157629422
else:
  static :
    hint("Declaration of " & "struct_SDL_Locale" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticCondition):
  type
    struct_SDL_HapticCondition* = struct_SDL_HapticCondition_1157629366
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticCondition" &
        " already exists, not redeclaring")
when not declared(struct_SDL_CameraSpec):
  type
    struct_SDL_CameraSpec* = struct_SDL_CameraSpec_1157628698
else:
  static :
    hint("Declaration of " & "struct_SDL_CameraSpec" &
        " already exists, not redeclaring")
when not declared(AudioSpec):
  type
    AudioSpec* = AudioSpec_1157628578
else:
  static :
    hint("Declaration of " & "AudioSpec" & " already exists, not redeclaring")
when not declared(struct_SDL_PixelFormatDetails):
  type
    struct_SDL_PixelFormatDetails* = struct_SDL_PixelFormatDetails_1157628660
else:
  static :
    hint("Declaration of " & "struct_SDL_PixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(GPUSampler):
  type
    GPUSampler* = GPUSampler_1157629090
else:
  static :
    hint("Declaration of " & "GPUSampler" & " already exists, not redeclaring")
when not declared(GLContextFlag_typedef):
  type
    GLContextFlag_typedef* = GLContextFlag_typedef_1157628760
else:
  static :
    hint("Declaration of " & "GLContextFlag_typedef" &
        " already exists, not redeclaring")
when not declared(Color):
  type
    Color* = Color_1157628650
else:
  static :
    hint("Declaration of " & "Color" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUTextureCreateInfo):
  type
    struct_SDL_GPUTextureCreateInfo* = struct_SDL_GPUTextureCreateInfo_1157629284
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTextureCreateInfo" &
        " already exists, not redeclaring")
when not declared(PathInfo):
  type
    PathInfo* = PathInfo_1157629072
else:
  static :
    hint("Declaration of " & "PathInfo" & " already exists, not redeclaring")
when not declared(GPUDevice):
  type
    GPUDevice* = GPUDevice_1157629082
else:
  static :
    hint("Declaration of " & "GPUDevice" & " already exists, not redeclaring")
when not declared(GamepadButtonLabel):
  type
    GamepadButtonLabel* = GamepadButtonLabel_1157628834
else:
  static :
    hint("Declaration of " & "GamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(GPUComputePipelineCreateInfo):
  type
    GPUComputePipelineCreateInfo* = GPUComputePipelineCreateInfo_1157629322
else:
  static :
    hint("Declaration of " & "GPUComputePipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(GPUFrontFace):
  type
    GPUFrontFace* = GPUFrontFace_1157629172
else:
  static :
    hint("Declaration of " & "GPUFrontFace" & " already exists, not redeclaring")
when not declared(GPUBufferUsageFlags):
  type
    GPUBufferUsageFlags* = GPUBufferUsageFlags_1157629142
else:
  static :
    hint("Declaration of " & "GPUBufferUsageFlags" &
        " already exists, not redeclaring")
when not declared(GPUTextureLocation):
  type
    GPUTextureLocation* = GPUTextureLocation_1157629226
else:
  static :
    hint("Declaration of " & "GPUTextureLocation" &
        " already exists, not redeclaring")
when not declared(HapticEffect):
  type
    HapticEffect* = HapticEffect_1157629384
else:
  static :
    hint("Declaration of " & "HapticEffect" & " already exists, not redeclaring")
when not declared(enum_SDL_LogPriority):
  type
    enum_SDL_LogPriority* = enum_SDL_LogPriority_1157629430
else:
  static :
    hint("Declaration of " & "enum_SDL_LogPriority" &
        " already exists, not redeclaring")
when not declared(Sint64):
  type
    Sint64* = Sint64_1157628446
else:
  static :
    hint("Declaration of " & "Sint64" & " already exists, not redeclaring")
when not declared(GPUGraphicsPipelineCreateInfo):
  type
    GPUGraphicsPipelineCreateInfo* = GPUGraphicsPipelineCreateInfo_1157629318
else:
  static :
    hint("Declaration of " & "GPUGraphicsPipelineCreateInfo" &
        " already exists, not redeclaring")
when not declared(WindowFlags):
  type
    WindowFlags* = WindowFlags_1157628730
else:
  static :
    hint("Declaration of " & "WindowFlags" & " already exists, not redeclaring")
when not declared(PropertiesID):
  type
    PropertiesID* = PropertiesID_1157628516
else:
  static :
    hint("Declaration of " & "PropertiesID" & " already exists, not redeclaring")
when not declared(DisplayID):
  type
    DisplayID* = DisplayID_1157628710
else:
  static :
    hint("Declaration of " & "DisplayID" & " already exists, not redeclaring")
when not declared(enum_SDL_EventType):
  type
    enum_SDL_EventType* = enum_SDL_EventType_1157628900
else:
  static :
    hint("Declaration of " & "enum_SDL_EventType" &
        " already exists, not redeclaring")
when not declared(struct_SDL_TextInputEvent):
  type
    struct_SDL_TextInputEvent* = struct_SDL_TextInputEvent_1157628932
else:
  static :
    hint("Declaration of " & "struct_SDL_TextInputEvent" &
        " already exists, not redeclaring")
when not declared(AudioStreamCallback):
  type
    AudioStreamCallback* = AudioStreamCallback_1157628582
else:
  static :
    hint("Declaration of " & "AudioStreamCallback" &
        " already exists, not redeclaring")
when not declared(FColor):
  type
    FColor* = FColor_1157628654
else:
  static :
    hint("Declaration of " & "FColor" & " already exists, not redeclaring")
when not declared(ScaleMode):
  type
    ScaleMode* = ScaleMode_1157628684
else:
  static :
    hint("Declaration of " & "ScaleMode" & " already exists, not redeclaring")
when not declared(struct_SDL_AtomicU32):
  type
    struct_SDL_AtomicU32* = struct_SDL_AtomicU32_1157628512
else:
  static :
    hint("Declaration of " & "struct_SDL_AtomicU32" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DisplayMode):
  type
    struct_SDL_DisplayMode* = struct_SDL_DisplayMode_1157628720
else:
  static :
    hint("Declaration of " & "struct_SDL_DisplayMode" &
        " already exists, not redeclaring")
when not declared(FileDialogType):
  type
    FileDialogType* = FileDialogType_1157628780
else:
  static :
    hint("Declaration of " & "FileDialogType" &
        " already exists, not redeclaring")
when not declared(TouchID):
  type
    TouchID* = TouchID_1157628888
else:
  static :
    hint("Declaration of " & "TouchID" & " already exists, not redeclaring")
when not declared(GPUBlendFactor):
  type
    GPUBlendFactor* = GPUBlendFactor_1157629188
else:
  static :
    hint("Declaration of " & "GPUBlendFactor" &
        " already exists, not redeclaring")
when not declared(enum_SDL_AsyncIOTaskType):
  type
    enum_SDL_AsyncIOTaskType* = enum_SDL_AsyncIOTaskType_1157628492
else:
  static :
    hint("Declaration of " & "enum_SDL_AsyncIOTaskType" &
        " already exists, not redeclaring")
when not declared(enum_SDL_SystemTheme):
  type
    enum_SDL_SystemTheme* = enum_SDL_SystemTheme_1157628714
else:
  static :
    hint("Declaration of " & "enum_SDL_SystemTheme" &
        " already exists, not redeclaring")
when not declared(GPUTexture):
  type
    GPUTexture* = GPUTexture_1157629088
else:
  static :
    hint("Declaration of " & "GPUTexture" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUTransferBufferCreateInfo):
  type
    struct_SDL_GPUTransferBufferCreateInfo* = struct_SDL_GPUTransferBufferCreateInfo_1157629292
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUTransferBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(SpinLock):
  type
    SpinLock* = SpinLock_1157628506
else:
  static :
    hint("Declaration of " & "SpinLock" & " already exists, not redeclaring")
when not declared(TouchFingerEvent):
  type
    TouchFingerEvent* = TouchFingerEvent_1157629010
else:
  static :
    hint("Declaration of " & "TouchFingerEvent" &
        " already exists, not redeclaring")
when not declared(GamepadDeviceEvent):
  type
    GamepadDeviceEvent* = GamepadDeviceEvent_1157628986
else:
  static :
    hint("Declaration of " & "GamepadDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUComputePass):
  type
    GPUComputePass* = GPUComputePass_1157629102
else:
  static :
    hint("Declaration of " & "GPUComputePass" &
        " already exists, not redeclaring")
when not declared(WindowID):
  type
    WindowID* = WindowID_1157628712
else:
  static :
    hint("Declaration of " & "WindowID" & " already exists, not redeclaring")
when not declared(struct_SDL_JoyAxisEvent):
  type
    struct_SDL_JoyAxisEvent* = struct_SDL_JoyAxisEvent_1157628952
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyAxisEvent" &
        " already exists, not redeclaring")
when not declared(TextureAccess):
  type
    TextureAccess* = TextureAccess_1157629474
else:
  static :
    hint("Declaration of " & "TextureAccess" &
        " already exists, not redeclaring")
when not declared(struct_SDL_PenMotionEvent):
  type
    struct_SDL_PenMotionEvent* = struct_SDL_PenMotionEvent_1157629016
else:
  static :
    hint("Declaration of " & "struct_SDL_PenMotionEvent" &
        " already exists, not redeclaring")
when not declared(GPUBufferCreateInfo):
  type
    GPUBufferCreateInfo* = GPUBufferCreateInfo_1157629290
else:
  static :
    hint("Declaration of " & "GPUBufferCreateInfo" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Rect):
  type
    struct_SDL_Rect* = struct_SDL_Rect_1157628672
else:
  static :
    hint("Declaration of " & "struct_SDL_Rect" &
        " already exists, not redeclaring")
when not declared(VirtualJoystickDesc):
  type
    VirtualJoystickDesc* = VirtualJoystickDesc_1157628820
else:
  static :
    hint("Declaration of " & "VirtualJoystickDesc" &
        " already exists, not redeclaring")
when not declared(struct_SDL_VirtualJoystickDesc):
  type
    struct_SDL_VirtualJoystickDesc* = struct_SDL_VirtualJoystickDesc_1157628818
else:
  static :
    hint("Declaration of " & "struct_SDL_VirtualJoystickDesc" &
        " already exists, not redeclaring")
when not declared(Mutex):
  type
    Mutex* = Mutex_1157628540
else:
  static :
    hint("Declaration of " & "Mutex" & " already exists, not redeclaring")
when not declared(IOStatus):
  type
    IOStatus* = IOStatus_1157628558
else:
  static :
    hint("Declaration of " & "IOStatus" & " already exists, not redeclaring")
when not declared(enum_SDL_ScaleMode):
  type
    enum_SDL_ScaleMode* = enum_SDL_ScaleMode_1157628682
else:
  static :
    hint("Declaration of " & "enum_SDL_ScaleMode" &
        " already exists, not redeclaring")
when not declared(enum_SDL_PenAxis):
  type
    enum_SDL_PenAxis* = enum_SDL_PenAxis_1157628884
else:
  static :
    hint("Declaration of " & "enum_SDL_PenAxis" &
        " already exists, not redeclaring")
when not declared(GPUTextureCreateInfo):
  type
    GPUTextureCreateInfo* = GPUTextureCreateInfo_1157629286
else:
  static :
    hint("Declaration of " & "GPUTextureCreateInfo" &
        " already exists, not redeclaring")
when not declared(JoyDeviceEvent):
  type
    JoyDeviceEvent* = JoyDeviceEvent_1157628970
else:
  static :
    hint("Declaration of " & "JoyDeviceEvent" &
        " already exists, not redeclaring")
when not declared(GPUSwapchainComposition):
  type
    GPUSwapchainComposition* = GPUSwapchainComposition_1157629210
else:
  static :
    hint("Declaration of " & "GPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MouseWheelEvent):
  type
    struct_SDL_MouseWheelEvent* = struct_SDL_MouseWheelEvent_1157628948
else:
  static :
    hint("Declaration of " & "struct_SDL_MouseWheelEvent" &
        " already exists, not redeclaring")
when not declared(X11EventHook):
  type
    X11EventHook* = X11EventHook_1157629494
else:
  static :
    hint("Declaration of " & "X11EventHook" & " already exists, not redeclaring")
when not declared(SystemTheme):
  type
    SystemTheme* = SystemTheme_1157628716
else:
  static :
    hint("Declaration of " & "SystemTheme" & " already exists, not redeclaring")
when not declared(struct_SDL_Vertex):
  type
    struct_SDL_Vertex* = struct_SDL_Vertex_1157629468
else:
  static :
    hint("Declaration of " & "struct_SDL_Vertex" &
        " already exists, not redeclaring")
when not declared(ClipboardDataCallback):
  type
    ClipboardDataCallback* = ClipboardDataCallback_1157628706
else:
  static :
    hint("Declaration of " & "ClipboardDataCallback" &
        " already exists, not redeclaring")
when not declared(GPUVertexInputState):
  type
    GPUVertexInputState* = GPUVertexInputState_1157629270
else:
  static :
    hint("Declaration of " & "GPUVertexInputState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GamepadType):
  type
    enum_SDL_GamepadType* = enum_SDL_GamepadType_1157628824
else:
  static :
    hint("Declaration of " & "enum_SDL_GamepadType" &
        " already exists, not redeclaring")
when not declared(KeyboardID):
  type
    KeyboardID* = KeyboardID_1157628856
else:
  static :
    hint("Declaration of " & "KeyboardID" & " already exists, not redeclaring")
when not declared(GPUBlitRegion):
  type
    GPUBlitRegion* = GPUBlitRegion_1157629234
else:
  static :
    hint("Declaration of " & "GPUBlitRegion" &
        " already exists, not redeclaring")
when not declared(MessageBoxData):
  type
    MessageBoxData* = MessageBoxData_1157629458
else:
  static :
    hint("Declaration of " & "MessageBoxData" &
        " already exists, not redeclaring")
when not declared(GamepadButtonEvent):
  type
    GamepadButtonEvent* = GamepadButtonEvent_1157628982
else:
  static :
    hint("Declaration of " & "GamepadButtonEvent" &
        " already exists, not redeclaring")
when not declared(intptr_t):
  type
    intptr_t* = intptr_t_1157628746
else:
  static :
    hint("Declaration of " & "intptr_t" & " already exists, not redeclaring")
when not declared(GPUBufferRegion):
  type
    GPUBufferRegion* = GPUBufferRegion_1157629242
else:
  static :
    hint("Declaration of " & "GPUBufferRegion" &
        " already exists, not redeclaring")
when not declared(free_func):
  type
    free_func* = free_func_1157628466
else:
  static :
    hint("Declaration of " & "free_func" & " already exists, not redeclaring")
when not declared(FPoint):
  type
    FPoint* = FPoint_1157628670
else:
  static :
    hint("Declaration of " & "FPoint" & " already exists, not redeclaring")
when not declared(struct_SDL_JoyBatteryEvent):
  type
    struct_SDL_JoyBatteryEvent* = struct_SDL_JoyBatteryEvent_1157628972
else:
  static :
    hint("Declaration of " & "struct_SDL_JoyBatteryEvent" &
        " already exists, not redeclaring")
when not declared(GPUSampleCount):
  type
    GPUSampleCount* = GPUSampleCount_1157629136
else:
  static :
    hint("Declaration of " & "GPUSampleCount" &
        " already exists, not redeclaring")
when not declared(HapticConstant):
  type
    HapticConstant* = HapticConstant_1157629360
else:
  static :
    hint("Declaration of " & "HapticConstant" &
        " already exists, not redeclaring")
when not declared(AppResult):
  type
    AppResult* = AppResult_1157629408
else:
  static :
    hint("Declaration of " & "AppResult" & " already exists, not redeclaring")
when not declared(GPUBufferLocation):
  type
    GPUBufferLocation* = GPUBufferLocation_1157629238
else:
  static :
    hint("Declaration of " & "GPUBufferLocation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DateTime):
  type
    struct_SDL_DateTime* = struct_SDL_DateTime_1157629500
else:
  static :
    hint("Declaration of " & "struct_SDL_DateTime" &
        " already exists, not redeclaring")
when not declared(AudioStream):
  type
    AudioStream* = AudioStream_1157628580
else:
  static :
    hint("Declaration of " & "AudioStream" & " already exists, not redeclaring")
when not declared(DisplayMode):
  type
    DisplayMode* = DisplayMode_1157628722
else:
  static :
    hint("Declaration of " & "DisplayMode" & " already exists, not redeclaring")
when not declared(HitTest):
  type
    HitTest* = HitTest_1157628770
else:
  static :
    hint("Declaration of " & "HitTest" & " already exists, not redeclaring")
when not declared(Capitalization):
  type
    Capitalization* = Capitalization_1157628864
else:
  static :
    hint("Declaration of " & "Capitalization" &
        " already exists, not redeclaring")
when not declared(MouseButtonEvent):
  type
    MouseButtonEvent* = MouseButtonEvent_1157628946
else:
  static :
    hint("Declaration of " & "MouseButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_SensorEvent):
  type
    struct_SDL_SensorEvent* = struct_SDL_SensorEvent_1157629040
else:
  static :
    hint("Declaration of " & "struct_SDL_SensorEvent" &
        " already exists, not redeclaring")
when not declared(Surface):
  type
    Surface* = Surface_1157628692
else:
  static :
    hint("Declaration of " & "Surface" & " already exists, not redeclaring")
when not declared(union_SDL_Event):
  type
    union_SDL_Event* = union_SDL_Event_1157629052
else:
  static :
    hint("Declaration of " & "union_SDL_Event" &
        " already exists, not redeclaring")
when not declared(enum_SDL_FlipMode):
  type
    enum_SDL_FlipMode* = enum_SDL_FlipMode_1157628686
else:
  static :
    hint("Declaration of " & "enum_SDL_FlipMode" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUGraphicsPipelineTargetInfo):
  type
    struct_SDL_GPUGraphicsPipelineTargetInfo* = struct_SDL_GPUGraphicsPipelineTargetInfo_1157629312
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUGraphicsPipelineTargetInfo" &
        " already exists, not redeclaring")
when not declared(EventFilter):
  type
    EventFilter* = EventFilter_1157629060
else:
  static :
    hint("Declaration of " & "EventFilter" & " already exists, not redeclaring")
when not declared(enum_SDL_DateFormat):
  type
    enum_SDL_DateFormat* = enum_SDL_DateFormat_1157629504
else:
  static :
    hint("Declaration of " & "enum_SDL_DateFormat" &
        " already exists, not redeclaring")
when not declared(enum_SDL_AudioFormat):
  type
    enum_SDL_AudioFormat* = enum_SDL_AudioFormat_1157628570
else:
  static :
    hint("Declaration of " & "enum_SDL_AudioFormat" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUBlendFactor):
  type
    enum_SDL_GPUBlendFactor* = enum_SDL_GPUBlendFactor_1157629186
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUBlendFactor" &
        " already exists, not redeclaring")
when not declared(GLContextResetNotification):
  type
    GLContextResetNotification* = GLContextResetNotification_1157628764
else:
  static :
    hint("Declaration of " & "GLContextResetNotification" &
        " already exists, not redeclaring")
when not declared(AppInit_func):
  type
    AppInit_func* = AppInit_func_1157629410
else:
  static :
    hint("Declaration of " & "AppInit_func" & " already exists, not redeclaring")
when not declared(PackedLayout):
  type
    PackedLayout* = PackedLayout_1157628614
else:
  static :
    hint("Declaration of " & "PackedLayout" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUBufferBinding):
  type
    struct_SDL_GPUBufferBinding* = struct_SDL_GPUBufferBinding_1157629336
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBufferBinding" &
        " already exists, not redeclaring")
when not declared(struct_SDL_InitState):
  type
    struct_SDL_InitState* = struct_SDL_InitState_1157628552
else:
  static :
    hint("Declaration of " & "struct_SDL_InitState" &
        " already exists, not redeclaring")
when not declared(BlendOperation):
  type
    BlendOperation* = BlendOperation_1157628590
else:
  static :
    hint("Declaration of " & "BlendOperation" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Surface):
  type
    struct_SDL_Surface* = struct_SDL_Surface_1157628690
else:
  static :
    hint("Declaration of " & "struct_SDL_Surface" &
        " already exists, not redeclaring")
when not declared(MouseID):
  type
    MouseID* = MouseID_1157628866
else:
  static :
    hint("Declaration of " & "MouseID" & " already exists, not redeclaring")
when not declared(TextInputEvent):
  type
    TextInputEvent* = TextInputEvent_1157628934
else:
  static :
    hint("Declaration of " & "TextInputEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUBlitRegion):
  type
    struct_SDL_GPUBlitRegion* = struct_SDL_GPUBlitRegion_1157629232
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUBlitRegion" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPURasterizerState):
  type
    struct_SDL_GPURasterizerState* = struct_SDL_GPURasterizerState_1157629296
else:
  static :
    hint("Declaration of " & "struct_SDL_GPURasterizerState" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUSamplerAddressMode):
  type
    enum_SDL_GPUSamplerAddressMode* = enum_SDL_GPUSamplerAddressMode_1157629200
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUSamplerAddressMode" &
        " already exists, not redeclaring")
when not declared(DropEvent):
  type
    DropEvent* = DropEvent_1157629034
else:
  static :
    hint("Declaration of " & "DropEvent" & " already exists, not redeclaring")
when not declared(enum_SDL_AppResult):
  type
    enum_SDL_AppResult* = enum_SDL_AppResult_1157629406
else:
  static :
    hint("Declaration of " & "enum_SDL_AppResult" &
        " already exists, not redeclaring")
when not declared(struct_SDL_DisplayEvent):
  type
    struct_SDL_DisplayEvent* = struct_SDL_DisplayEvent_1157628908
else:
  static :
    hint("Declaration of " & "struct_SDL_DisplayEvent" &
        " already exists, not redeclaring")
when not declared(PixelFormat):
  type
    PixelFormat* = PixelFormat_1157628618
else:
  static :
    hint("Declaration of " & "PixelFormat" & " already exists, not redeclaring")
when not declared(CameraPosition):
  type
    CameraPosition* = CameraPosition_1157628704
else:
  static :
    hint("Declaration of " & "CameraPosition" &
        " already exists, not redeclaring")
when not declared(GPUShaderStage):
  type
    GPUShaderStage* = GPUShaderStage_1157629150
else:
  static :
    hint("Declaration of " & "GPUShaderStage" &
        " already exists, not redeclaring")
when not declared(CameraSpec):
  type
    CameraSpec* = CameraSpec_1157628700
else:
  static :
    hint("Declaration of " & "CameraSpec" & " already exists, not redeclaring")
when not declared(Environment):
  type
    Environment* = Environment_1157628468
else:
  static :
    hint("Declaration of " & "Environment" & " already exists, not redeclaring")
when not declared(Joystick):
  type
    Joystick* = Joystick_1157628798
else:
  static :
    hint("Declaration of " & "Joystick" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUMultisampleState):
  type
    struct_SDL_GPUMultisampleState* = struct_SDL_GPUMultisampleState_1157629300
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUMultisampleState" &
        " already exists, not redeclaring")
when not declared(wchar_t):
  type
    wchar_t* = wchar_t_1157628474
else:
  static :
    hint("Declaration of " & "wchar_t" & " already exists, not redeclaring")
when not declared(GPUBlendOp):
  type
    GPUBlendOp* = GPUBlendOp_1157629184
else:
  static :
    hint("Declaration of " & "GPUBlendOp" & " already exists, not redeclaring")
when not declared(enum_SDL_IOWhence):
  type
    enum_SDL_IOWhence* = enum_SDL_IOWhence_1157628560
else:
  static :
    hint("Declaration of " & "enum_SDL_IOWhence" &
        " already exists, not redeclaring")
when not declared(JoyBallEvent):
  type
    JoyBallEvent* = JoyBallEvent_1157628958
else:
  static :
    hint("Declaration of " & "JoyBallEvent" & " already exists, not redeclaring")
when not declared(GPUTextureSamplerBinding):
  type
    GPUTextureSamplerBinding* = GPUTextureSamplerBinding_1157629342
else:
  static :
    hint("Declaration of " & "GPUTextureSamplerBinding" &
        " already exists, not redeclaring")
when not declared(Sint16):
  type
    Sint16* = Sint16_1157628438
else:
  static :
    hint("Declaration of " & "Sint16" & " already exists, not redeclaring")
when not declared(Folder):
  type
    Folder* = Folder_1157629064
else:
  static :
    hint("Declaration of " & "Folder" & " already exists, not redeclaring")
when not declared(struct_SDL_GPUViewport):
  type
    struct_SDL_GPUViewport* = struct_SDL_GPUViewport_1157629212
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUViewport" &
        " already exists, not redeclaring")
when not declared(AsyncIOResult):
  type
    AsyncIOResult* = AsyncIOResult_1157628498
else:
  static :
    hint("Declaration of " & "AsyncIOResult" &
        " already exists, not redeclaring")
when not declared(Sint8):
  type
    Sint8* = Sint8_1157628434
else:
  static :
    hint("Declaration of " & "Sint8" & " already exists, not redeclaring")
when not declared(Process):
  type
    Process* = Process_1157629462
else:
  static :
    hint("Declaration of " & "Process" & " already exists, not redeclaring")
when not declared(EGLSurface):
  type
    EGLSurface* = EGLSurface_1157628742
else:
  static :
    hint("Declaration of " & "EGLSurface" & " already exists, not redeclaring")
when not declared(struct_SDL_MouseDeviceEvent):
  type
    struct_SDL_MouseDeviceEvent* = struct_SDL_MouseDeviceEvent_1157628936
else:
  static :
    hint("Declaration of " & "struct_SDL_MouseDeviceEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_HapticCustom):
  type
    struct_SDL_HapticCustom* = struct_SDL_HapticCustom_1157629378
else:
  static :
    hint("Declaration of " & "struct_SDL_HapticCustom" &
        " already exists, not redeclaring")
when not declared(struct_SDL_Color):
  type
    struct_SDL_Color* = struct_SDL_Color_1157628648
else:
  static :
    hint("Declaration of " & "struct_SDL_Color" &
        " already exists, not redeclaring")
when not declared(enum_SDL_DisplayOrientation):
  type
    enum_SDL_DisplayOrientation* = enum_SDL_DisplayOrientation_1157628724
else:
  static :
    hint("Declaration of " & "enum_SDL_DisplayOrientation" &
        " already exists, not redeclaring")
when not declared(enum_SDL_GPUShaderStage):
  type
    enum_SDL_GPUShaderStage* = enum_SDL_GPUShaderStage_1157629148
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUShaderStage" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUVertexAttribute):
  type
    struct_SDL_GPUVertexAttribute* = struct_SDL_GPUVertexAttribute_1157629264
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUVertexAttribute" &
        " already exists, not redeclaring")
when not declared(GamepadAxis):
  type
    GamepadAxis* = GamepadAxis_1157628838
else:
  static :
    hint("Declaration of " & "GamepadAxis" & " already exists, not redeclaring")
when not declared(struct_SDL_AudioSpec):
  type
    struct_SDL_AudioSpec* = struct_SDL_AudioSpec_1157628576
else:
  static :
    hint("Declaration of " & "struct_SDL_AudioSpec" &
        " already exists, not redeclaring")
when not declared(GPURasterizerState):
  type
    GPURasterizerState* = GPURasterizerState_1157629298
else:
  static :
    hint("Declaration of " & "GPURasterizerState" &
        " already exists, not redeclaring")
when not declared(CameraID):
  type
    CameraID* = CameraID_1157628694
else:
  static :
    hint("Declaration of " & "CameraID" & " already exists, not redeclaring")
when not declared(enum_SDL_GPUCompareOp):
  type
    enum_SDL_GPUCompareOp* = enum_SDL_GPUCompareOp_1157629174
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUCompareOp" &
        " already exists, not redeclaring")
when not declared(RenderEvent):
  type
    RenderEvent* = RenderEvent_1157629006
else:
  static :
    hint("Declaration of " & "RenderEvent" & " already exists, not redeclaring")
when not declared(Sint32):
  type
    Sint32* = Sint32_1157628442
else:
  static :
    hint("Declaration of " & "Sint32" & " already exists, not redeclaring")
when not declared(enum_SDL_TextInputType):
  type
    enum_SDL_TextInputType* = enum_SDL_TextInputType_1157628858
else:
  static :
    hint("Declaration of " & "enum_SDL_TextInputType" &
        " already exists, not redeclaring")
when not declared(GPUSamplerMipmapMode):
  type
    GPUSamplerMipmapMode* = GPUSamplerMipmapMode_1157629198
else:
  static :
    hint("Declaration of " & "GPUSamplerMipmapMode" &
        " already exists, not redeclaring")
when not declared(struct_SDL_CameraDeviceEvent):
  type
    struct_SDL_CameraDeviceEvent* = struct_SDL_CameraDeviceEvent_1157629000
else:
  static :
    hint("Declaration of " & "struct_SDL_CameraDeviceEvent" &
        " already exists, not redeclaring")
when not declared(EnumerateDirectoryCallback):
  type
    EnumerateDirectoryCallback* = EnumerateDirectoryCallback_1157629080
else:
  static :
    hint("Declaration of " & "EnumerateDirectoryCallback" &
        " already exists, not redeclaring")
when not declared(enum_SDL_hid_bus_type):
  type
    enum_SDL_hid_bus_type* = enum_SDL_hid_bus_type_1157629390
else:
  static :
    hint("Declaration of " & "enum_SDL_hid_bus_type" &
        " already exists, not redeclaring")
when not declared(GPUTextureFormat):
  type
    GPUTextureFormat* = GPUTextureFormat_1157629126
else:
  static :
    hint("Declaration of " & "GPUTextureFormat" &
        " already exists, not redeclaring")
when not declared(Semaphore):
  type
    Semaphore* = Semaphore_1157628544
else:
  static :
    hint("Declaration of " & "Semaphore" & " already exists, not redeclaring")
when not declared(GPUShaderFormat):
  type
    GPUShaderFormat* = GPUShaderFormat_1157629152
else:
  static :
    hint("Declaration of " & "GPUShaderFormat" &
        " already exists, not redeclaring")
when not declared(RWLock):
  type
    RWLock* = RWLock_1157628542
else:
  static :
    hint("Declaration of " & "RWLock" & " already exists, not redeclaring")
when not declared(AudioPostmixCallback):
  type
    AudioPostmixCallback* = AudioPostmixCallback_1157628584
else:
  static :
    hint("Declaration of " & "AudioPostmixCallback" &
        " already exists, not redeclaring")
when not declared(struct_SDL_TextEditingEvent):
  type
    struct_SDL_TextEditingEvent* = struct_SDL_TextEditingEvent_1157628924
else:
  static :
    hint("Declaration of " & "struct_SDL_TextEditingEvent" &
        " already exists, not redeclaring")
when not declared(HapticCondition):
  type
    HapticCondition* = HapticCondition_1157629368
else:
  static :
    hint("Declaration of " & "HapticCondition" &
        " already exists, not redeclaring")
when not declared(GLProfile_typedef):
  type
    GLProfile_typedef* = GLProfile_typedef_1157628758
else:
  static :
    hint("Declaration of " & "GLProfile_typedef" &
        " already exists, not redeclaring")
when not declared(ColorPrimaries):
  type
    ColorPrimaries* = ColorPrimaries_1157628630
else:
  static :
    hint("Declaration of " & "ColorPrimaries" &
        " already exists, not redeclaring")
when not declared(Point):
  type
    Point* = Point_1157628666
else:
  static :
    hint("Declaration of " & "Point" & " already exists, not redeclaring")
when not declared(struct_SDL_GamepadTouchpadEvent):
  type
    struct_SDL_GamepadTouchpadEvent* = struct_SDL_GamepadTouchpadEvent_1157628988
else:
  static :
    hint("Declaration of " & "struct_SDL_GamepadTouchpadEvent" &
        " already exists, not redeclaring")
when not declared(JoystickID):
  type
    JoystickID* = JoystickID_1157628800
else:
  static :
    hint("Declaration of " & "JoystickID" & " already exists, not redeclaring")
when not declared(HapticCustom):
  type
    HapticCustom* = HapticCustom_1157629380
else:
  static :
    hint("Declaration of " & "HapticCustom" & " already exists, not redeclaring")
when not declared(EGLDisplay):
  type
    EGLDisplay* = EGLDisplay_1157628738
else:
  static :
    hint("Declaration of " & "EGLDisplay" & " already exists, not redeclaring")
when not declared(JoyButtonEvent):
  type
    JoyButtonEvent* = JoyButtonEvent_1157628966
else:
  static :
    hint("Declaration of " & "JoyButtonEvent" &
        " already exists, not redeclaring")
when not declared(struct_SDL_MessageBoxColorScheme):
  type
    struct_SDL_MessageBoxColorScheme* = struct_SDL_MessageBoxColorScheme_1157629452
else:
  static :
    hint("Declaration of " & "struct_SDL_MessageBoxColorScheme" &
        " already exists, not redeclaring")
when not declared(GPUColorComponentFlags):
  type
    GPUColorComponentFlags* = GPUColorComponentFlags_1157629190
else:
  static :
    hint("Declaration of " & "GPUColorComponentFlags" &
        " already exists, not redeclaring")
when not declared(alignment_test):
  type
    alignment_test* = alignment_test_1157628454
else:
  static :
    hint("Declaration of " & "alignment_test" &
        " already exists, not redeclaring")
when not declared(AtomicInt):
  type
    AtomicInt* = AtomicInt_1157628510
else:
  static :
    hint("Declaration of " & "AtomicInt" & " already exists, not redeclaring")
when not declared(enum_SDL_AssertState):
  type
    enum_SDL_AssertState* = enum_SDL_AssertState_1157628480
else:
  static :
    hint("Declaration of " & "enum_SDL_AssertState" &
        " already exists, not redeclaring")
when not declared(Camera):
  type
    Camera* = Camera_1157628696
else:
  static :
    hint("Declaration of " & "Camera" & " already exists, not redeclaring")
when not declared(enum_SDL_GPUStoreOp):
  type
    enum_SDL_GPUStoreOp* = enum_SDL_GPUStoreOp_1157629116
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUStoreOp" &
        " already exists, not redeclaring")
when not declared(PenAxis):
  type
    PenAxis* = PenAxis_1157628886
else:
  static :
    hint("Declaration of " & "PenAxis" & " already exists, not redeclaring")
when not declared(struct_SDL_PenAxisEvent):
  type
    struct_SDL_PenAxisEvent* = struct_SDL_PenAxisEvent_1157629028
else:
  static :
    hint("Declaration of " & "struct_SDL_PenAxisEvent" &
        " already exists, not redeclaring")
when not declared(GPULoadOp):
  type
    GPULoadOp* = GPULoadOp_1157629114
else:
  static :
    hint("Declaration of " & "GPULoadOp" & " already exists, not redeclaring")
when not declared(AssertState):
  type
    AssertState* = AssertState_1157628482
else:
  static :
    hint("Declaration of " & "AssertState" & " already exists, not redeclaring")
when not declared(struct_SDL_FColor):
  type
    struct_SDL_FColor* = struct_SDL_FColor_1157628652
else:
  static :
    hint("Declaration of " & "struct_SDL_FColor" &
        " already exists, not redeclaring")
when not declared(FingerID):
  type
    FingerID* = FingerID_1157628890
else:
  static :
    hint("Declaration of " & "FingerID" & " already exists, not redeclaring")
when not declared(enum_SDL_GPUFrontFace):
  type
    enum_SDL_GPUFrontFace* = enum_SDL_GPUFrontFace_1157629170
else:
  static :
    hint("Declaration of " & "enum_SDL_GPUFrontFace" &
        " already exists, not redeclaring")
when not declared(GPUIndirectDrawCommand):
  type
    GPUIndirectDrawCommand* = GPUIndirectDrawCommand_1157629246
else:
  static :
    hint("Declaration of " & "GPUIndirectDrawCommand" &
        " already exists, not redeclaring")
when not declared(struct_SDL_GPUVertexBufferDescription):
  type
    struct_SDL_GPUVertexBufferDescription* = struct_SDL_GPUVertexBufferDescription_1157629260
else:
  static :
    hint("Declaration of " & "struct_SDL_GPUVertexBufferDescription" &
        " already exists, not redeclaring")
when not declared(PLATFORM_LINUX):
  when 1 is static:
    const
      PLATFORM_LINUX* = 1    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_platform_defines.h:101:9
  else:
    let PLATFORM_LINUX* = 1  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_platform_defines.h:101:9
else:
  static :
    hint("Declaration of " & "PLATFORM_LINUX" &
        " already exists, not redeclaring")
when not declared(PLATFORM_UNIX):
  when 1 is static:
    const
      PLATFORM_UNIX* = 1     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_platform_defines.h:126:9
  else:
    let PLATFORM_UNIX* = 1   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_platform_defines.h:126:9
else:
  static :
    hint("Declaration of " & "PLATFORM_UNIX" &
        " already exists, not redeclaring")
when not declared(SIZE_MAX_const):
  when cast[culong](18446744073709551615'u) is static:
    const
      SIZE_MAX_const* = cast[culong](18446744073709551615'u) ## Generated based on /usr/include/stdint.h:216:11
  else:
    let SIZE_MAX_const* = cast[culong](18446744073709551615'u) ## Generated based on /usr/include/stdint.h:216:11
else:
  static :
    hint("Declaration of " & "SIZE_MAX_const" &
        " already exists, not redeclaring")
when not declared(FLT_EPSILON):
  when 0.0000001192092895507812 is static:
    const
      FLT_EPSILON* = 0.0000001192092895507812 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:435:9
  else:
    let FLT_EPSILON* = 0.0000001192092895507812 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:435:9
else:
  static :
    hint("Declaration of " & "FLT_EPSILON" & " already exists, not redeclaring")
when not declared(PRIs64):
  when PRId64 is typedesc:
    type
      PRIs64* = PRId64       ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:447:9
  else:
    when PRId64 is static:
      const
        PRIs64* = PRId64     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:447:9
    else:
      let PRIs64* = PRId64   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:447:9
else:
  static :
    hint("Declaration of " & "PRIs64" & " already exists, not redeclaring")
when not declared(PRId32):
  when "d" is static:
    const
      PRId32* = "d"          ## Generated based on /usr/include/inttypes.h:56:10
  else:
    let PRId32* = "d"        ## Generated based on /usr/include/inttypes.h:56:10
else:
  static :
    hint("Declaration of " & "PRId32" & " already exists, not redeclaring")
when not declared(PRIu32_const):
  when "u" is static:
    const
      PRIu32_const* = "u"    ## Generated based on /usr/include/inttypes.h:104:10
  else:
    let PRIu32_const* = "u"  ## Generated based on /usr/include/inttypes.h:104:10
else:
  static :
    hint("Declaration of " & "PRIu32_const" & " already exists, not redeclaring")
when not declared(PRIx32_const_0FB24FBC):
  when "x" is static:
    const
      PRIx32_const_0FB24FBC* = "x" ## Generated based on /usr/include/inttypes.h:120:10
  else:
    let PRIx32_const_0FB24FBC* = "x" ## Generated based on /usr/include/inttypes.h:120:10
else:
  static :
    hint("Declaration of " & "PRIx32_const_0FB24FBC" &
        " already exists, not redeclaring")
when not declared(PRIX32_const_4AC38F88):
  when "X" is static:
    const
      PRIX32_const_4AC38F88* = "X" ## Generated based on /usr/include/inttypes.h:136:10
  else:
    let PRIX32_const_4AC38F88* = "X" ## Generated based on /usr/include/inttypes.h:136:10
else:
  static :
    hint("Declaration of " & "PRIX32_const_4AC38F88" &
        " already exists, not redeclaring")
when not declared(PRILL_PREFIX):
  when "ll" is static:
    const
      PRILL_PREFIX* = "ll"   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:520:9
  else:
    let PRILL_PREFIX* = "ll" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:520:9
else:
  static :
    hint("Declaration of " & "PRILL_PREFIX" & " already exists, not redeclaring")
when not declared(memcpy):
  proc memcpy*(dst: pointer; src: pointer; len: csize_t): pointer {.cdecl,
      importc: "SDL_memcpy".}
else:
  static :
    hint("Declaration of " & "memcpy" & " already exists, not redeclaring")
when not declared(memcpy_proc):
  proc memcpy_proc*(compiler_dest: pointer; compiler_src: pointer;
                    compiler_n: culong): pointer {.cdecl, importc: "memcpy".}
else:
  static :
    hint("Declaration of " & "memcpy_proc" & " already exists, not redeclaring")
when not declared(memmove):
  proc memmove*(dst: pointer; src: pointer; len: csize_t): pointer {.cdecl,
      importc: "SDL_memmove".}
else:
  static :
    hint("Declaration of " & "memmove" & " already exists, not redeclaring")
when not declared(memmove_proc):
  proc memmove_proc*(compiler_dest: pointer; compiler_src: pointer;
                     compiler_n: culong): pointer {.cdecl, importc: "memmove".}
else:
  static :
    hint("Declaration of " & "memmove_proc" & " already exists, not redeclaring")
when not declared(memset):
  proc memset*(dst: pointer; c: cint; len: csize_t): pointer {.cdecl,
      importc: "SDL_memset".}
else:
  static :
    hint("Declaration of " & "memset" & " already exists, not redeclaring")
when not declared(memset_proc):
  proc memset_proc*(compiler_s: pointer; compiler_c: cint; compiler_n: culong): pointer {.
      cdecl, importc: "memset".}
else:
  static :
    hint("Declaration of " & "memset_proc" & " already exists, not redeclaring")
when not declared(INVALID_UNICODE_CODEPOINT):
  when 65533 is static:
    const
      INVALID_UNICODE_CODEPOINT* = 65533 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2551:9
  else:
    let INVALID_UNICODE_CODEPOINT* = 65533 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2551:9
else:
  static :
    hint("Declaration of " & "INVALID_UNICODE_CODEPOINT" &
        " already exists, not redeclaring")
when not declared(PI_D):
  when 3.141592653589793 is static:
    const
      PI_D* = 3.141592653589793 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2857:9
  else:
    let PI_D* = 3.141592653589793 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2857:9
else:
  static :
    hint("Declaration of " & "PI_D" & " already exists, not redeclaring")
when not declared(PI_F):
  when 3.141592653589793 is static:
    const
      PI_F* = 3.141592653589793 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2860:9
  else:
    let PI_F* = 3.141592653589793 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_stdinc.h:2860:9
else:
  static :
    hint("Declaration of " & "PI_F" & " already exists, not redeclaring")
when not declared(ASSERT_LEVEL):
  when 2 is static:
    const
      ASSERT_LEVEL* = 2      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:96:9
  else:
    let ASSERT_LEVEL* = 2    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:96:9
else:
  static :
    hint("Declaration of " & "ASSERT_LEVEL" & " already exists, not redeclaring")
when not declared(NULL_WHILE_LOOP_CONDITION):
  when 0 is static:
    const
      NULL_WHILE_LOOP_CONDITION* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:184:9
  else:
    let NULL_WHILE_LOOP_CONDITION* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_assert.h:184:9
else:
  static :
    hint("Declaration of " & "NULL_WHILE_LOOP_CONDITION" &
        " already exists, not redeclaring")
when not declared(LIL_ENDIAN):
  when 1234 is static:
    const
      LIL_ENDIAN* = 1234     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_endian.h:54:9
  else:
    let LIL_ENDIAN* = 1234   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_endian.h:54:9
else:
  static :
    hint("Declaration of " & "LIL_ENDIAN" & " already exists, not redeclaring")
when not declared(BIG_ENDIAN):
  when 4321 is static:
    const
      BIG_ENDIAN* = 4321     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_endian.h:55:9
  else:
    let BIG_ENDIAN* = 4321   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_endian.h:55:9
else:
  static :
    hint("Declaration of " & "BIG_ENDIAN" & " already exists, not redeclaring")
when not declared(BeginThreadFunction):
  when NULL is typedesc:
    type
      BeginThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:278:13
  else:
    when NULL is static:
      const
        BeginThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:278:13
    else:
      let BeginThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:278:13
else:
  static :
    hint("Declaration of " & "BeginThreadFunction" &
        " already exists, not redeclaring")
when not declared(EndThreadFunction):
  when NULL is typedesc:
    type
      EndThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:284:13
  else:
    when NULL is static:
      const
        EndThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:284:13
    else:
      let EndThreadFunction* = NULL ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:284:13
else:
  static :
    hint("Declaration of " & "EndThreadFunction" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER):
  when "SDL.thread.create.entry_function" is static:
    const
      PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER* = "SDL.thread.create.entry_function" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:322:9
  else:
    let PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER* = "SDL.thread.create.entry_function" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:322:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_ENTRY_FUNCTION_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_NAME_STRING):
  when "SDL.thread.create.name" is static:
    const
      PROP_THREAD_CREATE_NAME_STRING* = "SDL.thread.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:323:9
  else:
    let PROP_THREAD_CREATE_NAME_STRING* = "SDL.thread.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:323:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_USERDATA_POINTER):
  when "SDL.thread.create.userdata" is static:
    const
      PROP_THREAD_CREATE_USERDATA_POINTER* = "SDL.thread.create.userdata" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:324:9
  else:
    let PROP_THREAD_CREATE_USERDATA_POINTER* = "SDL.thread.create.userdata" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:324:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_USERDATA_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_THREAD_CREATE_STACKSIZE_NUMBER):
  when "SDL.thread.create.stacksize" is static:
    const
      PROP_THREAD_CREATE_STACKSIZE_NUMBER* = "SDL.thread.create.stacksize" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:325:9
  else:
    let PROP_THREAD_CREATE_STACKSIZE_NUMBER* = "SDL.thread.create.stacksize" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_thread.h:325:9
else:
  static :
    hint("Declaration of " & "PROP_THREAD_CREATE_STACKSIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_WINDOWS_HANDLE_POINTER):
  when "SDL.iostream.windows.handle" is static:
    const
      PROP_IOSTREAM_WINDOWS_HANDLE_POINTER* = "SDL.iostream.windows.handle" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:274:9
  else:
    let PROP_IOSTREAM_WINDOWS_HANDLE_POINTER* = "SDL.iostream.windows.handle" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:274:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_WINDOWS_HANDLE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_STDIO_FILE_POINTER):
  when "SDL.iostream.stdio.file" is static:
    const
      PROP_IOSTREAM_STDIO_FILE_POINTER* = "SDL.iostream.stdio.file" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:275:9
  else:
    let PROP_IOSTREAM_STDIO_FILE_POINTER* = "SDL.iostream.stdio.file" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:275:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_STDIO_FILE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER):
  when "SDL.iostream.file_descriptor" is static:
    const
      PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER* = "SDL.iostream.file_descriptor" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:276:9
  else:
    let PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER* = "SDL.iostream.file_descriptor" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:276:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_FILE_DESCRIPTOR_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_ANDROID_AASSET_POINTER):
  when "SDL.iostream.android.aasset" is static:
    const
      PROP_IOSTREAM_ANDROID_AASSET_POINTER* = "SDL.iostream.android.aasset" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:277:9
  else:
    let PROP_IOSTREAM_ANDROID_AASSET_POINTER* = "SDL.iostream.android.aasset" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:277:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_ANDROID_AASSET_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_MEMORY_POINTER):
  when "SDL.iostream.memory.base" is static:
    const
      PROP_IOSTREAM_MEMORY_POINTER* = "SDL.iostream.memory.base" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:318:9
  else:
    let PROP_IOSTREAM_MEMORY_POINTER* = "SDL.iostream.memory.base" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:318:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_MEMORY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_MEMORY_SIZE_NUMBER):
  when "SDL.iostream.memory.size" is static:
    const
      PROP_IOSTREAM_MEMORY_SIZE_NUMBER* = "SDL.iostream.memory.size" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:319:9
  else:
    let PROP_IOSTREAM_MEMORY_SIZE_NUMBER* = "SDL.iostream.memory.size" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:319:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_MEMORY_SIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER):
  when "SDL.iostream.dynamic.memory" is static:
    const
      PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER* = "SDL.iostream.dynamic.memory" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:388:9
  else:
    let PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER* = "SDL.iostream.dynamic.memory" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:388:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_DYNAMIC_MEMORY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER):
  when "SDL.iostream.dynamic.chunksize" is static:
    const
      PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER* = "SDL.iostream.dynamic.chunksize" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:389:9
  else:
    let PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER* = "SDL.iostream.dynamic.chunksize" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_iostream.h:389:9
else:
  static :
    hint("Declaration of " & "PROP_IOSTREAM_DYNAMIC_CHUNKSIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(AUDIO_MASK_BITSIZE):
  when cast[cuint](255'i64) is static:
    const
      AUDIO_MASK_BITSIZE* = cast[cuint](255'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:145:9
  else:
    let AUDIO_MASK_BITSIZE* = cast[cuint](255'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_audio.h:145:9
else:
  static :
    hint("Declaration of " & "AUDIO_MASK_BITSIZE" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_NONE):
  when cast[cuint](0'i64) is static:
    const
      BLENDMODE_NONE* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:54:9
  else:
    let BLENDMODE_NONE* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:54:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_NONE" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_BLEND):
  when cast[cuint](1'i64) is static:
    const
      BLENDMODE_BLEND* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:55:9
  else:
    let BLENDMODE_BLEND* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:55:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_BLEND" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_BLEND_PREMULTIPLIED):
  when cast[cuint](16'i64) is static:
    const
      BLENDMODE_BLEND_PREMULTIPLIED* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:56:9
  else:
    let BLENDMODE_BLEND_PREMULTIPLIED* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:56:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_BLEND_PREMULTIPLIED" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_ADD):
  when cast[cuint](2'i64) is static:
    const
      BLENDMODE_ADD* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:57:9
  else:
    let BLENDMODE_ADD* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:57:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_ADD" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_ADD_PREMULTIPLIED):
  when cast[cuint](32'i64) is static:
    const
      BLENDMODE_ADD_PREMULTIPLIED* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:58:9
  else:
    let BLENDMODE_ADD_PREMULTIPLIED* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:58:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_ADD_PREMULTIPLIED" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_MOD):
  when cast[cuint](4'i64) is static:
    const
      BLENDMODE_MOD* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:59:9
  else:
    let BLENDMODE_MOD* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:59:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_MOD" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_MUL):
  when cast[cuint](8'i64) is static:
    const
      BLENDMODE_MUL* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:60:9
  else:
    let BLENDMODE_MUL* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:60:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_MUL" &
        " already exists, not redeclaring")
when not declared(BLENDMODE_INVALID):
  when cast[cuint](2147483647'i64) is static:
    const
      BLENDMODE_INVALID* = cast[cuint](2147483647'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:61:9
  else:
    let BLENDMODE_INVALID* = cast[cuint](2147483647'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_blendmode.h:61:9
else:
  static :
    hint("Declaration of " & "BLENDMODE_INVALID" &
        " already exists, not redeclaring")
when not declared(ALPHA_OPAQUE):
  when 255 is static:
    const
      ALPHA_OPAQUE* = 255    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:48:9
  else:
    let ALPHA_OPAQUE* = 255  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:48:9
else:
  static :
    hint("Declaration of " & "ALPHA_OPAQUE" & " already exists, not redeclaring")
when not declared(ALPHA_OPAQUE_FLOAT):
  when 1.0 is static:
    const
      ALPHA_OPAQUE_FLOAT* = 1.0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:57:9
  else:
    let ALPHA_OPAQUE_FLOAT* = 1.0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:57:9
else:
  static :
    hint("Declaration of " & "ALPHA_OPAQUE_FLOAT" &
        " already exists, not redeclaring")
when not declared(ALPHA_TRANSPARENT):
  when 0 is static:
    const
      ALPHA_TRANSPARENT* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:66:9
  else:
    let ALPHA_TRANSPARENT* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:66:9
else:
  static :
    hint("Declaration of " & "ALPHA_TRANSPARENT" &
        " already exists, not redeclaring")
when not declared(ALPHA_TRANSPARENT_FLOAT):
  when 0.0 is static:
    const
      ALPHA_TRANSPARENT_FLOAT* = 0.0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:75:9
  else:
    let ALPHA_TRANSPARENT_FLOAT* = 0.0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_pixels.h:75:9
else:
  static :
    hint("Declaration of " & "ALPHA_TRANSPARENT_FLOAT" &
        " already exists, not redeclaring")
when not declared(SURFACE_PREALLOCATED):
  when cast[cuint](1'i64) is static:
    const
      SURFACE_PREALLOCATED* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:66:9
  else:
    let SURFACE_PREALLOCATED* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:66:9
else:
  static :
    hint("Declaration of " & "SURFACE_PREALLOCATED" &
        " already exists, not redeclaring")
when not declared(SURFACE_LOCK_NEEDED):
  when cast[cuint](2'i64) is static:
    const
      SURFACE_LOCK_NEEDED* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:67:9
  else:
    let SURFACE_LOCK_NEEDED* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:67:9
else:
  static :
    hint("Declaration of " & "SURFACE_LOCK_NEEDED" &
        " already exists, not redeclaring")
when not declared(SURFACE_LOCKED):
  when cast[cuint](4'i64) is static:
    const
      SURFACE_LOCKED* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:68:9
  else:
    let SURFACE_LOCKED* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:68:9
else:
  static :
    hint("Declaration of " & "SURFACE_LOCKED" &
        " already exists, not redeclaring")
when not declared(SURFACE_SIMD_ALIGNED):
  when cast[cuint](8'i64) is static:
    const
      SURFACE_SIMD_ALIGNED* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:69:9
  else:
    let SURFACE_SIMD_ALIGNED* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:69:9
else:
  static :
    hint("Declaration of " & "SURFACE_SIMD_ALIGNED" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_SDR_WHITE_POINT_FLOAT):
  when "SDL.surface.SDR_white_point" is static:
    const
      PROP_SURFACE_SDR_WHITE_POINT_FLOAT* = "SDL.surface.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:233:9
  else:
    let PROP_SURFACE_SDR_WHITE_POINT_FLOAT* = "SDL.surface.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:233:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_HDR_HEADROOM_FLOAT):
  when "SDL.surface.HDR_headroom" is static:
    const
      PROP_SURFACE_HDR_HEADROOM_FLOAT* = "SDL.surface.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:234:9
  else:
    let PROP_SURFACE_HDR_HEADROOM_FLOAT* = "SDL.surface.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:234:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_SURFACE_TONEMAP_OPERATOR_STRING):
  when "SDL.surface.tonemap" is static:
    const
      PROP_SURFACE_TONEMAP_OPERATOR_STRING* = "SDL.surface.tonemap" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:235:9
  else:
    let PROP_SURFACE_TONEMAP_OPERATOR_STRING* = "SDL.surface.tonemap" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_surface.h:235:9
else:
  static :
    hint("Declaration of " & "PROP_SURFACE_TONEMAP_OPERATOR_STRING" &
        " already exists, not redeclaring")
when not declared(CACHELINE_SIZE):
  when 128 is static:
    const
      CACHELINE_SIZE* = 128  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_cpuinfo.h:54:9
  else:
    let CACHELINE_SIZE* = 128 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_cpuinfo.h:54:9
else:
  static :
    hint("Declaration of " & "CACHELINE_SIZE" &
        " already exists, not redeclaring")
when not declared(PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER):
  when "SDL.video.wayland.wl_display" is static:
    const
      PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER* = "SDL.video.wayland.wl_display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:101:9
  else:
    let PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER* = "SDL.video.wayland.wl_display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:101:9
else:
  static :
    hint("Declaration of " & "PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(WINDOWPOS_UNDEFINED_MASK):
  when cast[cuint](536805376'i64) is static:
    const
      WINDOWPOS_UNDEFINED_MASK* = cast[cuint](536805376'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:213:9
  else:
    let WINDOWPOS_UNDEFINED_MASK* = cast[cuint](536805376'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:213:9
else:
  static :
    hint("Declaration of " & "WINDOWPOS_UNDEFINED_MASK" &
        " already exists, not redeclaring")
when not declared(WINDOWPOS_CENTERED_MASK):
  when cast[cuint](805240832'i64) is static:
    const
      WINDOWPOS_CENTERED_MASK* = cast[cuint](805240832'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:224:9
  else:
    let WINDOWPOS_CENTERED_MASK* = cast[cuint](805240832'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:224:9
else:
  static :
    hint("Declaration of " & "WINDOWPOS_CENTERED_MASK" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_CORE):
  when 1 is static:
    const
      GL_CONTEXT_PROFILE_CORE* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:374:9
  else:
    let GL_CONTEXT_PROFILE_CORE* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:374:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_CORE" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_COMPATIBILITY):
  when 2 is static:
    const
      GL_CONTEXT_PROFILE_COMPATIBILITY* = 2 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:375:9
  else:
    let GL_CONTEXT_PROFILE_COMPATIBILITY* = 2 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:375:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_COMPATIBILITY" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_PROFILE_ES):
  when 4 is static:
    const
      GL_CONTEXT_PROFILE_ES* = 4 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:376:9
  else:
    let GL_CONTEXT_PROFILE_ES* = 4 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:376:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_PROFILE_ES" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_DEBUG_FLAG):
  when 1 is static:
    const
      GL_CONTEXT_DEBUG_FLAG* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:386:9
  else:
    let GL_CONTEXT_DEBUG_FLAG* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:386:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_DEBUG_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_FORWARD_COMPATIBLE_FLAG):
  when 2 is static:
    const
      GL_CONTEXT_FORWARD_COMPATIBLE_FLAG* = 2 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:387:9
  else:
    let GL_CONTEXT_FORWARD_COMPATIBLE_FLAG* = 2 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:387:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_FORWARD_COMPATIBLE_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_ROBUST_ACCESS_FLAG):
  when 4 is static:
    const
      GL_CONTEXT_ROBUST_ACCESS_FLAG* = 4 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:388:9
  else:
    let GL_CONTEXT_ROBUST_ACCESS_FLAG* = 4 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:388:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_ROBUST_ACCESS_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_ISOLATION_FLAG):
  when 8 is static:
    const
      GL_CONTEXT_RESET_ISOLATION_FLAG* = 8 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:389:9
  else:
    let GL_CONTEXT_RESET_ISOLATION_FLAG* = 8 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:389:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_ISOLATION_FLAG" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RELEASE_BEHAVIOR_NONE):
  when 0 is static:
    const
      GL_CONTEXT_RELEASE_BEHAVIOR_NONE* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:400:9
  else:
    let GL_CONTEXT_RELEASE_BEHAVIOR_NONE* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:400:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RELEASE_BEHAVIOR_NONE" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH):
  when 1 is static:
    const
      GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:401:9
  else:
    let GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:401:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_NO_NOTIFICATION):
  when 0 is static:
    const
      GL_CONTEXT_RESET_NO_NOTIFICATION* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:411:9
  else:
    let GL_CONTEXT_RESET_NO_NOTIFICATION* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:411:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_NO_NOTIFICATION" &
        " already exists, not redeclaring")
when not declared(GL_CONTEXT_RESET_LOSE_CONTEXT):
  when 1 is static:
    const
      GL_CONTEXT_RESET_LOSE_CONTEXT* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:412:9
  else:
    let GL_CONTEXT_RESET_LOSE_CONTEXT* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:412:9
else:
  static :
    hint("Declaration of " & "GL_CONTEXT_RESET_LOSE_CONTEXT" &
        " already exists, not redeclaring")
when not declared(PROP_DISPLAY_HDR_ENABLED_BOOLEAN):
  when "SDL.display.HDR_enabled" is static:
    const
      PROP_DISPLAY_HDR_ENABLED_BOOLEAN* = "SDL.display.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:538:9
  else:
    let PROP_DISPLAY_HDR_ENABLED_BOOLEAN* = "SDL.display.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:538:9
else:
  static :
    hint("Declaration of " & "PROP_DISPLAY_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER):
  when "SDL.display.KMSDRM.panel_orientation" is static:
    const
      PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER* = "SDL.display.KMSDRM.panel_orientation" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:539:9
  else:
    let PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER* = "SDL.display.KMSDRM.panel_orientation" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:539:9
else:
  static :
    hint("Declaration of " & "PROP_DISPLAY_KMSDRM_PANEL_ORIENTATION_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN):
  when "SDL.window.create.always_on_top" is static:
    const
      PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN* = "SDL.window.create.always_on_top" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1208:9
  else:
    let PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN* = "SDL.window.create.always_on_top" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1208:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN):
  when "SDL.window.create.borderless" is static:
    const
      PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN* = "SDL.window.create.borderless" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1209:9
  else:
    let PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN* = "SDL.window.create.borderless" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1209:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN):
  when "SDL.window.create.focusable" is static:
    const
      PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN* = "SDL.window.create.focusable" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1210:9
  else:
    let PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN* = "SDL.window.create.focusable" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1210:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN):
  when "SDL.window.create.external_graphics_context" is static:
    const
      PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN* = "SDL.window.create.external_graphics_context" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1211:9
  else:
    let PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN* = "SDL.window.create.external_graphics_context" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1211:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_EXTERNAL_GRAPHICS_CONTEXT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FLAGS_NUMBER):
  when "SDL.window.create.flags" is static:
    const
      PROP_WINDOW_CREATE_FLAGS_NUMBER* = "SDL.window.create.flags" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1212:9
  else:
    let PROP_WINDOW_CREATE_FLAGS_NUMBER* = "SDL.window.create.flags" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1212:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FLAGS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN):
  when "SDL.window.create.fullscreen" is static:
    const
      PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN* = "SDL.window.create.fullscreen" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1213:9
  else:
    let PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN* = "SDL.window.create.fullscreen" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1213:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HEIGHT_NUMBER):
  when "SDL.window.create.height" is static:
    const
      PROP_WINDOW_CREATE_HEIGHT_NUMBER* = "SDL.window.create.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1214:9
  else:
    let PROP_WINDOW_CREATE_HEIGHT_NUMBER* = "SDL.window.create.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1214:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HIDDEN_BOOLEAN):
  when "SDL.window.create.hidden" is static:
    const
      PROP_WINDOW_CREATE_HIDDEN_BOOLEAN* = "SDL.window.create.hidden" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1215:9
  else:
    let PROP_WINDOW_CREATE_HIDDEN_BOOLEAN* = "SDL.window.create.hidden" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1215:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HIDDEN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN):
  when "SDL.window.create.high_pixel_density" is static:
    const
      PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN* = "SDL.window.create.high_pixel_density" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1216:9
  else:
    let PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN* = "SDL.window.create.high_pixel_density" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1216:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN):
  when "SDL.window.create.maximized" is static:
    const
      PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN* = "SDL.window.create.maximized" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1217:9
  else:
    let PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN* = "SDL.window.create.maximized" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1217:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MENU_BOOLEAN):
  when "SDL.window.create.menu" is static:
    const
      PROP_WINDOW_CREATE_MENU_BOOLEAN* = "SDL.window.create.menu" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1218:9
  else:
    let PROP_WINDOW_CREATE_MENU_BOOLEAN* = "SDL.window.create.menu" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1218:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MENU_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_METAL_BOOLEAN):
  when "SDL.window.create.metal" is static:
    const
      PROP_WINDOW_CREATE_METAL_BOOLEAN* = "SDL.window.create.metal" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1219:9
  else:
    let PROP_WINDOW_CREATE_METAL_BOOLEAN* = "SDL.window.create.metal" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1219:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_METAL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN):
  when "SDL.window.create.minimized" is static:
    const
      PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN* = "SDL.window.create.minimized" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1220:9
  else:
    let PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN* = "SDL.window.create.minimized" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1220:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MODAL_BOOLEAN):
  when "SDL.window.create.modal" is static:
    const
      PROP_WINDOW_CREATE_MODAL_BOOLEAN* = "SDL.window.create.modal" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1221:9
  else:
    let PROP_WINDOW_CREATE_MODAL_BOOLEAN* = "SDL.window.create.modal" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1221:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MODAL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN):
  when "SDL.window.create.mouse_grabbed" is static:
    const
      PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN* = "SDL.window.create.mouse_grabbed" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1222:9
  else:
    let PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN* = "SDL.window.create.mouse_grabbed" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1222:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_OPENGL_BOOLEAN):
  when "SDL.window.create.opengl" is static:
    const
      PROP_WINDOW_CREATE_OPENGL_BOOLEAN* = "SDL.window.create.opengl" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1223:9
  else:
    let PROP_WINDOW_CREATE_OPENGL_BOOLEAN* = "SDL.window.create.opengl" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1223:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_OPENGL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_PARENT_POINTER):
  when "SDL.window.create.parent" is static:
    const
      PROP_WINDOW_CREATE_PARENT_POINTER* = "SDL.window.create.parent" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1224:9
  else:
    let PROP_WINDOW_CREATE_PARENT_POINTER* = "SDL.window.create.parent" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1224:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_PARENT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN):
  when "SDL.window.create.resizable" is static:
    const
      PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN* = "SDL.window.create.resizable" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1225:9
  else:
    let PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN* = "SDL.window.create.resizable" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1225:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TITLE_STRING):
  when "SDL.window.create.title" is static:
    const
      PROP_WINDOW_CREATE_TITLE_STRING* = "SDL.window.create.title" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1226:9
  else:
    let PROP_WINDOW_CREATE_TITLE_STRING* = "SDL.window.create.title" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1226:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TITLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN):
  when "SDL.window.create.transparent" is static:
    const
      PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN* = "SDL.window.create.transparent" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1227:9
  else:
    let PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN* = "SDL.window.create.transparent" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1227:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN):
  when "SDL.window.create.tooltip" is static:
    const
      PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN* = "SDL.window.create.tooltip" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1228:9
  else:
    let PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN* = "SDL.window.create.tooltip" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1228:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_UTILITY_BOOLEAN):
  when "SDL.window.create.utility" is static:
    const
      PROP_WINDOW_CREATE_UTILITY_BOOLEAN* = "SDL.window.create.utility" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1229:9
  else:
    let PROP_WINDOW_CREATE_UTILITY_BOOLEAN* = "SDL.window.create.utility" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1229:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_UTILITY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_VULKAN_BOOLEAN):
  when "SDL.window.create.vulkan" is static:
    const
      PROP_WINDOW_CREATE_VULKAN_BOOLEAN* = "SDL.window.create.vulkan" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1230:9
  else:
    let PROP_WINDOW_CREATE_VULKAN_BOOLEAN* = "SDL.window.create.vulkan" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1230:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_VULKAN_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIDTH_NUMBER):
  when "SDL.window.create.width" is static:
    const
      PROP_WINDOW_CREATE_WIDTH_NUMBER* = "SDL.window.create.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1231:9
  else:
    let PROP_WINDOW_CREATE_WIDTH_NUMBER* = "SDL.window.create.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1231:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_X_NUMBER):
  when "SDL.window.create.x" is static:
    const
      PROP_WINDOW_CREATE_X_NUMBER* = "SDL.window.create.x" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1232:9
  else:
    let PROP_WINDOW_CREATE_X_NUMBER* = "SDL.window.create.x" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1232:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_X_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_Y_NUMBER):
  when "SDL.window.create.y" is static:
    const
      PROP_WINDOW_CREATE_Y_NUMBER* = "SDL.window.create.y" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1233:9
  else:
    let PROP_WINDOW_CREATE_Y_NUMBER* = "SDL.window.create.y" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1233:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_Y_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER):
  when "SDL.window.create.cocoa.window" is static:
    const
      PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER* = "SDL.window.create.cocoa.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1234:9
  else:
    let PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER* = "SDL.window.create.cocoa.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1234:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_COCOA_VIEW_POINTER):
  when "SDL.window.create.cocoa.view" is static:
    const
      PROP_WINDOW_CREATE_COCOA_VIEW_POINTER* = "SDL.window.create.cocoa.view" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1235:9
  else:
    let PROP_WINDOW_CREATE_COCOA_VIEW_POINTER* = "SDL.window.create.cocoa.view" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1235:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_COCOA_VIEW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN):
  when "SDL.window.create.wayland.surface_role_custom" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN* = "SDL.window.create.wayland.surface_role_custom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1236:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN* = "SDL.window.create.wayland.surface_role_custom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1236:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN):
  when "SDL.window.create.wayland.create_egl_window" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN* = "SDL.window.create.wayland.create_egl_window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1237:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN* = "SDL.window.create.wayland.create_egl_window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1237:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER):
  when "SDL.window.create.wayland.wl_surface" is static:
    const
      PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER* = "SDL.window.create.wayland.wl_surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1238:9
  else:
    let PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER* = "SDL.window.create.wayland.wl_surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1238:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIN32_HWND_POINTER):
  when "SDL.window.create.win32.hwnd" is static:
    const
      PROP_WINDOW_CREATE_WIN32_HWND_POINTER* = "SDL.window.create.win32.hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1239:9
  else:
    let PROP_WINDOW_CREATE_WIN32_HWND_POINTER* = "SDL.window.create.win32.hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1239:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_WIN32_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER):
  when "SDL.window.create.win32.pixel_format_hwnd" is static:
    const
      PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER* = "SDL.window.create.win32.pixel_format_hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1240:9
  else:
    let PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER* = "SDL.window.create.win32.pixel_format_hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1240:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_CREATE_X11_WINDOW_NUMBER):
  when "SDL.window.create.x11.window" is static:
    const
      PROP_WINDOW_CREATE_X11_WINDOW_NUMBER* = "SDL.window.create.x11.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1241:9
  else:
    let PROP_WINDOW_CREATE_X11_WINDOW_NUMBER* = "SDL.window.create.x11.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1241:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_CREATE_X11_WINDOW_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_SHAPE_POINTER):
  when "SDL.window.shape" is static:
    const
      PROP_WINDOW_SHAPE_POINTER* = "SDL.window.shape" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1416:9
  else:
    let PROP_WINDOW_SHAPE_POINTER* = "SDL.window.shape" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1416:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_SHAPE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_HDR_ENABLED_BOOLEAN):
  when "SDL.window.HDR_enabled" is static:
    const
      PROP_WINDOW_HDR_ENABLED_BOOLEAN* = "SDL.window.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1417:9
  else:
    let PROP_WINDOW_HDR_ENABLED_BOOLEAN* = "SDL.window.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1417:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT):
  when "SDL.window.SDR_white_level" is static:
    const
      PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT* = "SDL.window.SDR_white_level" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1418:9
  else:
    let PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT* = "SDL.window.SDR_white_level" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1418:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_SDR_WHITE_LEVEL_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_HDR_HEADROOM_FLOAT):
  when "SDL.window.HDR_headroom" is static:
    const
      PROP_WINDOW_HDR_HEADROOM_FLOAT* = "SDL.window.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1419:9
  else:
    let PROP_WINDOW_HDR_HEADROOM_FLOAT* = "SDL.window.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1419:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_ANDROID_WINDOW_POINTER):
  when "SDL.window.android.window" is static:
    const
      PROP_WINDOW_ANDROID_WINDOW_POINTER* = "SDL.window.android.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1420:9
  else:
    let PROP_WINDOW_ANDROID_WINDOW_POINTER* = "SDL.window.android.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1420:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_ANDROID_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_ANDROID_SURFACE_POINTER):
  when "SDL.window.android.surface" is static:
    const
      PROP_WINDOW_ANDROID_SURFACE_POINTER* = "SDL.window.android.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1421:9
  else:
    let PROP_WINDOW_ANDROID_SURFACE_POINTER* = "SDL.window.android.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1421:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_ANDROID_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_WINDOW_POINTER):
  when "SDL.window.uikit.window" is static:
    const
      PROP_WINDOW_UIKIT_WINDOW_POINTER* = "SDL.window.uikit.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1422:9
  else:
    let PROP_WINDOW_UIKIT_WINDOW_POINTER* = "SDL.window.uikit.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1422:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER):
  when "SDL.window.uikit.metal_view_tag" is static:
    const
      PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER* = "SDL.window.uikit.metal_view_tag" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1423:9
  else:
    let PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER* = "SDL.window.uikit.metal_view_tag" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1423:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.framebuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.framebuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1424:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.framebuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1424:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_OPENGL_FRAMEBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.renderbuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER* = "SDL.window.uikit.opengl.renderbuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1425:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER* = "SDL.window.uikit.opengl.renderbuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1425:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_UIKIT_OPENGL_RENDERBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER):
  when "SDL.window.uikit.opengl.resolve_framebuffer" is static:
    const
      PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.resolve_framebuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1426:9
  else:
    let PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER* = "SDL.window.uikit.opengl.resolve_framebuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1426:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_UIKIT_OPENGL_RESOLVE_FRAMEBUFFER_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER):
  when "SDL.window.kmsdrm.dev_index" is static:
    const
      PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER* = "SDL.window.kmsdrm.dev_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1427:9
  else:
    let PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER* = "SDL.window.kmsdrm.dev_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1427:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_DRM_FD_NUMBER):
  when "SDL.window.kmsdrm.drm_fd" is static:
    const
      PROP_WINDOW_KMSDRM_DRM_FD_NUMBER* = "SDL.window.kmsdrm.drm_fd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1428:9
  else:
    let PROP_WINDOW_KMSDRM_DRM_FD_NUMBER* = "SDL.window.kmsdrm.drm_fd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1428:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_DRM_FD_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER):
  when "SDL.window.kmsdrm.gbm_dev" is static:
    const
      PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER* = "SDL.window.kmsdrm.gbm_dev" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1429:9
  else:
    let PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER* = "SDL.window.kmsdrm.gbm_dev" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1429:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_COCOA_WINDOW_POINTER):
  when "SDL.window.cocoa.window" is static:
    const
      PROP_WINDOW_COCOA_WINDOW_POINTER* = "SDL.window.cocoa.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1430:9
  else:
    let PROP_WINDOW_COCOA_WINDOW_POINTER* = "SDL.window.cocoa.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1430:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_COCOA_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER):
  when "SDL.window.cocoa.metal_view_tag" is static:
    const
      PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER* = "SDL.window.cocoa.metal_view_tag" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1431:9
  else:
    let PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER* = "SDL.window.cocoa.metal_view_tag" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1431:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_OPENVR_OVERLAY_ID):
  when "SDL.window.openvr.overlay_id" is static:
    const
      PROP_WINDOW_OPENVR_OVERLAY_ID* = "SDL.window.openvr.overlay_id" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1432:9
  else:
    let PROP_WINDOW_OPENVR_OVERLAY_ID* = "SDL.window.openvr.overlay_id" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1432:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_OPENVR_OVERLAY_ID" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_DISPLAY_POINTER):
  when "SDL.window.vivante.display" is static:
    const
      PROP_WINDOW_VIVANTE_DISPLAY_POINTER* = "SDL.window.vivante.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1433:9
  else:
    let PROP_WINDOW_VIVANTE_DISPLAY_POINTER* = "SDL.window.vivante.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1433:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_WINDOW_POINTER):
  when "SDL.window.vivante.window" is static:
    const
      PROP_WINDOW_VIVANTE_WINDOW_POINTER* = "SDL.window.vivante.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1434:9
  else:
    let PROP_WINDOW_VIVANTE_WINDOW_POINTER* = "SDL.window.vivante.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1434:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_VIVANTE_SURFACE_POINTER):
  when "SDL.window.vivante.surface" is static:
    const
      PROP_WINDOW_VIVANTE_SURFACE_POINTER* = "SDL.window.vivante.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1435:9
  else:
    let PROP_WINDOW_VIVANTE_SURFACE_POINTER* = "SDL.window.vivante.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1435:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_VIVANTE_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_HWND_POINTER):
  when "SDL.window.win32.hwnd" is static:
    const
      PROP_WINDOW_WIN32_HWND_POINTER* = "SDL.window.win32.hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1436:9
  else:
    let PROP_WINDOW_WIN32_HWND_POINTER* = "SDL.window.win32.hwnd" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1436:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_HWND_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_HDC_POINTER):
  when "SDL.window.win32.hdc" is static:
    const
      PROP_WINDOW_WIN32_HDC_POINTER* = "SDL.window.win32.hdc" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1437:9
  else:
    let PROP_WINDOW_WIN32_HDC_POINTER* = "SDL.window.win32.hdc" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1437:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_HDC_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WIN32_INSTANCE_POINTER):
  when "SDL.window.win32.instance" is static:
    const
      PROP_WINDOW_WIN32_INSTANCE_POINTER* = "SDL.window.win32.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1438:9
  else:
    let PROP_WINDOW_WIN32_INSTANCE_POINTER* = "SDL.window.win32.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1438:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WIN32_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_DISPLAY_POINTER):
  when "SDL.window.wayland.display" is static:
    const
      PROP_WINDOW_WAYLAND_DISPLAY_POINTER* = "SDL.window.wayland.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1439:9
  else:
    let PROP_WINDOW_WAYLAND_DISPLAY_POINTER* = "SDL.window.wayland.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1439:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_SURFACE_POINTER):
  when "SDL.window.wayland.surface" is static:
    const
      PROP_WINDOW_WAYLAND_SURFACE_POINTER* = "SDL.window.wayland.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1440:9
  else:
    let PROP_WINDOW_WAYLAND_SURFACE_POINTER* = "SDL.window.wayland.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1440:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_VIEWPORT_POINTER):
  when "SDL.window.wayland.viewport" is static:
    const
      PROP_WINDOW_WAYLAND_VIEWPORT_POINTER* = "SDL.window.wayland.viewport" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1441:9
  else:
    let PROP_WINDOW_WAYLAND_VIEWPORT_POINTER* = "SDL.window.wayland.viewport" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1441:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_VIEWPORT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER):
  when "SDL.window.wayland.egl_window" is static:
    const
      PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER* = "SDL.window.wayland.egl_window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1442:9
  else:
    let PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER* = "SDL.window.wayland.egl_window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1442:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER):
  when "SDL.window.wayland.xdg_surface" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER* = "SDL.window.wayland.xdg_surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1443:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER* = "SDL.window.wayland.xdg_surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1443:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER):
  when "SDL.window.wayland.xdg_toplevel" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER* = "SDL.window.wayland.xdg_toplevel" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1444:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER* = "SDL.window.wayland.xdg_toplevel" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1444:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING):
  when "SDL.window.wayland.xdg_toplevel_export_handle" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING* = "SDL.window.wayland.xdg_toplevel_export_handle" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1445:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING* = "SDL.window.wayland.xdg_toplevel_export_handle" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1445:9
else:
  static :
    hint("Declaration of " &
        "PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_EXPORT_HANDLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER):
  when "SDL.window.wayland.xdg_popup" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER* = "SDL.window.wayland.xdg_popup" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1446:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER* = "SDL.window.wayland.xdg_popup" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1446:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER):
  when "SDL.window.wayland.xdg_positioner" is static:
    const
      PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER* = "SDL.window.wayland.xdg_positioner" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1447:9
  else:
    let PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER* = "SDL.window.wayland.xdg_positioner" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1447:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_DISPLAY_POINTER):
  when "SDL.window.x11.display" is static:
    const
      PROP_WINDOW_X11_DISPLAY_POINTER* = "SDL.window.x11.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1448:9
  else:
    let PROP_WINDOW_X11_DISPLAY_POINTER* = "SDL.window.x11.display" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1448:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_DISPLAY_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_SCREEN_NUMBER):
  when "SDL.window.x11.screen" is static:
    const
      PROP_WINDOW_X11_SCREEN_NUMBER* = "SDL.window.x11.screen" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1449:9
  else:
    let PROP_WINDOW_X11_SCREEN_NUMBER* = "SDL.window.x11.screen" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1449:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_SCREEN_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_WINDOW_X11_WINDOW_NUMBER):
  when "SDL.window.x11.window" is static:
    const
      PROP_WINDOW_X11_WINDOW_NUMBER* = "SDL.window.x11.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1450:9
  else:
    let PROP_WINDOW_X11_WINDOW_NUMBER* = "SDL.window.x11.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:1450:9
else:
  static :
    hint("Declaration of " & "PROP_WINDOW_X11_WINDOW_NUMBER" &
        " already exists, not redeclaring")
when not declared(WINDOW_SURFACE_VSYNC_DISABLED):
  when 0 is static:
    const
      WINDOW_SURFACE_VSYNC_DISABLED* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2207:9
  else:
    let WINDOW_SURFACE_VSYNC_DISABLED* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2207:9
else:
  static :
    hint("Declaration of " & "WINDOW_SURFACE_VSYNC_DISABLED" &
        " already exists, not redeclaring")
when not declared(WINDOW_SURFACE_VSYNC_ADAPTIVE):
  when -1 is static:
    const
      WINDOW_SURFACE_VSYNC_ADAPTIVE* = -1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2208:9
  else:
    let WINDOW_SURFACE_VSYNC_ADAPTIVE* = -1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_video.h:2208:9
else:
  static :
    hint("Declaration of " & "WINDOW_SURFACE_VSYNC_ADAPTIVE" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_FILTERS_POINTER):
  when "SDL.filedialog.filters" is static:
    const
      PROP_FILE_DIALOG_FILTERS_POINTER* = "SDL.filedialog.filters" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:253:9
  else:
    let PROP_FILE_DIALOG_FILTERS_POINTER* = "SDL.filedialog.filters" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:253:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_FILTERS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_NFILTERS_NUMBER):
  when "SDL.filedialog.nfilters" is static:
    const
      PROP_FILE_DIALOG_NFILTERS_NUMBER* = "SDL.filedialog.nfilters" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:254:9
  else:
    let PROP_FILE_DIALOG_NFILTERS_NUMBER* = "SDL.filedialog.nfilters" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:254:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_NFILTERS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_WINDOW_POINTER):
  when "SDL.filedialog.window" is static:
    const
      PROP_FILE_DIALOG_WINDOW_POINTER* = "SDL.filedialog.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:255:9
  else:
    let PROP_FILE_DIALOG_WINDOW_POINTER* = "SDL.filedialog.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:255:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_LOCATION_STRING):
  when "SDL.filedialog.location" is static:
    const
      PROP_FILE_DIALOG_LOCATION_STRING* = "SDL.filedialog.location" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:256:9
  else:
    let PROP_FILE_DIALOG_LOCATION_STRING* = "SDL.filedialog.location" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:256:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_LOCATION_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_MANY_BOOLEAN):
  when "SDL.filedialog.many" is static:
    const
      PROP_FILE_DIALOG_MANY_BOOLEAN* = "SDL.filedialog.many" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:257:9
  else:
    let PROP_FILE_DIALOG_MANY_BOOLEAN* = "SDL.filedialog.many" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:257:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_MANY_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_TITLE_STRING):
  when "SDL.filedialog.title" is static:
    const
      PROP_FILE_DIALOG_TITLE_STRING* = "SDL.filedialog.title" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:258:9
  else:
    let PROP_FILE_DIALOG_TITLE_STRING* = "SDL.filedialog.title" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:258:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_TITLE_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_ACCEPT_STRING):
  when "SDL.filedialog.accept" is static:
    const
      PROP_FILE_DIALOG_ACCEPT_STRING* = "SDL.filedialog.accept" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:259:9
  else:
    let PROP_FILE_DIALOG_ACCEPT_STRING* = "SDL.filedialog.accept" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:259:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_ACCEPT_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_FILE_DIALOG_CANCEL_STRING):
  when "SDL.filedialog.cancel" is static:
    const
      PROP_FILE_DIALOG_CANCEL_STRING* = "SDL.filedialog.cancel" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:260:9
  else:
    let PROP_FILE_DIALOG_CANCEL_STRING* = "SDL.filedialog.cancel" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_dialog.h:260:9
else:
  static :
    hint("Declaration of " & "PROP_FILE_DIALOG_CANCEL_STRING" &
        " already exists, not redeclaring")
when not declared(STANDARD_GRAVITY):
  when 9.80665 is static:
    const
      STANDARD_GRAVITY* = 9.80665 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_sensor.h:69:9
  else:
    let STANDARD_GRAVITY* = 9.80665 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_sensor.h:69:9
else:
  static :
    hint("Declaration of " & "STANDARD_GRAVITY" &
        " already exists, not redeclaring")
when not declared(JOYSTICK_AXIS_MAX):
  when 32767 is static:
    const
      JOYSTICK_AXIS_MAX* = 32767 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:150:9
  else:
    let JOYSTICK_AXIS_MAX* = 32767 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:150:9
else:
  static :
    hint("Declaration of " & "JOYSTICK_AXIS_MAX" &
        " already exists, not redeclaring")
when not declared(JOYSTICK_AXIS_MIN):
  when -32768 is static:
    const
      JOYSTICK_AXIS_MIN* = -32768 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:161:9
  else:
    let JOYSTICK_AXIS_MIN* = -32768 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:161:9
else:
  static :
    hint("Declaration of " & "JOYSTICK_AXIS_MIN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN):
  when "SDL.joystick.cap.mono_led" is static:
    const
      PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN* = "SDL.joystick.cap.mono_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:655:9
  else:
    let PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN* = "SDL.joystick.cap.mono_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:655:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN):
  when "SDL.joystick.cap.rgb_led" is static:
    const
      PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN* = "SDL.joystick.cap.rgb_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:656:9
  else:
    let PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN* = "SDL.joystick.cap.rgb_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:656:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN):
  when "SDL.joystick.cap.player_led" is static:
    const
      PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN* = "SDL.joystick.cap.player_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:657:9
  else:
    let PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN* = "SDL.joystick.cap.player_led" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:657:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN):
  when "SDL.joystick.cap.rumble" is static:
    const
      PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN* = "SDL.joystick.cap.rumble" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:658:9
  else:
    let PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN* = "SDL.joystick.cap.rumble" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:658:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN):
  when "SDL.joystick.cap.trigger_rumble" is static:
    const
      PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN* = "SDL.joystick.cap.trigger_rumble" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:659:9
  else:
    let PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN* = "SDL.joystick.cap.trigger_rumble" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:659:9
else:
  static :
    hint("Declaration of " & "PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(HAT_CENTERED):
  when cast[cuint](0'i64) is static:
    const
      HAT_CENTERED* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1045:9
  else:
    let HAT_CENTERED* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1045:9
else:
  static :
    hint("Declaration of " & "HAT_CENTERED" & " already exists, not redeclaring")
when not declared(HAT_UP):
  when cast[cuint](1'i64) is static:
    const
      HAT_UP* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1046:9
  else:
    let HAT_UP* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1046:9
else:
  static :
    hint("Declaration of " & "HAT_UP" & " already exists, not redeclaring")
when not declared(HAT_RIGHT):
  when cast[cuint](2'i64) is static:
    const
      HAT_RIGHT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1047:9
  else:
    let HAT_RIGHT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1047:9
else:
  static :
    hint("Declaration of " & "HAT_RIGHT" & " already exists, not redeclaring")
when not declared(HAT_DOWN):
  when cast[cuint](4'i64) is static:
    const
      HAT_DOWN* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1048:9
  else:
    let HAT_DOWN* = cast[cuint](4'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1048:9
else:
  static :
    hint("Declaration of " & "HAT_DOWN" & " already exists, not redeclaring")
when not declared(HAT_LEFT):
  when cast[cuint](8'i64) is static:
    const
      HAT_LEFT* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1049:9
  else:
    let HAT_LEFT* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_joystick.h:1049:9
else:
  static :
    hint("Declaration of " & "HAT_LEFT" & " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:746:9
  else:
    when PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:746:9
    else:
      let PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN* = PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:746:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:747:9
  else:
    when PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:747:9
    else:
      let PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN* = PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:747:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN):
  when PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:748:9
  else:
    when PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:748:9
    else:
      let PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN* = PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:748:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN):
  when PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:749:9
  else:
    when PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:749:9
    else:
      let PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:749:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN):
  when PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN is typedesc:
    type
      PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:750:9
  else:
    when PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN is static:
      const
        PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:750:9
    else:
      let PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN* = PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gamepad.h:750:9
else:
  static :
    hint("Declaration of " & "PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(SDLK_UNKNOWN):
  when cast[cuint](0'i64) is static:
    const
      SDLK_UNKNOWN* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:51:9
  else:
    let SDLK_UNKNOWN* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:51:9
else:
  static :
    hint("Declaration of " & "SDLK_UNKNOWN" & " already exists, not redeclaring")
when not declared(SDLK_RETURN):
  when cast[cuint](13'i64) is static:
    const
      SDLK_RETURN* = cast[cuint](13'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:52:9
  else:
    let SDLK_RETURN* = cast[cuint](13'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:52:9
else:
  static :
    hint("Declaration of " & "SDLK_RETURN" & " already exists, not redeclaring")
when not declared(SDLK_ESCAPE):
  when cast[cuint](27'i64) is static:
    const
      SDLK_ESCAPE* = cast[cuint](27'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:53:9
  else:
    let SDLK_ESCAPE* = cast[cuint](27'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:53:9
else:
  static :
    hint("Declaration of " & "SDLK_ESCAPE" & " already exists, not redeclaring")
when not declared(SDLK_BACKSPACE):
  when cast[cuint](8'i64) is static:
    const
      SDLK_BACKSPACE* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:54:9
  else:
    let SDLK_BACKSPACE* = cast[cuint](8'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:54:9
else:
  static :
    hint("Declaration of " & "SDLK_BACKSPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_TAB):
  when cast[cuint](9'i64) is static:
    const
      SDLK_TAB* = cast[cuint](9'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:55:9
  else:
    let SDLK_TAB* = cast[cuint](9'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:55:9
else:
  static :
    hint("Declaration of " & "SDLK_TAB" & " already exists, not redeclaring")
when not declared(SDLK_SPACE):
  when cast[cuint](32'i64) is static:
    const
      SDLK_SPACE* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:56:9
  else:
    let SDLK_SPACE* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:56:9
else:
  static :
    hint("Declaration of " & "SDLK_SPACE" & " already exists, not redeclaring")
when not declared(SDLK_EXCLAIM):
  when cast[cuint](33'i64) is static:
    const
      SDLK_EXCLAIM* = cast[cuint](33'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:57:9
  else:
    let SDLK_EXCLAIM* = cast[cuint](33'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:57:9
else:
  static :
    hint("Declaration of " & "SDLK_EXCLAIM" & " already exists, not redeclaring")
when not declared(SDLK_DBLAPOSTROPHE):
  when cast[cuint](34'i64) is static:
    const
      SDLK_DBLAPOSTROPHE* = cast[cuint](34'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:58:9
  else:
    let SDLK_DBLAPOSTROPHE* = cast[cuint](34'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:58:9
else:
  static :
    hint("Declaration of " & "SDLK_DBLAPOSTROPHE" &
        " already exists, not redeclaring")
when not declared(SDLK_HASH):
  when cast[cuint](35'i64) is static:
    const
      SDLK_HASH* = cast[cuint](35'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:59:9
  else:
    let SDLK_HASH* = cast[cuint](35'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:59:9
else:
  static :
    hint("Declaration of " & "SDLK_HASH" & " already exists, not redeclaring")
when not declared(SDLK_DOLLAR):
  when cast[cuint](36'i64) is static:
    const
      SDLK_DOLLAR* = cast[cuint](36'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:60:9
  else:
    let SDLK_DOLLAR* = cast[cuint](36'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:60:9
else:
  static :
    hint("Declaration of " & "SDLK_DOLLAR" & " already exists, not redeclaring")
when not declared(SDLK_PERCENT):
  when cast[cuint](37'i64) is static:
    const
      SDLK_PERCENT* = cast[cuint](37'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:61:9
  else:
    let SDLK_PERCENT* = cast[cuint](37'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:61:9
else:
  static :
    hint("Declaration of " & "SDLK_PERCENT" & " already exists, not redeclaring")
when not declared(SDLK_AMPERSAND):
  when cast[cuint](38'i64) is static:
    const
      SDLK_AMPERSAND* = cast[cuint](38'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:62:9
  else:
    let SDLK_AMPERSAND* = cast[cuint](38'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:62:9
else:
  static :
    hint("Declaration of " & "SDLK_AMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_APOSTROPHE):
  when cast[cuint](39'i64) is static:
    const
      SDLK_APOSTROPHE* = cast[cuint](39'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:63:9
  else:
    let SDLK_APOSTROPHE* = cast[cuint](39'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:63:9
else:
  static :
    hint("Declaration of " & "SDLK_APOSTROPHE" &
        " already exists, not redeclaring")
when not declared(SDLK_LEFTPAREN):
  when cast[cuint](40'i64) is static:
    const
      SDLK_LEFTPAREN* = cast[cuint](40'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:64:9
  else:
    let SDLK_LEFTPAREN* = cast[cuint](40'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:64:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHTPAREN):
  when cast[cuint](41'i64) is static:
    const
      SDLK_RIGHTPAREN* = cast[cuint](41'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:65:9
  else:
    let SDLK_RIGHTPAREN* = cast[cuint](41'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:65:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_ASTERISK):
  when cast[cuint](42'i64) is static:
    const
      SDLK_ASTERISK* = cast[cuint](42'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:66:9
  else:
    let SDLK_ASTERISK* = cast[cuint](42'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:66:9
else:
  static :
    hint("Declaration of " & "SDLK_ASTERISK" &
        " already exists, not redeclaring")
when not declared(SDLK_PLUS):
  when cast[cuint](43'i64) is static:
    const
      SDLK_PLUS* = cast[cuint](43'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:67:9
  else:
    let SDLK_PLUS* = cast[cuint](43'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:67:9
else:
  static :
    hint("Declaration of " & "SDLK_PLUS" & " already exists, not redeclaring")
when not declared(SDLK_COMMA):
  when cast[cuint](44'i64) is static:
    const
      SDLK_COMMA* = cast[cuint](44'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:68:9
  else:
    let SDLK_COMMA* = cast[cuint](44'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:68:9
else:
  static :
    hint("Declaration of " & "SDLK_COMMA" & " already exists, not redeclaring")
when not declared(SDLK_MINUS):
  when cast[cuint](45'i64) is static:
    const
      SDLK_MINUS* = cast[cuint](45'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:69:9
  else:
    let SDLK_MINUS* = cast[cuint](45'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:69:9
else:
  static :
    hint("Declaration of " & "SDLK_MINUS" & " already exists, not redeclaring")
when not declared(SDLK_PERIOD):
  when cast[cuint](46'i64) is static:
    const
      SDLK_PERIOD* = cast[cuint](46'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:70:9
  else:
    let SDLK_PERIOD* = cast[cuint](46'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:70:9
else:
  static :
    hint("Declaration of " & "SDLK_PERIOD" & " already exists, not redeclaring")
when not declared(SDLK_SLASH):
  when cast[cuint](47'i64) is static:
    const
      SDLK_SLASH* = cast[cuint](47'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:71:9
  else:
    let SDLK_SLASH* = cast[cuint](47'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:71:9
else:
  static :
    hint("Declaration of " & "SDLK_SLASH" & " already exists, not redeclaring")
when not declared(SDLK_0):
  when cast[cuint](48'i64) is static:
    const
      SDLK_0* = cast[cuint](48'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:72:9
  else:
    let SDLK_0* = cast[cuint](48'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:72:9
else:
  static :
    hint("Declaration of " & "SDLK_0" & " already exists, not redeclaring")
when not declared(SDLK_1):
  when cast[cuint](49'i64) is static:
    const
      SDLK_1* = cast[cuint](49'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:73:9
  else:
    let SDLK_1* = cast[cuint](49'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:73:9
else:
  static :
    hint("Declaration of " & "SDLK_1" & " already exists, not redeclaring")
when not declared(SDLK_2):
  when cast[cuint](50'i64) is static:
    const
      SDLK_2* = cast[cuint](50'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:74:9
  else:
    let SDLK_2* = cast[cuint](50'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:74:9
else:
  static :
    hint("Declaration of " & "SDLK_2" & " already exists, not redeclaring")
when not declared(SDLK_3):
  when cast[cuint](51'i64) is static:
    const
      SDLK_3* = cast[cuint](51'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:75:9
  else:
    let SDLK_3* = cast[cuint](51'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:75:9
else:
  static :
    hint("Declaration of " & "SDLK_3" & " already exists, not redeclaring")
when not declared(SDLK_4):
  when cast[cuint](52'i64) is static:
    const
      SDLK_4* = cast[cuint](52'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:76:9
  else:
    let SDLK_4* = cast[cuint](52'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:76:9
else:
  static :
    hint("Declaration of " & "SDLK_4" & " already exists, not redeclaring")
when not declared(SDLK_5):
  when cast[cuint](53'i64) is static:
    const
      SDLK_5* = cast[cuint](53'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:77:9
  else:
    let SDLK_5* = cast[cuint](53'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:77:9
else:
  static :
    hint("Declaration of " & "SDLK_5" & " already exists, not redeclaring")
when not declared(SDLK_6):
  when cast[cuint](54'i64) is static:
    const
      SDLK_6* = cast[cuint](54'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:78:9
  else:
    let SDLK_6* = cast[cuint](54'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:78:9
else:
  static :
    hint("Declaration of " & "SDLK_6" & " already exists, not redeclaring")
when not declared(SDLK_7):
  when cast[cuint](55'i64) is static:
    const
      SDLK_7* = cast[cuint](55'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:79:9
  else:
    let SDLK_7* = cast[cuint](55'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:79:9
else:
  static :
    hint("Declaration of " & "SDLK_7" & " already exists, not redeclaring")
when not declared(SDLK_8):
  when cast[cuint](56'i64) is static:
    const
      SDLK_8* = cast[cuint](56'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:80:9
  else:
    let SDLK_8* = cast[cuint](56'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:80:9
else:
  static :
    hint("Declaration of " & "SDLK_8" & " already exists, not redeclaring")
when not declared(SDLK_9):
  when cast[cuint](57'i64) is static:
    const
      SDLK_9* = cast[cuint](57'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:81:9
  else:
    let SDLK_9* = cast[cuint](57'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:81:9
else:
  static :
    hint("Declaration of " & "SDLK_9" & " already exists, not redeclaring")
when not declared(SDLK_COLON):
  when cast[cuint](58'i64) is static:
    const
      SDLK_COLON* = cast[cuint](58'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:82:9
  else:
    let SDLK_COLON* = cast[cuint](58'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:82:9
else:
  static :
    hint("Declaration of " & "SDLK_COLON" & " already exists, not redeclaring")
when not declared(SDLK_SEMICOLON):
  when cast[cuint](59'i64) is static:
    const
      SDLK_SEMICOLON* = cast[cuint](59'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:83:9
  else:
    let SDLK_SEMICOLON* = cast[cuint](59'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:83:9
else:
  static :
    hint("Declaration of " & "SDLK_SEMICOLON" &
        " already exists, not redeclaring")
when not declared(SDLK_LESS):
  when cast[cuint](60'i64) is static:
    const
      SDLK_LESS* = cast[cuint](60'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:84:9
  else:
    let SDLK_LESS* = cast[cuint](60'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:84:9
else:
  static :
    hint("Declaration of " & "SDLK_LESS" & " already exists, not redeclaring")
when not declared(SDLK_EQUALS):
  when cast[cuint](61'i64) is static:
    const
      SDLK_EQUALS* = cast[cuint](61'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:85:9
  else:
    let SDLK_EQUALS* = cast[cuint](61'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:85:9
else:
  static :
    hint("Declaration of " & "SDLK_EQUALS" & " already exists, not redeclaring")
when not declared(SDLK_GREATER):
  when cast[cuint](62'i64) is static:
    const
      SDLK_GREATER* = cast[cuint](62'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:86:9
  else:
    let SDLK_GREATER* = cast[cuint](62'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:86:9
else:
  static :
    hint("Declaration of " & "SDLK_GREATER" & " already exists, not redeclaring")
when not declared(SDLK_QUESTION):
  when cast[cuint](63'i64) is static:
    const
      SDLK_QUESTION* = cast[cuint](63'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:87:9
  else:
    let SDLK_QUESTION* = cast[cuint](63'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:87:9
else:
  static :
    hint("Declaration of " & "SDLK_QUESTION" &
        " already exists, not redeclaring")
when not declared(SDLK_AT):
  when cast[cuint](64'i64) is static:
    const
      SDLK_AT* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:88:9
  else:
    let SDLK_AT* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:88:9
else:
  static :
    hint("Declaration of " & "SDLK_AT" & " already exists, not redeclaring")
when not declared(SDLK_LEFTBRACKET):
  when cast[cuint](91'i64) is static:
    const
      SDLK_LEFTBRACKET* = cast[cuint](91'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:89:9
  else:
    let SDLK_LEFTBRACKET* = cast[cuint](91'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:89:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTBRACKET" &
        " already exists, not redeclaring")
when not declared(SDLK_BACKSLASH):
  when cast[cuint](92'i64) is static:
    const
      SDLK_BACKSLASH* = cast[cuint](92'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:90:9
  else:
    let SDLK_BACKSLASH* = cast[cuint](92'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:90:9
else:
  static :
    hint("Declaration of " & "SDLK_BACKSLASH" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHTBRACKET):
  when cast[cuint](93'i64) is static:
    const
      SDLK_RIGHTBRACKET* = cast[cuint](93'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:91:9
  else:
    let SDLK_RIGHTBRACKET* = cast[cuint](93'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:91:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTBRACKET" &
        " already exists, not redeclaring")
when not declared(SDLK_CARET):
  when cast[cuint](94'i64) is static:
    const
      SDLK_CARET* = cast[cuint](94'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:92:9
  else:
    let SDLK_CARET* = cast[cuint](94'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:92:9
else:
  static :
    hint("Declaration of " & "SDLK_CARET" & " already exists, not redeclaring")
when not declared(SDLK_UNDERSCORE):
  when cast[cuint](95'i64) is static:
    const
      SDLK_UNDERSCORE* = cast[cuint](95'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:93:9
  else:
    let SDLK_UNDERSCORE* = cast[cuint](95'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:93:9
else:
  static :
    hint("Declaration of " & "SDLK_UNDERSCORE" &
        " already exists, not redeclaring")
when not declared(SDLK_GRAVE):
  when cast[cuint](96'i64) is static:
    const
      SDLK_GRAVE* = cast[cuint](96'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:94:9
  else:
    let SDLK_GRAVE* = cast[cuint](96'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:94:9
else:
  static :
    hint("Declaration of " & "SDLK_GRAVE" & " already exists, not redeclaring")
when not declared(SDLK_A):
  when cast[cuint](97'i64) is static:
    const
      SDLK_A* = cast[cuint](97'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:95:9
  else:
    let SDLK_A* = cast[cuint](97'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:95:9
else:
  static :
    hint("Declaration of " & "SDLK_A" & " already exists, not redeclaring")
when not declared(SDLK_B):
  when cast[cuint](98'i64) is static:
    const
      SDLK_B* = cast[cuint](98'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:96:9
  else:
    let SDLK_B* = cast[cuint](98'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:96:9
else:
  static :
    hint("Declaration of " & "SDLK_B" & " already exists, not redeclaring")
when not declared(SDLK_C):
  when cast[cuint](99'i64) is static:
    const
      SDLK_C* = cast[cuint](99'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:97:9
  else:
    let SDLK_C* = cast[cuint](99'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:97:9
else:
  static :
    hint("Declaration of " & "SDLK_C" & " already exists, not redeclaring")
when not declared(SDLK_D):
  when cast[cuint](100'i64) is static:
    const
      SDLK_D* = cast[cuint](100'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:98:9
  else:
    let SDLK_D* = cast[cuint](100'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:98:9
else:
  static :
    hint("Declaration of " & "SDLK_D" & " already exists, not redeclaring")
when not declared(SDLK_E):
  when cast[cuint](101'i64) is static:
    const
      SDLK_E* = cast[cuint](101'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:99:9
  else:
    let SDLK_E* = cast[cuint](101'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:99:9
else:
  static :
    hint("Declaration of " & "SDLK_E" & " already exists, not redeclaring")
when not declared(SDLK_F):
  when cast[cuint](102'i64) is static:
    const
      SDLK_F* = cast[cuint](102'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:100:9
  else:
    let SDLK_F* = cast[cuint](102'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:100:9
else:
  static :
    hint("Declaration of " & "SDLK_F" & " already exists, not redeclaring")
when not declared(SDLK_G):
  when cast[cuint](103'i64) is static:
    const
      SDLK_G* = cast[cuint](103'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:101:9
  else:
    let SDLK_G* = cast[cuint](103'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:101:9
else:
  static :
    hint("Declaration of " & "SDLK_G" & " already exists, not redeclaring")
when not declared(SDLK_H):
  when cast[cuint](104'i64) is static:
    const
      SDLK_H* = cast[cuint](104'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:102:9
  else:
    let SDLK_H* = cast[cuint](104'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:102:9
else:
  static :
    hint("Declaration of " & "SDLK_H" & " already exists, not redeclaring")
when not declared(SDLK_I):
  when cast[cuint](105'i64) is static:
    const
      SDLK_I* = cast[cuint](105'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:103:9
  else:
    let SDLK_I* = cast[cuint](105'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:103:9
else:
  static :
    hint("Declaration of " & "SDLK_I" & " already exists, not redeclaring")
when not declared(SDLK_J):
  when cast[cuint](106'i64) is static:
    const
      SDLK_J* = cast[cuint](106'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:104:9
  else:
    let SDLK_J* = cast[cuint](106'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:104:9
else:
  static :
    hint("Declaration of " & "SDLK_J" & " already exists, not redeclaring")
when not declared(SDLK_K):
  when cast[cuint](107'i64) is static:
    const
      SDLK_K* = cast[cuint](107'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:105:9
  else:
    let SDLK_K* = cast[cuint](107'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:105:9
else:
  static :
    hint("Declaration of " & "SDLK_K" & " already exists, not redeclaring")
when not declared(SDLK_L):
  when cast[cuint](108'i64) is static:
    const
      SDLK_L* = cast[cuint](108'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:106:9
  else:
    let SDLK_L* = cast[cuint](108'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:106:9
else:
  static :
    hint("Declaration of " & "SDLK_L" & " already exists, not redeclaring")
when not declared(SDLK_M):
  when cast[cuint](109'i64) is static:
    const
      SDLK_M* = cast[cuint](109'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:107:9
  else:
    let SDLK_M* = cast[cuint](109'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:107:9
else:
  static :
    hint("Declaration of " & "SDLK_M" & " already exists, not redeclaring")
when not declared(SDLK_N):
  when cast[cuint](110'i64) is static:
    const
      SDLK_N* = cast[cuint](110'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:108:9
  else:
    let SDLK_N* = cast[cuint](110'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:108:9
else:
  static :
    hint("Declaration of " & "SDLK_N" & " already exists, not redeclaring")
when not declared(SDLK_O):
  when cast[cuint](111'i64) is static:
    const
      SDLK_O* = cast[cuint](111'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:109:9
  else:
    let SDLK_O* = cast[cuint](111'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:109:9
else:
  static :
    hint("Declaration of " & "SDLK_O" & " already exists, not redeclaring")
when not declared(SDLK_P):
  when cast[cuint](112'i64) is static:
    const
      SDLK_P* = cast[cuint](112'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:110:9
  else:
    let SDLK_P* = cast[cuint](112'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:110:9
else:
  static :
    hint("Declaration of " & "SDLK_P" & " already exists, not redeclaring")
when not declared(SDLK_Q):
  when cast[cuint](113'i64) is static:
    const
      SDLK_Q* = cast[cuint](113'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:111:9
  else:
    let SDLK_Q* = cast[cuint](113'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:111:9
else:
  static :
    hint("Declaration of " & "SDLK_Q" & " already exists, not redeclaring")
when not declared(SDLK_R):
  when cast[cuint](114'i64) is static:
    const
      SDLK_R* = cast[cuint](114'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:112:9
  else:
    let SDLK_R* = cast[cuint](114'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:112:9
else:
  static :
    hint("Declaration of " & "SDLK_R" & " already exists, not redeclaring")
when not declared(SDLK_S):
  when cast[cuint](115'i64) is static:
    const
      SDLK_S* = cast[cuint](115'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:113:9
  else:
    let SDLK_S* = cast[cuint](115'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:113:9
else:
  static :
    hint("Declaration of " & "SDLK_S" & " already exists, not redeclaring")
when not declared(SDLK_T):
  when cast[cuint](116'i64) is static:
    const
      SDLK_T* = cast[cuint](116'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:114:9
  else:
    let SDLK_T* = cast[cuint](116'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:114:9
else:
  static :
    hint("Declaration of " & "SDLK_T" & " already exists, not redeclaring")
when not declared(SDLK_U):
  when cast[cuint](117'i64) is static:
    const
      SDLK_U* = cast[cuint](117'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:115:9
  else:
    let SDLK_U* = cast[cuint](117'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:115:9
else:
  static :
    hint("Declaration of " & "SDLK_U" & " already exists, not redeclaring")
when not declared(SDLK_V):
  when cast[cuint](118'i64) is static:
    const
      SDLK_V* = cast[cuint](118'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:116:9
  else:
    let SDLK_V* = cast[cuint](118'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:116:9
else:
  static :
    hint("Declaration of " & "SDLK_V" & " already exists, not redeclaring")
when not declared(SDLK_W):
  when cast[cuint](119'i64) is static:
    const
      SDLK_W* = cast[cuint](119'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:117:9
  else:
    let SDLK_W* = cast[cuint](119'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:117:9
else:
  static :
    hint("Declaration of " & "SDLK_W" & " already exists, not redeclaring")
when not declared(SDLK_X):
  when cast[cuint](120'i64) is static:
    const
      SDLK_X* = cast[cuint](120'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:118:9
  else:
    let SDLK_X* = cast[cuint](120'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:118:9
else:
  static :
    hint("Declaration of " & "SDLK_X" & " already exists, not redeclaring")
when not declared(SDLK_Y):
  when cast[cuint](121'i64) is static:
    const
      SDLK_Y* = cast[cuint](121'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:119:9
  else:
    let SDLK_Y* = cast[cuint](121'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:119:9
else:
  static :
    hint("Declaration of " & "SDLK_Y" & " already exists, not redeclaring")
when not declared(SDLK_Z):
  when cast[cuint](122'i64) is static:
    const
      SDLK_Z* = cast[cuint](122'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:120:9
  else:
    let SDLK_Z* = cast[cuint](122'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:120:9
else:
  static :
    hint("Declaration of " & "SDLK_Z" & " already exists, not redeclaring")
when not declared(SDLK_LEFTBRACE):
  when cast[cuint](123'i64) is static:
    const
      SDLK_LEFTBRACE* = cast[cuint](123'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:121:9
  else:
    let SDLK_LEFTBRACE* = cast[cuint](123'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:121:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_PIPE):
  when cast[cuint](124'i64) is static:
    const
      SDLK_PIPE* = cast[cuint](124'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:122:9
  else:
    let SDLK_PIPE* = cast[cuint](124'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:122:9
else:
  static :
    hint("Declaration of " & "SDLK_PIPE" & " already exists, not redeclaring")
when not declared(SDLK_RIGHTBRACE):
  when cast[cuint](125'i64) is static:
    const
      SDLK_RIGHTBRACE* = cast[cuint](125'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:123:9
  else:
    let SDLK_RIGHTBRACE* = cast[cuint](125'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:123:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_TILDE):
  when cast[cuint](126'i64) is static:
    const
      SDLK_TILDE* = cast[cuint](126'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:124:9
  else:
    let SDLK_TILDE* = cast[cuint](126'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:124:9
else:
  static :
    hint("Declaration of " & "SDLK_TILDE" & " already exists, not redeclaring")
when not declared(SDLK_DELETE):
  when cast[cuint](127'i64) is static:
    const
      SDLK_DELETE* = cast[cuint](127'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:125:9
  else:
    let SDLK_DELETE* = cast[cuint](127'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:125:9
else:
  static :
    hint("Declaration of " & "SDLK_DELETE" & " already exists, not redeclaring")
when not declared(SDLK_PLUSMINUS):
  when cast[cuint](177'i64) is static:
    const
      SDLK_PLUSMINUS* = cast[cuint](177'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:126:9
  else:
    let SDLK_PLUSMINUS* = cast[cuint](177'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:126:9
else:
  static :
    hint("Declaration of " & "SDLK_PLUSMINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_CAPSLOCK):
  when cast[cuint](1073741881'i64) is static:
    const
      SDLK_CAPSLOCK* = cast[cuint](1073741881'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:127:9
  else:
    let SDLK_CAPSLOCK* = cast[cuint](1073741881'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:127:9
else:
  static :
    hint("Declaration of " & "SDLK_CAPSLOCK" &
        " already exists, not redeclaring")
when not declared(SDLK_F1):
  when cast[cuint](1073741882'i64) is static:
    const
      SDLK_F1* = cast[cuint](1073741882'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:128:9
  else:
    let SDLK_F1* = cast[cuint](1073741882'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:128:9
else:
  static :
    hint("Declaration of " & "SDLK_F1" & " already exists, not redeclaring")
when not declared(SDLK_F2):
  when cast[cuint](1073741883'i64) is static:
    const
      SDLK_F2* = cast[cuint](1073741883'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:129:9
  else:
    let SDLK_F2* = cast[cuint](1073741883'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:129:9
else:
  static :
    hint("Declaration of " & "SDLK_F2" & " already exists, not redeclaring")
when not declared(SDLK_F3):
  when cast[cuint](1073741884'i64) is static:
    const
      SDLK_F3* = cast[cuint](1073741884'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:130:9
  else:
    let SDLK_F3* = cast[cuint](1073741884'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:130:9
else:
  static :
    hint("Declaration of " & "SDLK_F3" & " already exists, not redeclaring")
when not declared(SDLK_F4):
  when cast[cuint](1073741885'i64) is static:
    const
      SDLK_F4* = cast[cuint](1073741885'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:131:9
  else:
    let SDLK_F4* = cast[cuint](1073741885'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:131:9
else:
  static :
    hint("Declaration of " & "SDLK_F4" & " already exists, not redeclaring")
when not declared(SDLK_F5):
  when cast[cuint](1073741886'i64) is static:
    const
      SDLK_F5* = cast[cuint](1073741886'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:132:9
  else:
    let SDLK_F5* = cast[cuint](1073741886'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:132:9
else:
  static :
    hint("Declaration of " & "SDLK_F5" & " already exists, not redeclaring")
when not declared(SDLK_F6):
  when cast[cuint](1073741887'i64) is static:
    const
      SDLK_F6* = cast[cuint](1073741887'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:133:9
  else:
    let SDLK_F6* = cast[cuint](1073741887'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:133:9
else:
  static :
    hint("Declaration of " & "SDLK_F6" & " already exists, not redeclaring")
when not declared(SDLK_F7):
  when cast[cuint](1073741888'i64) is static:
    const
      SDLK_F7* = cast[cuint](1073741888'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:134:9
  else:
    let SDLK_F7* = cast[cuint](1073741888'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:134:9
else:
  static :
    hint("Declaration of " & "SDLK_F7" & " already exists, not redeclaring")
when not declared(SDLK_F8):
  when cast[cuint](1073741889'i64) is static:
    const
      SDLK_F8* = cast[cuint](1073741889'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:135:9
  else:
    let SDLK_F8* = cast[cuint](1073741889'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:135:9
else:
  static :
    hint("Declaration of " & "SDLK_F8" & " already exists, not redeclaring")
when not declared(SDLK_F9):
  when cast[cuint](1073741890'i64) is static:
    const
      SDLK_F9* = cast[cuint](1073741890'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:136:9
  else:
    let SDLK_F9* = cast[cuint](1073741890'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:136:9
else:
  static :
    hint("Declaration of " & "SDLK_F9" & " already exists, not redeclaring")
when not declared(SDLK_F10):
  when cast[cuint](1073741891'i64) is static:
    const
      SDLK_F10* = cast[cuint](1073741891'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:137:9
  else:
    let SDLK_F10* = cast[cuint](1073741891'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:137:9
else:
  static :
    hint("Declaration of " & "SDLK_F10" & " already exists, not redeclaring")
when not declared(SDLK_F11):
  when cast[cuint](1073741892'i64) is static:
    const
      SDLK_F11* = cast[cuint](1073741892'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:138:9
  else:
    let SDLK_F11* = cast[cuint](1073741892'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:138:9
else:
  static :
    hint("Declaration of " & "SDLK_F11" & " already exists, not redeclaring")
when not declared(SDLK_F12):
  when cast[cuint](1073741893'i64) is static:
    const
      SDLK_F12* = cast[cuint](1073741893'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:139:9
  else:
    let SDLK_F12* = cast[cuint](1073741893'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:139:9
else:
  static :
    hint("Declaration of " & "SDLK_F12" & " already exists, not redeclaring")
when not declared(SDLK_PRINTSCREEN):
  when cast[cuint](1073741894'i64) is static:
    const
      SDLK_PRINTSCREEN* = cast[cuint](1073741894'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:140:9
  else:
    let SDLK_PRINTSCREEN* = cast[cuint](1073741894'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:140:9
else:
  static :
    hint("Declaration of " & "SDLK_PRINTSCREEN" &
        " already exists, not redeclaring")
when not declared(SDLK_SCROLLLOCK):
  when cast[cuint](1073741895'i64) is static:
    const
      SDLK_SCROLLLOCK* = cast[cuint](1073741895'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:141:9
  else:
    let SDLK_SCROLLLOCK* = cast[cuint](1073741895'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:141:9
else:
  static :
    hint("Declaration of " & "SDLK_SCROLLLOCK" &
        " already exists, not redeclaring")
when not declared(SDLK_PAUSE):
  when cast[cuint](1073741896'i64) is static:
    const
      SDLK_PAUSE* = cast[cuint](1073741896'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:142:9
  else:
    let SDLK_PAUSE* = cast[cuint](1073741896'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:142:9
else:
  static :
    hint("Declaration of " & "SDLK_PAUSE" & " already exists, not redeclaring")
when not declared(SDLK_INSERT):
  when cast[cuint](1073741897'i64) is static:
    const
      SDLK_INSERT* = cast[cuint](1073741897'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:143:9
  else:
    let SDLK_INSERT* = cast[cuint](1073741897'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:143:9
else:
  static :
    hint("Declaration of " & "SDLK_INSERT" & " already exists, not redeclaring")
when not declared(SDLK_HOME):
  when cast[cuint](1073741898'i64) is static:
    const
      SDLK_HOME* = cast[cuint](1073741898'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:144:9
  else:
    let SDLK_HOME* = cast[cuint](1073741898'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:144:9
else:
  static :
    hint("Declaration of " & "SDLK_HOME" & " already exists, not redeclaring")
when not declared(SDLK_PAGEUP):
  when cast[cuint](1073741899'i64) is static:
    const
      SDLK_PAGEUP* = cast[cuint](1073741899'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:145:9
  else:
    let SDLK_PAGEUP* = cast[cuint](1073741899'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:145:9
else:
  static :
    hint("Declaration of " & "SDLK_PAGEUP" & " already exists, not redeclaring")
when not declared(SDLK_END):
  when cast[cuint](1073741901'i64) is static:
    const
      SDLK_END* = cast[cuint](1073741901'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:146:9
  else:
    let SDLK_END* = cast[cuint](1073741901'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:146:9
else:
  static :
    hint("Declaration of " & "SDLK_END" & " already exists, not redeclaring")
when not declared(SDLK_PAGEDOWN):
  when cast[cuint](1073741902'i64) is static:
    const
      SDLK_PAGEDOWN* = cast[cuint](1073741902'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:147:9
  else:
    let SDLK_PAGEDOWN* = cast[cuint](1073741902'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:147:9
else:
  static :
    hint("Declaration of " & "SDLK_PAGEDOWN" &
        " already exists, not redeclaring")
when not declared(SDLK_RIGHT):
  when cast[cuint](1073741903'i64) is static:
    const
      SDLK_RIGHT* = cast[cuint](1073741903'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:148:9
  else:
    let SDLK_RIGHT* = cast[cuint](1073741903'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:148:9
else:
  static :
    hint("Declaration of " & "SDLK_RIGHT" & " already exists, not redeclaring")
when not declared(SDLK_LEFT):
  when cast[cuint](1073741904'i64) is static:
    const
      SDLK_LEFT* = cast[cuint](1073741904'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:149:9
  else:
    let SDLK_LEFT* = cast[cuint](1073741904'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:149:9
else:
  static :
    hint("Declaration of " & "SDLK_LEFT" & " already exists, not redeclaring")
when not declared(SDLK_DOWN):
  when cast[cuint](1073741905'i64) is static:
    const
      SDLK_DOWN* = cast[cuint](1073741905'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:150:9
  else:
    let SDLK_DOWN* = cast[cuint](1073741905'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:150:9
else:
  static :
    hint("Declaration of " & "SDLK_DOWN" & " already exists, not redeclaring")
when not declared(SDLK_UP):
  when cast[cuint](1073741906'i64) is static:
    const
      SDLK_UP* = cast[cuint](1073741906'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:151:9
  else:
    let SDLK_UP* = cast[cuint](1073741906'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:151:9
else:
  static :
    hint("Declaration of " & "SDLK_UP" & " already exists, not redeclaring")
when not declared(SDLK_NUMLOCKCLEAR):
  when cast[cuint](1073741907'i64) is static:
    const
      SDLK_NUMLOCKCLEAR* = cast[cuint](1073741907'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:152:9
  else:
    let SDLK_NUMLOCKCLEAR* = cast[cuint](1073741907'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:152:9
else:
  static :
    hint("Declaration of " & "SDLK_NUMLOCKCLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DIVIDE):
  when cast[cuint](1073741908'i64) is static:
    const
      SDLK_KP_DIVIDE* = cast[cuint](1073741908'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:153:9
  else:
    let SDLK_KP_DIVIDE* = cast[cuint](1073741908'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:153:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DIVIDE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MULTIPLY):
  when cast[cuint](1073741909'i64) is static:
    const
      SDLK_KP_MULTIPLY* = cast[cuint](1073741909'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:154:9
  else:
    let SDLK_KP_MULTIPLY* = cast[cuint](1073741909'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:154:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MULTIPLY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MINUS):
  when cast[cuint](1073741910'i64) is static:
    const
      SDLK_KP_MINUS* = cast[cuint](1073741910'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:155:9
  else:
    let SDLK_KP_MINUS* = cast[cuint](1073741910'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:155:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PLUS):
  when cast[cuint](1073741911'i64) is static:
    const
      SDLK_KP_PLUS* = cast[cuint](1073741911'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:156:9
  else:
    let SDLK_KP_PLUS* = cast[cuint](1073741911'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:156:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PLUS" & " already exists, not redeclaring")
when not declared(SDLK_KP_ENTER):
  when cast[cuint](1073741912'i64) is static:
    const
      SDLK_KP_ENTER* = cast[cuint](1073741912'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:157:9
  else:
    let SDLK_KP_ENTER* = cast[cuint](1073741912'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:157:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_ENTER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_1):
  when cast[cuint](1073741913'i64) is static:
    const
      SDLK_KP_1* = cast[cuint](1073741913'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:158:9
  else:
    let SDLK_KP_1* = cast[cuint](1073741913'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:158:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_1" & " already exists, not redeclaring")
when not declared(SDLK_KP_2):
  when cast[cuint](1073741914'i64) is static:
    const
      SDLK_KP_2* = cast[cuint](1073741914'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:159:9
  else:
    let SDLK_KP_2* = cast[cuint](1073741914'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:159:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_2" & " already exists, not redeclaring")
when not declared(SDLK_KP_3):
  when cast[cuint](1073741915'i64) is static:
    const
      SDLK_KP_3* = cast[cuint](1073741915'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:160:9
  else:
    let SDLK_KP_3* = cast[cuint](1073741915'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:160:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_3" & " already exists, not redeclaring")
when not declared(SDLK_KP_4):
  when cast[cuint](1073741916'i64) is static:
    const
      SDLK_KP_4* = cast[cuint](1073741916'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:161:9
  else:
    let SDLK_KP_4* = cast[cuint](1073741916'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:161:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_4" & " already exists, not redeclaring")
when not declared(SDLK_KP_5):
  when cast[cuint](1073741917'i64) is static:
    const
      SDLK_KP_5* = cast[cuint](1073741917'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:162:9
  else:
    let SDLK_KP_5* = cast[cuint](1073741917'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:162:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_5" & " already exists, not redeclaring")
when not declared(SDLK_KP_6):
  when cast[cuint](1073741918'i64) is static:
    const
      SDLK_KP_6* = cast[cuint](1073741918'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:163:9
  else:
    let SDLK_KP_6* = cast[cuint](1073741918'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:163:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_6" & " already exists, not redeclaring")
when not declared(SDLK_KP_7):
  when cast[cuint](1073741919'i64) is static:
    const
      SDLK_KP_7* = cast[cuint](1073741919'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:164:9
  else:
    let SDLK_KP_7* = cast[cuint](1073741919'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:164:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_7" & " already exists, not redeclaring")
when not declared(SDLK_KP_8):
  when cast[cuint](1073741920'i64) is static:
    const
      SDLK_KP_8* = cast[cuint](1073741920'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:165:9
  else:
    let SDLK_KP_8* = cast[cuint](1073741920'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:165:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_8" & " already exists, not redeclaring")
when not declared(SDLK_KP_9):
  when cast[cuint](1073741921'i64) is static:
    const
      SDLK_KP_9* = cast[cuint](1073741921'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:166:9
  else:
    let SDLK_KP_9* = cast[cuint](1073741921'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:166:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_9" & " already exists, not redeclaring")
when not declared(SDLK_KP_0):
  when cast[cuint](1073741922'i64) is static:
    const
      SDLK_KP_0* = cast[cuint](1073741922'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:167:9
  else:
    let SDLK_KP_0* = cast[cuint](1073741922'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:167:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_0" & " already exists, not redeclaring")
when not declared(SDLK_KP_PERIOD):
  when cast[cuint](1073741923'i64) is static:
    const
      SDLK_KP_PERIOD* = cast[cuint](1073741923'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:168:9
  else:
    let SDLK_KP_PERIOD* = cast[cuint](1073741923'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:168:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PERIOD" &
        " already exists, not redeclaring")
when not declared(SDLK_APPLICATION):
  when cast[cuint](1073741925'i64) is static:
    const
      SDLK_APPLICATION* = cast[cuint](1073741925'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:169:9
  else:
    let SDLK_APPLICATION* = cast[cuint](1073741925'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:169:9
else:
  static :
    hint("Declaration of " & "SDLK_APPLICATION" &
        " already exists, not redeclaring")
when not declared(SDLK_POWER):
  when cast[cuint](1073741926'i64) is static:
    const
      SDLK_POWER* = cast[cuint](1073741926'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:170:9
  else:
    let SDLK_POWER* = cast[cuint](1073741926'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:170:9
else:
  static :
    hint("Declaration of " & "SDLK_POWER" & " already exists, not redeclaring")
when not declared(SDLK_KP_EQUALS):
  when cast[cuint](1073741927'i64) is static:
    const
      SDLK_KP_EQUALS* = cast[cuint](1073741927'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:171:9
  else:
    let SDLK_KP_EQUALS* = cast[cuint](1073741927'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:171:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EQUALS" &
        " already exists, not redeclaring")
when not declared(SDLK_F13):
  when cast[cuint](1073741928'i64) is static:
    const
      SDLK_F13* = cast[cuint](1073741928'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:172:9
  else:
    let SDLK_F13* = cast[cuint](1073741928'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:172:9
else:
  static :
    hint("Declaration of " & "SDLK_F13" & " already exists, not redeclaring")
when not declared(SDLK_F14):
  when cast[cuint](1073741929'i64) is static:
    const
      SDLK_F14* = cast[cuint](1073741929'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:173:9
  else:
    let SDLK_F14* = cast[cuint](1073741929'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:173:9
else:
  static :
    hint("Declaration of " & "SDLK_F14" & " already exists, not redeclaring")
when not declared(SDLK_F15):
  when cast[cuint](1073741930'i64) is static:
    const
      SDLK_F15* = cast[cuint](1073741930'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:174:9
  else:
    let SDLK_F15* = cast[cuint](1073741930'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:174:9
else:
  static :
    hint("Declaration of " & "SDLK_F15" & " already exists, not redeclaring")
when not declared(SDLK_F16):
  when cast[cuint](1073741931'i64) is static:
    const
      SDLK_F16* = cast[cuint](1073741931'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:175:9
  else:
    let SDLK_F16* = cast[cuint](1073741931'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:175:9
else:
  static :
    hint("Declaration of " & "SDLK_F16" & " already exists, not redeclaring")
when not declared(SDLK_F17):
  when cast[cuint](1073741932'i64) is static:
    const
      SDLK_F17* = cast[cuint](1073741932'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:176:9
  else:
    let SDLK_F17* = cast[cuint](1073741932'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:176:9
else:
  static :
    hint("Declaration of " & "SDLK_F17" & " already exists, not redeclaring")
when not declared(SDLK_F18):
  when cast[cuint](1073741933'i64) is static:
    const
      SDLK_F18* = cast[cuint](1073741933'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:177:9
  else:
    let SDLK_F18* = cast[cuint](1073741933'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:177:9
else:
  static :
    hint("Declaration of " & "SDLK_F18" & " already exists, not redeclaring")
when not declared(SDLK_F19):
  when cast[cuint](1073741934'i64) is static:
    const
      SDLK_F19* = cast[cuint](1073741934'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:178:9
  else:
    let SDLK_F19* = cast[cuint](1073741934'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:178:9
else:
  static :
    hint("Declaration of " & "SDLK_F19" & " already exists, not redeclaring")
when not declared(SDLK_F20):
  when cast[cuint](1073741935'i64) is static:
    const
      SDLK_F20* = cast[cuint](1073741935'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:179:9
  else:
    let SDLK_F20* = cast[cuint](1073741935'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:179:9
else:
  static :
    hint("Declaration of " & "SDLK_F20" & " already exists, not redeclaring")
when not declared(SDLK_F21):
  when cast[cuint](1073741936'i64) is static:
    const
      SDLK_F21* = cast[cuint](1073741936'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:180:9
  else:
    let SDLK_F21* = cast[cuint](1073741936'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:180:9
else:
  static :
    hint("Declaration of " & "SDLK_F21" & " already exists, not redeclaring")
when not declared(SDLK_F22):
  when cast[cuint](1073741937'i64) is static:
    const
      SDLK_F22* = cast[cuint](1073741937'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:181:9
  else:
    let SDLK_F22* = cast[cuint](1073741937'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:181:9
else:
  static :
    hint("Declaration of " & "SDLK_F22" & " already exists, not redeclaring")
when not declared(SDLK_F23):
  when cast[cuint](1073741938'i64) is static:
    const
      SDLK_F23* = cast[cuint](1073741938'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:182:9
  else:
    let SDLK_F23* = cast[cuint](1073741938'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:182:9
else:
  static :
    hint("Declaration of " & "SDLK_F23" & " already exists, not redeclaring")
when not declared(SDLK_F24):
  when cast[cuint](1073741939'i64) is static:
    const
      SDLK_F24* = cast[cuint](1073741939'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:183:9
  else:
    let SDLK_F24* = cast[cuint](1073741939'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:183:9
else:
  static :
    hint("Declaration of " & "SDLK_F24" & " already exists, not redeclaring")
when not declared(SDLK_EXECUTE):
  when cast[cuint](1073741940'i64) is static:
    const
      SDLK_EXECUTE* = cast[cuint](1073741940'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:184:9
  else:
    let SDLK_EXECUTE* = cast[cuint](1073741940'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:184:9
else:
  static :
    hint("Declaration of " & "SDLK_EXECUTE" & " already exists, not redeclaring")
when not declared(SDLK_HELP):
  when cast[cuint](1073741941'i64) is static:
    const
      SDLK_HELP* = cast[cuint](1073741941'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:185:9
  else:
    let SDLK_HELP* = cast[cuint](1073741941'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:185:9
else:
  static :
    hint("Declaration of " & "SDLK_HELP" & " already exists, not redeclaring")
when not declared(SDLK_MENU):
  when cast[cuint](1073741942'i64) is static:
    const
      SDLK_MENU* = cast[cuint](1073741942'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:186:9
  else:
    let SDLK_MENU* = cast[cuint](1073741942'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:186:9
else:
  static :
    hint("Declaration of " & "SDLK_MENU" & " already exists, not redeclaring")
when not declared(SDLK_SELECT):
  when cast[cuint](1073741943'i64) is static:
    const
      SDLK_SELECT* = cast[cuint](1073741943'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:187:9
  else:
    let SDLK_SELECT* = cast[cuint](1073741943'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:187:9
else:
  static :
    hint("Declaration of " & "SDLK_SELECT" & " already exists, not redeclaring")
when not declared(SDLK_STOP):
  when cast[cuint](1073741944'i64) is static:
    const
      SDLK_STOP* = cast[cuint](1073741944'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:188:9
  else:
    let SDLK_STOP* = cast[cuint](1073741944'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:188:9
else:
  static :
    hint("Declaration of " & "SDLK_STOP" & " already exists, not redeclaring")
when not declared(SDLK_AGAIN):
  when cast[cuint](1073741945'i64) is static:
    const
      SDLK_AGAIN* = cast[cuint](1073741945'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:189:9
  else:
    let SDLK_AGAIN* = cast[cuint](1073741945'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:189:9
else:
  static :
    hint("Declaration of " & "SDLK_AGAIN" & " already exists, not redeclaring")
when not declared(SDLK_UNDO):
  when cast[cuint](1073741946'i64) is static:
    const
      SDLK_UNDO* = cast[cuint](1073741946'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:190:9
  else:
    let SDLK_UNDO* = cast[cuint](1073741946'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:190:9
else:
  static :
    hint("Declaration of " & "SDLK_UNDO" & " already exists, not redeclaring")
when not declared(SDLK_CUT):
  when cast[cuint](1073741947'i64) is static:
    const
      SDLK_CUT* = cast[cuint](1073741947'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:191:9
  else:
    let SDLK_CUT* = cast[cuint](1073741947'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:191:9
else:
  static :
    hint("Declaration of " & "SDLK_CUT" & " already exists, not redeclaring")
when not declared(SDLK_COPY):
  when cast[cuint](1073741948'i64) is static:
    const
      SDLK_COPY* = cast[cuint](1073741948'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:192:9
  else:
    let SDLK_COPY* = cast[cuint](1073741948'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:192:9
else:
  static :
    hint("Declaration of " & "SDLK_COPY" & " already exists, not redeclaring")
when not declared(SDLK_PASTE):
  when cast[cuint](1073741949'i64) is static:
    const
      SDLK_PASTE* = cast[cuint](1073741949'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:193:9
  else:
    let SDLK_PASTE* = cast[cuint](1073741949'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:193:9
else:
  static :
    hint("Declaration of " & "SDLK_PASTE" & " already exists, not redeclaring")
when not declared(SDLK_FIND):
  when cast[cuint](1073741950'i64) is static:
    const
      SDLK_FIND* = cast[cuint](1073741950'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:194:9
  else:
    let SDLK_FIND* = cast[cuint](1073741950'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:194:9
else:
  static :
    hint("Declaration of " & "SDLK_FIND" & " already exists, not redeclaring")
when not declared(SDLK_MUTE):
  when cast[cuint](1073741951'i64) is static:
    const
      SDLK_MUTE* = cast[cuint](1073741951'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:195:9
  else:
    let SDLK_MUTE* = cast[cuint](1073741951'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:195:9
else:
  static :
    hint("Declaration of " & "SDLK_MUTE" & " already exists, not redeclaring")
when not declared(SDLK_VOLUMEUP):
  when cast[cuint](1073741952'i64) is static:
    const
      SDLK_VOLUMEUP* = cast[cuint](1073741952'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:196:9
  else:
    let SDLK_VOLUMEUP* = cast[cuint](1073741952'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:196:9
else:
  static :
    hint("Declaration of " & "SDLK_VOLUMEUP" &
        " already exists, not redeclaring")
when not declared(SDLK_VOLUMEDOWN):
  when cast[cuint](1073741953'i64) is static:
    const
      SDLK_VOLUMEDOWN* = cast[cuint](1073741953'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:197:9
  else:
    let SDLK_VOLUMEDOWN* = cast[cuint](1073741953'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:197:9
else:
  static :
    hint("Declaration of " & "SDLK_VOLUMEDOWN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_COMMA):
  when cast[cuint](1073741957'i64) is static:
    const
      SDLK_KP_COMMA* = cast[cuint](1073741957'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:198:9
  else:
    let SDLK_KP_COMMA* = cast[cuint](1073741957'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:198:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_COMMA" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_EQUALSAS400):
  when cast[cuint](1073741958'i64) is static:
    const
      SDLK_KP_EQUALSAS400* = cast[cuint](1073741958'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:199:9
  else:
    let SDLK_KP_EQUALSAS400* = cast[cuint](1073741958'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:199:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EQUALSAS400" &
        " already exists, not redeclaring")
when not declared(SDLK_ALTERASE):
  when cast[cuint](1073741977'i64) is static:
    const
      SDLK_ALTERASE* = cast[cuint](1073741977'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:200:9
  else:
    let SDLK_ALTERASE* = cast[cuint](1073741977'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:200:9
else:
  static :
    hint("Declaration of " & "SDLK_ALTERASE" &
        " already exists, not redeclaring")
when not declared(SDLK_SYSREQ):
  when cast[cuint](1073741978'i64) is static:
    const
      SDLK_SYSREQ* = cast[cuint](1073741978'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:201:9
  else:
    let SDLK_SYSREQ* = cast[cuint](1073741978'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:201:9
else:
  static :
    hint("Declaration of " & "SDLK_SYSREQ" & " already exists, not redeclaring")
when not declared(SDLK_CANCEL):
  when cast[cuint](1073741979'i64) is static:
    const
      SDLK_CANCEL* = cast[cuint](1073741979'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:202:9
  else:
    let SDLK_CANCEL* = cast[cuint](1073741979'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:202:9
else:
  static :
    hint("Declaration of " & "SDLK_CANCEL" & " already exists, not redeclaring")
when not declared(SDLK_CLEAR):
  when cast[cuint](1073741980'i64) is static:
    const
      SDLK_CLEAR* = cast[cuint](1073741980'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:203:9
  else:
    let SDLK_CLEAR* = cast[cuint](1073741980'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:203:9
else:
  static :
    hint("Declaration of " & "SDLK_CLEAR" & " already exists, not redeclaring")
when not declared(SDLK_PRIOR):
  when cast[cuint](1073741981'i64) is static:
    const
      SDLK_PRIOR* = cast[cuint](1073741981'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:204:9
  else:
    let SDLK_PRIOR* = cast[cuint](1073741981'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:204:9
else:
  static :
    hint("Declaration of " & "SDLK_PRIOR" & " already exists, not redeclaring")
when not declared(SDLK_RETURN2):
  when cast[cuint](1073741982'i64) is static:
    const
      SDLK_RETURN2* = cast[cuint](1073741982'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:205:9
  else:
    let SDLK_RETURN2* = cast[cuint](1073741982'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:205:9
else:
  static :
    hint("Declaration of " & "SDLK_RETURN2" & " already exists, not redeclaring")
when not declared(SDLK_SEPARATOR):
  when cast[cuint](1073741983'i64) is static:
    const
      SDLK_SEPARATOR* = cast[cuint](1073741983'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:206:9
  else:
    let SDLK_SEPARATOR* = cast[cuint](1073741983'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:206:9
else:
  static :
    hint("Declaration of " & "SDLK_SEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_OUT):
  when cast[cuint](1073741984'i64) is static:
    const
      SDLK_OUT* = cast[cuint](1073741984'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:207:9
  else:
    let SDLK_OUT* = cast[cuint](1073741984'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:207:9
else:
  static :
    hint("Declaration of " & "SDLK_OUT" & " already exists, not redeclaring")
when not declared(SDLK_OPER):
  when cast[cuint](1073741985'i64) is static:
    const
      SDLK_OPER* = cast[cuint](1073741985'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:208:9
  else:
    let SDLK_OPER* = cast[cuint](1073741985'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:208:9
else:
  static :
    hint("Declaration of " & "SDLK_OPER" & " already exists, not redeclaring")
when not declared(SDLK_CLEARAGAIN):
  when cast[cuint](1073741986'i64) is static:
    const
      SDLK_CLEARAGAIN* = cast[cuint](1073741986'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:209:9
  else:
    let SDLK_CLEARAGAIN* = cast[cuint](1073741986'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:209:9
else:
  static :
    hint("Declaration of " & "SDLK_CLEARAGAIN" &
        " already exists, not redeclaring")
when not declared(SDLK_CRSEL):
  when cast[cuint](1073741987'i64) is static:
    const
      SDLK_CRSEL* = cast[cuint](1073741987'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:210:9
  else:
    let SDLK_CRSEL* = cast[cuint](1073741987'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:210:9
else:
  static :
    hint("Declaration of " & "SDLK_CRSEL" & " already exists, not redeclaring")
when not declared(SDLK_EXSEL):
  when cast[cuint](1073741988'i64) is static:
    const
      SDLK_EXSEL* = cast[cuint](1073741988'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:211:9
  else:
    let SDLK_EXSEL* = cast[cuint](1073741988'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:211:9
else:
  static :
    hint("Declaration of " & "SDLK_EXSEL" & " already exists, not redeclaring")
when not declared(SDLK_KP_00):
  when cast[cuint](1073742000'i64) is static:
    const
      SDLK_KP_00* = cast[cuint](1073742000'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:212:9
  else:
    let SDLK_KP_00* = cast[cuint](1073742000'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:212:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_00" & " already exists, not redeclaring")
when not declared(SDLK_KP_000):
  when cast[cuint](1073742001'i64) is static:
    const
      SDLK_KP_000* = cast[cuint](1073742001'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:213:9
  else:
    let SDLK_KP_000* = cast[cuint](1073742001'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:213:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_000" & " already exists, not redeclaring")
when not declared(SDLK_THOUSANDSSEPARATOR):
  when cast[cuint](1073742002'i64) is static:
    const
      SDLK_THOUSANDSSEPARATOR* = cast[cuint](1073742002'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:214:9
  else:
    let SDLK_THOUSANDSSEPARATOR* = cast[cuint](1073742002'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:214:9
else:
  static :
    hint("Declaration of " & "SDLK_THOUSANDSSEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_DECIMALSEPARATOR):
  when cast[cuint](1073742003'i64) is static:
    const
      SDLK_DECIMALSEPARATOR* = cast[cuint](1073742003'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:215:9
  else:
    let SDLK_DECIMALSEPARATOR* = cast[cuint](1073742003'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:215:9
else:
  static :
    hint("Declaration of " & "SDLK_DECIMALSEPARATOR" &
        " already exists, not redeclaring")
when not declared(SDLK_CURRENCYUNIT):
  when cast[cuint](1073742004'i64) is static:
    const
      SDLK_CURRENCYUNIT* = cast[cuint](1073742004'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:216:9
  else:
    let SDLK_CURRENCYUNIT* = cast[cuint](1073742004'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:216:9
else:
  static :
    hint("Declaration of " & "SDLK_CURRENCYUNIT" &
        " already exists, not redeclaring")
when not declared(SDLK_CURRENCYSUBUNIT):
  when cast[cuint](1073742005'i64) is static:
    const
      SDLK_CURRENCYSUBUNIT* = cast[cuint](1073742005'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:217:9
  else:
    let SDLK_CURRENCYSUBUNIT* = cast[cuint](1073742005'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:217:9
else:
  static :
    hint("Declaration of " & "SDLK_CURRENCYSUBUNIT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LEFTPAREN):
  when cast[cuint](1073742006'i64) is static:
    const
      SDLK_KP_LEFTPAREN* = cast[cuint](1073742006'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:218:9
  else:
    let SDLK_KP_LEFTPAREN* = cast[cuint](1073742006'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:218:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LEFTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_RIGHTPAREN):
  when cast[cuint](1073742007'i64) is static:
    const
      SDLK_KP_RIGHTPAREN* = cast[cuint](1073742007'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:219:9
  else:
    let SDLK_KP_RIGHTPAREN* = cast[cuint](1073742007'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:219:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_RIGHTPAREN" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LEFTBRACE):
  when cast[cuint](1073742008'i64) is static:
    const
      SDLK_KP_LEFTBRACE* = cast[cuint](1073742008'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:220:9
  else:
    let SDLK_KP_LEFTBRACE* = cast[cuint](1073742008'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:220:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LEFTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_RIGHTBRACE):
  when cast[cuint](1073742009'i64) is static:
    const
      SDLK_KP_RIGHTBRACE* = cast[cuint](1073742009'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:221:9
  else:
    let SDLK_KP_RIGHTBRACE* = cast[cuint](1073742009'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:221:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_RIGHTBRACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_TAB):
  when cast[cuint](1073742010'i64) is static:
    const
      SDLK_KP_TAB* = cast[cuint](1073742010'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:222:9
  else:
    let SDLK_KP_TAB* = cast[cuint](1073742010'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:222:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_TAB" & " already exists, not redeclaring")
when not declared(SDLK_KP_BACKSPACE):
  when cast[cuint](1073742011'i64) is static:
    const
      SDLK_KP_BACKSPACE* = cast[cuint](1073742011'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:223:9
  else:
    let SDLK_KP_BACKSPACE* = cast[cuint](1073742011'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:223:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_BACKSPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_A):
  when cast[cuint](1073742012'i64) is static:
    const
      SDLK_KP_A* = cast[cuint](1073742012'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:224:9
  else:
    let SDLK_KP_A* = cast[cuint](1073742012'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:224:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_A" & " already exists, not redeclaring")
when not declared(SDLK_KP_B):
  when cast[cuint](1073742013'i64) is static:
    const
      SDLK_KP_B* = cast[cuint](1073742013'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:225:9
  else:
    let SDLK_KP_B* = cast[cuint](1073742013'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:225:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_B" & " already exists, not redeclaring")
when not declared(SDLK_KP_C):
  when cast[cuint](1073742014'i64) is static:
    const
      SDLK_KP_C* = cast[cuint](1073742014'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:226:9
  else:
    let SDLK_KP_C* = cast[cuint](1073742014'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:226:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_C" & " already exists, not redeclaring")
when not declared(SDLK_KP_D):
  when cast[cuint](1073742015'i64) is static:
    const
      SDLK_KP_D* = cast[cuint](1073742015'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:227:9
  else:
    let SDLK_KP_D* = cast[cuint](1073742015'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:227:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_D" & " already exists, not redeclaring")
when not declared(SDLK_KP_E):
  when cast[cuint](1073742016'i64) is static:
    const
      SDLK_KP_E* = cast[cuint](1073742016'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:228:9
  else:
    let SDLK_KP_E* = cast[cuint](1073742016'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:228:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_E" & " already exists, not redeclaring")
when not declared(SDLK_KP_F):
  when cast[cuint](1073742017'i64) is static:
    const
      SDLK_KP_F* = cast[cuint](1073742017'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:229:9
  else:
    let SDLK_KP_F* = cast[cuint](1073742017'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:229:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_F" & " already exists, not redeclaring")
when not declared(SDLK_KP_XOR):
  when cast[cuint](1073742018'i64) is static:
    const
      SDLK_KP_XOR* = cast[cuint](1073742018'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:230:9
  else:
    let SDLK_KP_XOR* = cast[cuint](1073742018'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:230:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_XOR" & " already exists, not redeclaring")
when not declared(SDLK_KP_POWER):
  when cast[cuint](1073742019'i64) is static:
    const
      SDLK_KP_POWER* = cast[cuint](1073742019'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:231:9
  else:
    let SDLK_KP_POWER* = cast[cuint](1073742019'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:231:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_POWER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PERCENT):
  when cast[cuint](1073742020'i64) is static:
    const
      SDLK_KP_PERCENT* = cast[cuint](1073742020'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:232:9
  else:
    let SDLK_KP_PERCENT* = cast[cuint](1073742020'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:232:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PERCENT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_LESS):
  when cast[cuint](1073742021'i64) is static:
    const
      SDLK_KP_LESS* = cast[cuint](1073742021'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:233:9
  else:
    let SDLK_KP_LESS* = cast[cuint](1073742021'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:233:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_LESS" & " already exists, not redeclaring")
when not declared(SDLK_KP_GREATER):
  when cast[cuint](1073742022'i64) is static:
    const
      SDLK_KP_GREATER* = cast[cuint](1073742022'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:234:9
  else:
    let SDLK_KP_GREATER* = cast[cuint](1073742022'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:234:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_GREATER" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_AMPERSAND):
  when cast[cuint](1073742023'i64) is static:
    const
      SDLK_KP_AMPERSAND* = cast[cuint](1073742023'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:235:9
  else:
    let SDLK_KP_AMPERSAND* = cast[cuint](1073742023'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:235:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_AMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DBLAMPERSAND):
  when cast[cuint](1073742024'i64) is static:
    const
      SDLK_KP_DBLAMPERSAND* = cast[cuint](1073742024'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:236:9
  else:
    let SDLK_KP_DBLAMPERSAND* = cast[cuint](1073742024'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:236:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DBLAMPERSAND" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_VERTICALBAR):
  when cast[cuint](1073742025'i64) is static:
    const
      SDLK_KP_VERTICALBAR* = cast[cuint](1073742025'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:237:9
  else:
    let SDLK_KP_VERTICALBAR* = cast[cuint](1073742025'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:237:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_VERTICALBAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DBLVERTICALBAR):
  when cast[cuint](1073742026'i64) is static:
    const
      SDLK_KP_DBLVERTICALBAR* = cast[cuint](1073742026'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:238:9
  else:
    let SDLK_KP_DBLVERTICALBAR* = cast[cuint](1073742026'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:238:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DBLVERTICALBAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_COLON):
  when cast[cuint](1073742027'i64) is static:
    const
      SDLK_KP_COLON* = cast[cuint](1073742027'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:239:9
  else:
    let SDLK_KP_COLON* = cast[cuint](1073742027'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:239:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_COLON" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_HASH):
  when cast[cuint](1073742028'i64) is static:
    const
      SDLK_KP_HASH* = cast[cuint](1073742028'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:240:9
  else:
    let SDLK_KP_HASH* = cast[cuint](1073742028'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:240:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_HASH" & " already exists, not redeclaring")
when not declared(SDLK_KP_SPACE):
  when cast[cuint](1073742029'i64) is static:
    const
      SDLK_KP_SPACE* = cast[cuint](1073742029'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:241:9
  else:
    let SDLK_KP_SPACE* = cast[cuint](1073742029'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:241:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_SPACE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_AT):
  when cast[cuint](1073742030'i64) is static:
    const
      SDLK_KP_AT* = cast[cuint](1073742030'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:242:9
  else:
    let SDLK_KP_AT* = cast[cuint](1073742030'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:242:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_AT" & " already exists, not redeclaring")
when not declared(SDLK_KP_EXCLAM):
  when cast[cuint](1073742031'i64) is static:
    const
      SDLK_KP_EXCLAM* = cast[cuint](1073742031'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:243:9
  else:
    let SDLK_KP_EXCLAM* = cast[cuint](1073742031'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:243:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_EXCLAM" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMSTORE):
  when cast[cuint](1073742032'i64) is static:
    const
      SDLK_KP_MEMSTORE* = cast[cuint](1073742032'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:244:9
  else:
    let SDLK_KP_MEMSTORE* = cast[cuint](1073742032'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:244:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMSTORE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMRECALL):
  when cast[cuint](1073742033'i64) is static:
    const
      SDLK_KP_MEMRECALL* = cast[cuint](1073742033'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:245:9
  else:
    let SDLK_KP_MEMRECALL* = cast[cuint](1073742033'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:245:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMRECALL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMCLEAR):
  when cast[cuint](1073742034'i64) is static:
    const
      SDLK_KP_MEMCLEAR* = cast[cuint](1073742034'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:246:9
  else:
    let SDLK_KP_MEMCLEAR* = cast[cuint](1073742034'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:246:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMCLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMADD):
  when cast[cuint](1073742035'i64) is static:
    const
      SDLK_KP_MEMADD* = cast[cuint](1073742035'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:247:9
  else:
    let SDLK_KP_MEMADD* = cast[cuint](1073742035'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:247:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMADD" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMSUBTRACT):
  when cast[cuint](1073742036'i64) is static:
    const
      SDLK_KP_MEMSUBTRACT* = cast[cuint](1073742036'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:248:9
  else:
    let SDLK_KP_MEMSUBTRACT* = cast[cuint](1073742036'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:248:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMSUBTRACT" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMMULTIPLY):
  when cast[cuint](1073742037'i64) is static:
    const
      SDLK_KP_MEMMULTIPLY* = cast[cuint](1073742037'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:249:9
  else:
    let SDLK_KP_MEMMULTIPLY* = cast[cuint](1073742037'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:249:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMMULTIPLY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_MEMDIVIDE):
  when cast[cuint](1073742038'i64) is static:
    const
      SDLK_KP_MEMDIVIDE* = cast[cuint](1073742038'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:250:9
  else:
    let SDLK_KP_MEMDIVIDE* = cast[cuint](1073742038'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:250:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_MEMDIVIDE" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_PLUSMINUS):
  when cast[cuint](1073742039'i64) is static:
    const
      SDLK_KP_PLUSMINUS* = cast[cuint](1073742039'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:251:9
  else:
    let SDLK_KP_PLUSMINUS* = cast[cuint](1073742039'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:251:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_PLUSMINUS" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_CLEAR):
  when cast[cuint](1073742040'i64) is static:
    const
      SDLK_KP_CLEAR* = cast[cuint](1073742040'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:252:9
  else:
    let SDLK_KP_CLEAR* = cast[cuint](1073742040'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:252:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_CLEAR" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_CLEARENTRY):
  when cast[cuint](1073742041'i64) is static:
    const
      SDLK_KP_CLEARENTRY* = cast[cuint](1073742041'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:253:9
  else:
    let SDLK_KP_CLEARENTRY* = cast[cuint](1073742041'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:253:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_CLEARENTRY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_BINARY):
  when cast[cuint](1073742042'i64) is static:
    const
      SDLK_KP_BINARY* = cast[cuint](1073742042'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:254:9
  else:
    let SDLK_KP_BINARY* = cast[cuint](1073742042'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:254:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_BINARY" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_OCTAL):
  when cast[cuint](1073742043'i64) is static:
    const
      SDLK_KP_OCTAL* = cast[cuint](1073742043'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:255:9
  else:
    let SDLK_KP_OCTAL* = cast[cuint](1073742043'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:255:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_OCTAL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_DECIMAL):
  when cast[cuint](1073742044'i64) is static:
    const
      SDLK_KP_DECIMAL* = cast[cuint](1073742044'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:256:9
  else:
    let SDLK_KP_DECIMAL* = cast[cuint](1073742044'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:256:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_DECIMAL" &
        " already exists, not redeclaring")
when not declared(SDLK_KP_HEXADECIMAL):
  when cast[cuint](1073742045'i64) is static:
    const
      SDLK_KP_HEXADECIMAL* = cast[cuint](1073742045'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:257:9
  else:
    let SDLK_KP_HEXADECIMAL* = cast[cuint](1073742045'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:257:9
else:
  static :
    hint("Declaration of " & "SDLK_KP_HEXADECIMAL" &
        " already exists, not redeclaring")
when not declared(SDLK_LCTRL):
  when cast[cuint](1073742048'i64) is static:
    const
      SDLK_LCTRL* = cast[cuint](1073742048'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:258:9
  else:
    let SDLK_LCTRL* = cast[cuint](1073742048'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:258:9
else:
  static :
    hint("Declaration of " & "SDLK_LCTRL" & " already exists, not redeclaring")
when not declared(SDLK_LSHIFT):
  when cast[cuint](1073742049'i64) is static:
    const
      SDLK_LSHIFT* = cast[cuint](1073742049'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:259:9
  else:
    let SDLK_LSHIFT* = cast[cuint](1073742049'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:259:9
else:
  static :
    hint("Declaration of " & "SDLK_LSHIFT" & " already exists, not redeclaring")
when not declared(SDLK_LALT):
  when cast[cuint](1073742050'i64) is static:
    const
      SDLK_LALT* = cast[cuint](1073742050'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:260:9
  else:
    let SDLK_LALT* = cast[cuint](1073742050'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:260:9
else:
  static :
    hint("Declaration of " & "SDLK_LALT" & " already exists, not redeclaring")
when not declared(SDLK_LGUI):
  when cast[cuint](1073742051'i64) is static:
    const
      SDLK_LGUI* = cast[cuint](1073742051'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:261:9
  else:
    let SDLK_LGUI* = cast[cuint](1073742051'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:261:9
else:
  static :
    hint("Declaration of " & "SDLK_LGUI" & " already exists, not redeclaring")
when not declared(SDLK_RCTRL):
  when cast[cuint](1073742052'i64) is static:
    const
      SDLK_RCTRL* = cast[cuint](1073742052'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:262:9
  else:
    let SDLK_RCTRL* = cast[cuint](1073742052'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:262:9
else:
  static :
    hint("Declaration of " & "SDLK_RCTRL" & " already exists, not redeclaring")
when not declared(SDLK_RSHIFT):
  when cast[cuint](1073742053'i64) is static:
    const
      SDLK_RSHIFT* = cast[cuint](1073742053'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:263:9
  else:
    let SDLK_RSHIFT* = cast[cuint](1073742053'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:263:9
else:
  static :
    hint("Declaration of " & "SDLK_RSHIFT" & " already exists, not redeclaring")
when not declared(SDLK_RALT):
  when cast[cuint](1073742054'i64) is static:
    const
      SDLK_RALT* = cast[cuint](1073742054'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:264:9
  else:
    let SDLK_RALT* = cast[cuint](1073742054'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:264:9
else:
  static :
    hint("Declaration of " & "SDLK_RALT" & " already exists, not redeclaring")
when not declared(SDLK_RGUI):
  when cast[cuint](1073742055'i64) is static:
    const
      SDLK_RGUI* = cast[cuint](1073742055'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:265:9
  else:
    let SDLK_RGUI* = cast[cuint](1073742055'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:265:9
else:
  static :
    hint("Declaration of " & "SDLK_RGUI" & " already exists, not redeclaring")
when not declared(SDLK_MODE):
  when cast[cuint](1073742081'i64) is static:
    const
      SDLK_MODE* = cast[cuint](1073742081'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:266:9
  else:
    let SDLK_MODE* = cast[cuint](1073742081'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:266:9
else:
  static :
    hint("Declaration of " & "SDLK_MODE" & " already exists, not redeclaring")
when not declared(SDLK_SLEEP):
  when cast[cuint](1073742082'i64) is static:
    const
      SDLK_SLEEP* = cast[cuint](1073742082'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:267:9
  else:
    let SDLK_SLEEP* = cast[cuint](1073742082'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:267:9
else:
  static :
    hint("Declaration of " & "SDLK_SLEEP" & " already exists, not redeclaring")
when not declared(SDLK_WAKE):
  when cast[cuint](1073742083'i64) is static:
    const
      SDLK_WAKE* = cast[cuint](1073742083'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:268:9
  else:
    let SDLK_WAKE* = cast[cuint](1073742083'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:268:9
else:
  static :
    hint("Declaration of " & "SDLK_WAKE" & " already exists, not redeclaring")
when not declared(SDLK_CHANNEL_INCREMENT):
  when cast[cuint](1073742084'i64) is static:
    const
      SDLK_CHANNEL_INCREMENT* = cast[cuint](1073742084'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:269:9
  else:
    let SDLK_CHANNEL_INCREMENT* = cast[cuint](1073742084'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:269:9
else:
  static :
    hint("Declaration of " & "SDLK_CHANNEL_INCREMENT" &
        " already exists, not redeclaring")
when not declared(SDLK_CHANNEL_DECREMENT):
  when cast[cuint](1073742085'i64) is static:
    const
      SDLK_CHANNEL_DECREMENT* = cast[cuint](1073742085'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:270:9
  else:
    let SDLK_CHANNEL_DECREMENT* = cast[cuint](1073742085'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:270:9
else:
  static :
    hint("Declaration of " & "SDLK_CHANNEL_DECREMENT" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PLAY):
  when cast[cuint](1073742086'i64) is static:
    const
      SDLK_MEDIA_PLAY* = cast[cuint](1073742086'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:271:9
  else:
    let SDLK_MEDIA_PLAY* = cast[cuint](1073742086'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:271:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PLAY" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PAUSE):
  when cast[cuint](1073742087'i64) is static:
    const
      SDLK_MEDIA_PAUSE* = cast[cuint](1073742087'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:272:9
  else:
    let SDLK_MEDIA_PAUSE* = cast[cuint](1073742087'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:272:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PAUSE" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_RECORD):
  when cast[cuint](1073742088'i64) is static:
    const
      SDLK_MEDIA_RECORD* = cast[cuint](1073742088'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:273:9
  else:
    let SDLK_MEDIA_RECORD* = cast[cuint](1073742088'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:273:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_RECORD" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_FAST_FORWARD):
  when cast[cuint](1073742089'i64) is static:
    const
      SDLK_MEDIA_FAST_FORWARD* = cast[cuint](1073742089'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:274:9
  else:
    let SDLK_MEDIA_FAST_FORWARD* = cast[cuint](1073742089'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:274:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_FAST_FORWARD" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_REWIND):
  when cast[cuint](1073742090'i64) is static:
    const
      SDLK_MEDIA_REWIND* = cast[cuint](1073742090'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:275:9
  else:
    let SDLK_MEDIA_REWIND* = cast[cuint](1073742090'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:275:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_REWIND" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_NEXT_TRACK):
  when cast[cuint](1073742091'i64) is static:
    const
      SDLK_MEDIA_NEXT_TRACK* = cast[cuint](1073742091'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:276:9
  else:
    let SDLK_MEDIA_NEXT_TRACK* = cast[cuint](1073742091'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:276:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_NEXT_TRACK" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PREVIOUS_TRACK):
  when cast[cuint](1073742092'i64) is static:
    const
      SDLK_MEDIA_PREVIOUS_TRACK* = cast[cuint](1073742092'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:277:9
  else:
    let SDLK_MEDIA_PREVIOUS_TRACK* = cast[cuint](1073742092'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:277:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PREVIOUS_TRACK" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_STOP):
  when cast[cuint](1073742093'i64) is static:
    const
      SDLK_MEDIA_STOP* = cast[cuint](1073742093'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:278:9
  else:
    let SDLK_MEDIA_STOP* = cast[cuint](1073742093'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:278:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_STOP" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_EJECT):
  when cast[cuint](1073742094'i64) is static:
    const
      SDLK_MEDIA_EJECT* = cast[cuint](1073742094'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:279:9
  else:
    let SDLK_MEDIA_EJECT* = cast[cuint](1073742094'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:279:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_EJECT" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_PLAY_PAUSE):
  when cast[cuint](1073742095'i64) is static:
    const
      SDLK_MEDIA_PLAY_PAUSE* = cast[cuint](1073742095'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:280:9
  else:
    let SDLK_MEDIA_PLAY_PAUSE* = cast[cuint](1073742095'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:280:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_PLAY_PAUSE" &
        " already exists, not redeclaring")
when not declared(SDLK_MEDIA_SELECT):
  when cast[cuint](1073742096'i64) is static:
    const
      SDLK_MEDIA_SELECT* = cast[cuint](1073742096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:281:9
  else:
    let SDLK_MEDIA_SELECT* = cast[cuint](1073742096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:281:9
else:
  static :
    hint("Declaration of " & "SDLK_MEDIA_SELECT" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_NEW):
  when cast[cuint](1073742097'i64) is static:
    const
      SDLK_AC_NEW* = cast[cuint](1073742097'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:282:9
  else:
    let SDLK_AC_NEW* = cast[cuint](1073742097'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:282:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_NEW" & " already exists, not redeclaring")
when not declared(SDLK_AC_OPEN):
  when cast[cuint](1073742098'i64) is static:
    const
      SDLK_AC_OPEN* = cast[cuint](1073742098'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:283:9
  else:
    let SDLK_AC_OPEN* = cast[cuint](1073742098'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:283:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_OPEN" & " already exists, not redeclaring")
when not declared(SDLK_AC_CLOSE):
  when cast[cuint](1073742099'i64) is static:
    const
      SDLK_AC_CLOSE* = cast[cuint](1073742099'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:284:9
  else:
    let SDLK_AC_CLOSE* = cast[cuint](1073742099'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:284:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_CLOSE" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_EXIT):
  when cast[cuint](1073742100'i64) is static:
    const
      SDLK_AC_EXIT* = cast[cuint](1073742100'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:285:9
  else:
    let SDLK_AC_EXIT* = cast[cuint](1073742100'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:285:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_EXIT" & " already exists, not redeclaring")
when not declared(SDLK_AC_SAVE):
  when cast[cuint](1073742101'i64) is static:
    const
      SDLK_AC_SAVE* = cast[cuint](1073742101'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:286:9
  else:
    let SDLK_AC_SAVE* = cast[cuint](1073742101'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:286:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_SAVE" & " already exists, not redeclaring")
when not declared(SDLK_AC_PRINT):
  when cast[cuint](1073742102'i64) is static:
    const
      SDLK_AC_PRINT* = cast[cuint](1073742102'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:287:9
  else:
    let SDLK_AC_PRINT* = cast[cuint](1073742102'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:287:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_PRINT" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_PROPERTIES):
  when cast[cuint](1073742103'i64) is static:
    const
      SDLK_AC_PROPERTIES* = cast[cuint](1073742103'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:288:9
  else:
    let SDLK_AC_PROPERTIES* = cast[cuint](1073742103'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:288:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_PROPERTIES" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_SEARCH):
  when cast[cuint](1073742104'i64) is static:
    const
      SDLK_AC_SEARCH* = cast[cuint](1073742104'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:289:9
  else:
    let SDLK_AC_SEARCH* = cast[cuint](1073742104'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:289:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_SEARCH" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_HOME):
  when cast[cuint](1073742105'i64) is static:
    const
      SDLK_AC_HOME* = cast[cuint](1073742105'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:290:9
  else:
    let SDLK_AC_HOME* = cast[cuint](1073742105'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:290:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_HOME" & " already exists, not redeclaring")
when not declared(SDLK_AC_BACK):
  when cast[cuint](1073742106'i64) is static:
    const
      SDLK_AC_BACK* = cast[cuint](1073742106'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:291:9
  else:
    let SDLK_AC_BACK* = cast[cuint](1073742106'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:291:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_BACK" & " already exists, not redeclaring")
when not declared(SDLK_AC_FORWARD):
  when cast[cuint](1073742107'i64) is static:
    const
      SDLK_AC_FORWARD* = cast[cuint](1073742107'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:292:9
  else:
    let SDLK_AC_FORWARD* = cast[cuint](1073742107'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:292:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_FORWARD" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_STOP):
  when cast[cuint](1073742108'i64) is static:
    const
      SDLK_AC_STOP* = cast[cuint](1073742108'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:293:9
  else:
    let SDLK_AC_STOP* = cast[cuint](1073742108'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:293:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_STOP" & " already exists, not redeclaring")
when not declared(SDLK_AC_REFRESH):
  when cast[cuint](1073742109'i64) is static:
    const
      SDLK_AC_REFRESH* = cast[cuint](1073742109'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:294:9
  else:
    let SDLK_AC_REFRESH* = cast[cuint](1073742109'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:294:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_REFRESH" &
        " already exists, not redeclaring")
when not declared(SDLK_AC_BOOKMARKS):
  when cast[cuint](1073742110'i64) is static:
    const
      SDLK_AC_BOOKMARKS* = cast[cuint](1073742110'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:295:9
  else:
    let SDLK_AC_BOOKMARKS* = cast[cuint](1073742110'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:295:9
else:
  static :
    hint("Declaration of " & "SDLK_AC_BOOKMARKS" &
        " already exists, not redeclaring")
when not declared(SDLK_SOFTLEFT):
  when cast[cuint](1073742111'i64) is static:
    const
      SDLK_SOFTLEFT* = cast[cuint](1073742111'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:296:9
  else:
    let SDLK_SOFTLEFT* = cast[cuint](1073742111'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:296:9
else:
  static :
    hint("Declaration of " & "SDLK_SOFTLEFT" &
        " already exists, not redeclaring")
when not declared(SDLK_SOFTRIGHT):
  when cast[cuint](1073742112'i64) is static:
    const
      SDLK_SOFTRIGHT* = cast[cuint](1073742112'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:297:9
  else:
    let SDLK_SOFTRIGHT* = cast[cuint](1073742112'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:297:9
else:
  static :
    hint("Declaration of " & "SDLK_SOFTRIGHT" &
        " already exists, not redeclaring")
when not declared(SDLK_CALL):
  when cast[cuint](1073742113'i64) is static:
    const
      SDLK_CALL* = cast[cuint](1073742113'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:298:9
  else:
    let SDLK_CALL* = cast[cuint](1073742113'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:298:9
else:
  static :
    hint("Declaration of " & "SDLK_CALL" & " already exists, not redeclaring")
when not declared(SDLK_ENDCALL):
  when cast[cuint](1073742114'i64) is static:
    const
      SDLK_ENDCALL* = cast[cuint](1073742114'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:299:9
  else:
    let SDLK_ENDCALL* = cast[cuint](1073742114'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:299:9
else:
  static :
    hint("Declaration of " & "SDLK_ENDCALL" & " already exists, not redeclaring")
when not declared(KMOD_NONE):
  when cast[cuint](0'i64) is static:
    const
      KMOD_NONE* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:308:9
  else:
    let KMOD_NONE* = cast[cuint](0'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:308:9
else:
  static :
    hint("Declaration of " & "KMOD_NONE" & " already exists, not redeclaring")
when not declared(KMOD_LSHIFT):
  when cast[cuint](1'i64) is static:
    const
      KMOD_LSHIFT* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:309:9
  else:
    let KMOD_LSHIFT* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:309:9
else:
  static :
    hint("Declaration of " & "KMOD_LSHIFT" & " already exists, not redeclaring")
when not declared(KMOD_RSHIFT):
  when cast[cuint](2'i64) is static:
    const
      KMOD_RSHIFT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:310:9
  else:
    let KMOD_RSHIFT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:310:9
else:
  static :
    hint("Declaration of " & "KMOD_RSHIFT" & " already exists, not redeclaring")
when not declared(KMOD_LCTRL):
  when cast[cuint](64'i64) is static:
    const
      KMOD_LCTRL* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:311:9
  else:
    let KMOD_LCTRL* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:311:9
else:
  static :
    hint("Declaration of " & "KMOD_LCTRL" & " already exists, not redeclaring")
when not declared(KMOD_RCTRL):
  when cast[cuint](128'i64) is static:
    const
      KMOD_RCTRL* = cast[cuint](128'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:312:9
  else:
    let KMOD_RCTRL* = cast[cuint](128'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:312:9
else:
  static :
    hint("Declaration of " & "KMOD_RCTRL" & " already exists, not redeclaring")
when not declared(KMOD_LALT):
  when cast[cuint](256'i64) is static:
    const
      KMOD_LALT* = cast[cuint](256'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:313:9
  else:
    let KMOD_LALT* = cast[cuint](256'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:313:9
else:
  static :
    hint("Declaration of " & "KMOD_LALT" & " already exists, not redeclaring")
when not declared(KMOD_RALT):
  when cast[cuint](512'i64) is static:
    const
      KMOD_RALT* = cast[cuint](512'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:314:9
  else:
    let KMOD_RALT* = cast[cuint](512'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:314:9
else:
  static :
    hint("Declaration of " & "KMOD_RALT" & " already exists, not redeclaring")
when not declared(KMOD_LGUI):
  when cast[cuint](1024'i64) is static:
    const
      KMOD_LGUI* = cast[cuint](1024'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:315:9
  else:
    let KMOD_LGUI* = cast[cuint](1024'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:315:9
else:
  static :
    hint("Declaration of " & "KMOD_LGUI" & " already exists, not redeclaring")
when not declared(KMOD_RGUI):
  when cast[cuint](2048'i64) is static:
    const
      KMOD_RGUI* = cast[cuint](2048'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:316:9
  else:
    let KMOD_RGUI* = cast[cuint](2048'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:316:9
else:
  static :
    hint("Declaration of " & "KMOD_RGUI" & " already exists, not redeclaring")
when not declared(KMOD_NUM):
  when cast[cuint](4096'i64) is static:
    const
      KMOD_NUM* = cast[cuint](4096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:317:9
  else:
    let KMOD_NUM* = cast[cuint](4096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:317:9
else:
  static :
    hint("Declaration of " & "KMOD_NUM" & " already exists, not redeclaring")
when not declared(KMOD_CAPS):
  when cast[cuint](8192'i64) is static:
    const
      KMOD_CAPS* = cast[cuint](8192'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:318:9
  else:
    let KMOD_CAPS* = cast[cuint](8192'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:318:9
else:
  static :
    hint("Declaration of " & "KMOD_CAPS" & " already exists, not redeclaring")
when not declared(KMOD_MODE):
  when cast[cuint](16384'i64) is static:
    const
      KMOD_MODE* = cast[cuint](16384'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:319:9
  else:
    let KMOD_MODE* = cast[cuint](16384'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:319:9
else:
  static :
    hint("Declaration of " & "KMOD_MODE" & " already exists, not redeclaring")
when not declared(KMOD_SCROLL):
  when cast[cuint](32768'i64) is static:
    const
      KMOD_SCROLL* = cast[cuint](32768'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:320:9
  else:
    let KMOD_SCROLL* = cast[cuint](32768'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keycode.h:320:9
else:
  static :
    hint("Declaration of " & "KMOD_SCROLL" & " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_TYPE_NUMBER):
  when "SDL.textinput.type" is static:
    const
      PROP_TEXTINPUT_TYPE_NUMBER* = "SDL.textinput.type" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:469:9
  else:
    let PROP_TEXTINPUT_TYPE_NUMBER* = "SDL.textinput.type" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:469:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_TYPE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_CAPITALIZATION_NUMBER):
  when "SDL.textinput.capitalization" is static:
    const
      PROP_TEXTINPUT_CAPITALIZATION_NUMBER* = "SDL.textinput.capitalization" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:470:9
  else:
    let PROP_TEXTINPUT_CAPITALIZATION_NUMBER* = "SDL.textinput.capitalization" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:470:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_CAPITALIZATION_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN):
  when "SDL.textinput.autocorrect" is static:
    const
      PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN* = "SDL.textinput.autocorrect" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:471:9
  else:
    let PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN* = "SDL.textinput.autocorrect" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:471:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_AUTOCORRECT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_MULTILINE_BOOLEAN):
  when "SDL.textinput.multiline" is static:
    const
      PROP_TEXTINPUT_MULTILINE_BOOLEAN* = "SDL.textinput.multiline" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:472:9
  else:
    let PROP_TEXTINPUT_MULTILINE_BOOLEAN* = "SDL.textinput.multiline" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:472:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_MULTILINE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER):
  when "SDL.textinput.android.inputtype" is static:
    const
      PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER* = "SDL.textinput.android.inputtype" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:473:9
  else:
    let PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER* = "SDL.textinput.android.inputtype" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_keyboard.h:473:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTINPUT_ANDROID_INPUTTYPE_NUMBER" &
        " already exists, not redeclaring")
when not declared(BUTTON_LEFT):
  when 1 is static:
    const
      BUTTON_LEFT* = 1       ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:121:9
  else:
    let BUTTON_LEFT* = 1     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:121:9
else:
  static :
    hint("Declaration of " & "BUTTON_LEFT" & " already exists, not redeclaring")
when not declared(BUTTON_MIDDLE):
  when 2 is static:
    const
      BUTTON_MIDDLE* = 2     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:122:9
  else:
    let BUTTON_MIDDLE* = 2   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:122:9
else:
  static :
    hint("Declaration of " & "BUTTON_MIDDLE" &
        " already exists, not redeclaring")
when not declared(BUTTON_RIGHT):
  when 3 is static:
    const
      BUTTON_RIGHT* = 3      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:123:9
  else:
    let BUTTON_RIGHT* = 3    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:123:9
else:
  static :
    hint("Declaration of " & "BUTTON_RIGHT" & " already exists, not redeclaring")
when not declared(BUTTON_X1):
  when 4 is static:
    const
      BUTTON_X1* = 4         ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:124:9
  else:
    let BUTTON_X1* = 4       ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:124:9
else:
  static :
    hint("Declaration of " & "BUTTON_X1" & " already exists, not redeclaring")
when not declared(BUTTON_X2):
  when 5 is static:
    const
      BUTTON_X2* = 5         ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:125:9
  else:
    let BUTTON_X2* = 5       ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_mouse.h:125:9
else:
  static :
    hint("Declaration of " & "BUTTON_X2" & " already exists, not redeclaring")
when not declared(GPU_SHADERFORMAT_INVALID):
  when 0 is static:
    const
      GPU_SHADERFORMAT_INVALID* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:793:9
  else:
    let GPU_SHADERFORMAT_INVALID* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:793:9
else:
  static :
    hint("Declaration of " & "GPU_SHADERFORMAT_INVALID" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.r" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.r" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1507:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.r" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1507:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_R_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.g" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.g" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1508:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.g" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1508:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_G_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.b" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.b" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1509:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.b" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1509:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_B_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.a" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.a" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1510:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.a" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1510:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_A_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT):
  when "SDL.gpu.createtexture.d3d12.clear.depth" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.depth" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1511:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT* = "SDL.gpu.createtexture.d3d12.clear.depth" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1511:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_DEPTH_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8):
  when "SDL.gpu.createtexture.d3d12.clear.stencil" is static:
    const
      PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8* = "SDL.gpu.createtexture.d3d12.clear.stencil" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1512:9
  else:
    let PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8* = "SDL.gpu.createtexture.d3d12.clear.stencil" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1512:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_CREATETEXTURE_D3D12_CLEAR_STENCIL_UINT8" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN):
  when "SDL.gpu.device.create.debugmode" is static:
    const
      PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN* = "SDL.gpu.device.create.debugmode" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1996:9
  else:
    let PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN* = "SDL.gpu.device.create.debugmode" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1996:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_DEBUGMODE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN):
  when "SDL.gpu.device.create.preferlowpower" is static:
    const
      PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN* = "SDL.gpu.device.create.preferlowpower" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1997:9
  else:
    let PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN* = "SDL.gpu.device.create.preferlowpower" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1997:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_PREFERLOWPOWER_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_NAME_STRING):
  when "SDL.gpu.device.create.name" is static:
    const
      PROP_GPU_DEVICE_CREATE_NAME_STRING* = "SDL.gpu.device.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1998:9
  else:
    let PROP_GPU_DEVICE_CREATE_NAME_STRING* = "SDL.gpu.device.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1998:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN):
  when "SDL.gpu.device.create.shaders.private" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN* = "SDL.gpu.device.create.shaders.private" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1999:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN* = "SDL.gpu.device.create.shaders.private" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:1999:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_PRIVATE_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN):
  when "SDL.gpu.device.create.shaders.spirv" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN* = "SDL.gpu.device.create.shaders.spirv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2000:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN* = "SDL.gpu.device.create.shaders.spirv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2000:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_SPIRV_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN):
  when "SDL.gpu.device.create.shaders.dxbc" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN* = "SDL.gpu.device.create.shaders.dxbc" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2001:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN* = "SDL.gpu.device.create.shaders.dxbc" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2001:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_DXBC_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN):
  when "SDL.gpu.device.create.shaders.dxil" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN* = "SDL.gpu.device.create.shaders.dxil" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2002:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN* = "SDL.gpu.device.create.shaders.dxil" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2002:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_DXIL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN):
  when "SDL.gpu.device.create.shaders.msl" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN* = "SDL.gpu.device.create.shaders.msl" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2003:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN* = "SDL.gpu.device.create.shaders.msl" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2003:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_MSL_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN):
  when "SDL.gpu.device.create.shaders.metallib" is static:
    const
      PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN* = "SDL.gpu.device.create.shaders.metallib" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2004:9
  else:
    let PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN* = "SDL.gpu.device.create.shaders.metallib" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2004:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_SHADERS_METALLIB_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING):
  when "SDL.gpu.device.create.d3d12.semantic" is static:
    const
      PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING* = "SDL.gpu.device.create.d3d12.semantic" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2005:9
  else:
    let PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING* = "SDL.gpu.device.create.d3d12.semantic" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_gpu.h:2005:9
else:
  static :
    hint("Declaration of " & "PROP_GPU_DEVICE_CREATE_D3D12_SEMANTIC_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(HAPTIC_POLAR):
  when 0 is static:
    const
      HAPTIC_POLAR* = 0      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:381:9
  else:
    let HAPTIC_POLAR* = 0    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:381:9
else:
  static :
    hint("Declaration of " & "HAPTIC_POLAR" & " already exists, not redeclaring")
when not declared(HAPTIC_CARTESIAN):
  when 1 is static:
    const
      HAPTIC_CARTESIAN* = 1  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:390:9
  else:
    let HAPTIC_CARTESIAN* = 1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:390:9
else:
  static :
    hint("Declaration of " & "HAPTIC_CARTESIAN" &
        " already exists, not redeclaring")
when not declared(HAPTIC_SPHERICAL):
  when 2 is static:
    const
      HAPTIC_SPHERICAL* = 2  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:399:9
  else:
    let HAPTIC_SPHERICAL* = 2 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:399:9
else:
  static :
    hint("Declaration of " & "HAPTIC_SPHERICAL" &
        " already exists, not redeclaring")
when not declared(HAPTIC_STEERING_AXIS):
  when 3 is static:
    const
      HAPTIC_STEERING_AXIS* = 3 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:411:9
  else:
    let HAPTIC_STEERING_AXIS* = 3 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:411:9
else:
  static :
    hint("Declaration of " & "HAPTIC_STEERING_AXIS" &
        " already exists, not redeclaring")
when not declared(HAPTIC_INFINITY):
  when cast[cuint](4294967295'i64) is static:
    const
      HAPTIC_INFINITY* = cast[cuint](4294967295'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:428:9
  else:
    let HAPTIC_INFINITY* = cast[cuint](4294967295'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_haptic.h:428:9
else:
  static :
    hint("Declaration of " & "HAPTIC_INFINITY" &
        " already exists, not redeclaring")
when not declared(HINT_ALLOW_ALT_TAB_WHILE_GRABBED):
  when "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" is static:
    const
      HINT_ALLOW_ALT_TAB_WHILE_GRABBED* = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:66:9
  else:
    let HINT_ALLOW_ALT_TAB_WHILE_GRABBED* = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:66:9
else:
  static :
    hint("Declaration of " & "HINT_ALLOW_ALT_TAB_WHILE_GRABBED" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_ALLOW_RECREATE_ACTIVITY):
  when "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" is static:
    const
      HINT_ANDROID_ALLOW_RECREATE_ACTIVITY* = "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:86:9
  else:
    let HINT_ANDROID_ALLOW_RECREATE_ACTIVITY* = "SDL_ANDROID_ALLOW_RECREATE_ACTIVITY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:86:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_ALLOW_RECREATE_ACTIVITY" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_BLOCK_ON_PAUSE):
  when "SDL_ANDROID_BLOCK_ON_PAUSE" is static:
    const
      HINT_ANDROID_BLOCK_ON_PAUSE* = "SDL_ANDROID_BLOCK_ON_PAUSE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:101:9
  else:
    let HINT_ANDROID_BLOCK_ON_PAUSE* = "SDL_ANDROID_BLOCK_ON_PAUSE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:101:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_BLOCK_ON_PAUSE" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_LOW_LATENCY_AUDIO):
  when "SDL_ANDROID_LOW_LATENCY_AUDIO" is static:
    const
      HINT_ANDROID_LOW_LATENCY_AUDIO* = "SDL_ANDROID_LOW_LATENCY_AUDIO" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:118:9
  else:
    let HINT_ANDROID_LOW_LATENCY_AUDIO* = "SDL_ANDROID_LOW_LATENCY_AUDIO" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:118:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_LOW_LATENCY_AUDIO" &
        " already exists, not redeclaring")
when not declared(HINT_ANDROID_TRAP_BACK_BUTTON):
  when "SDL_ANDROID_TRAP_BACK_BUTTON" is static:
    const
      HINT_ANDROID_TRAP_BACK_BUTTON* = "SDL_ANDROID_TRAP_BACK_BUTTON" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:141:9
  else:
    let HINT_ANDROID_TRAP_BACK_BUTTON* = "SDL_ANDROID_TRAP_BACK_BUTTON" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:141:9
else:
  static :
    hint("Declaration of " & "HINT_ANDROID_TRAP_BACK_BUTTON" &
        " already exists, not redeclaring")
when not declared(HINT_APP_ID):
  when "SDL_APP_ID" is static:
    const
      HINT_APP_ID* = "SDL_APP_ID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:157:9
  else:
    let HINT_APP_ID* = "SDL_APP_ID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:157:9
else:
  static :
    hint("Declaration of " & "HINT_APP_ID" & " already exists, not redeclaring")
when not declared(HINT_APP_NAME):
  when "SDL_APP_NAME" is static:
    const
      HINT_APP_NAME* = "SDL_APP_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:175:9
  else:
    let HINT_APP_NAME* = "SDL_APP_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:175:9
else:
  static :
    hint("Declaration of " & "HINT_APP_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_APPLE_TV_CONTROLLER_UI_EVENTS):
  when "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" is static:
    const
      HINT_APPLE_TV_CONTROLLER_UI_EVENTS* = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:198:9
  else:
    let HINT_APPLE_TV_CONTROLLER_UI_EVENTS* = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:198:9
else:
  static :
    hint("Declaration of " & "HINT_APPLE_TV_CONTROLLER_UI_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_APPLE_TV_REMOTE_ALLOW_ROTATION):
  when "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" is static:
    const
      HINT_APPLE_TV_REMOTE_ALLOW_ROTATION* = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:213:9
  else:
    let HINT_APPLE_TV_REMOTE_ALLOW_ROTATION* = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:213:9
else:
  static :
    hint("Declaration of " & "HINT_APPLE_TV_REMOTE_ALLOW_ROTATION" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_ALSA_DEFAULT_DEVICE):
  when "SDL_AUDIO_ALSA_DEFAULT_DEVICE" is static:
    const
      HINT_AUDIO_ALSA_DEFAULT_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:227:9
  else:
    let HINT_AUDIO_ALSA_DEFAULT_DEVICE* = "SDL_AUDIO_ALSA_DEFAULT_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:227:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_ALSA_DEFAULT_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_CATEGORY):
  when "SDL_AUDIO_CATEGORY" is static:
    const
      HINT_AUDIO_CATEGORY* = "SDL_AUDIO_CATEGORY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:245:9
  else:
    let HINT_AUDIO_CATEGORY* = "SDL_AUDIO_CATEGORY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:245:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_CATEGORY" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_CHANNELS):
  when "SDL_AUDIO_CHANNELS" is static:
    const
      HINT_AUDIO_CHANNELS* = "SDL_AUDIO_CHANNELS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:258:9
  else:
    let HINT_AUDIO_CHANNELS* = "SDL_AUDIO_CHANNELS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:258:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_CHANNELS" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_APP_ICON_NAME):
  when "SDL_AUDIO_DEVICE_APP_ICON_NAME" is static:
    const
      HINT_AUDIO_DEVICE_APP_ICON_NAME* = "SDL_AUDIO_DEVICE_APP_ICON_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:281:9
  else:
    let HINT_AUDIO_DEVICE_APP_ICON_NAME* = "SDL_AUDIO_DEVICE_APP_ICON_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:281:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_APP_ICON_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_SAMPLE_FRAMES):
  when "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" is static:
    const
      HINT_AUDIO_DEVICE_SAMPLE_FRAMES* = "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:303:9
  else:
    let HINT_AUDIO_DEVICE_SAMPLE_FRAMES* = "SDL_AUDIO_DEVICE_SAMPLE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:303:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_SAMPLE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_STREAM_NAME):
  when "SDL_AUDIO_DEVICE_STREAM_NAME" is static:
    const
      HINT_AUDIO_DEVICE_STREAM_NAME* = "SDL_AUDIO_DEVICE_STREAM_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:330:9
  else:
    let HINT_AUDIO_DEVICE_STREAM_NAME* = "SDL_AUDIO_DEVICE_STREAM_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:330:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_STREAM_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DEVICE_STREAM_ROLE):
  when "SDL_AUDIO_DEVICE_STREAM_ROLE" is static:
    const
      HINT_AUDIO_DEVICE_STREAM_ROLE* = "SDL_AUDIO_DEVICE_STREAM_ROLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:356:9
  else:
    let HINT_AUDIO_DEVICE_STREAM_ROLE* = "SDL_AUDIO_DEVICE_STREAM_ROLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:356:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DEVICE_STREAM_ROLE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_INPUT_FILE):
  when "SDL_AUDIO_DISK_INPUT_FILE" is static:
    const
      HINT_AUDIO_DISK_INPUT_FILE* = "SDL_AUDIO_DISK_INPUT_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:367:9
  else:
    let HINT_AUDIO_DISK_INPUT_FILE* = "SDL_AUDIO_DISK_INPUT_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:367:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_INPUT_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_OUTPUT_FILE):
  when "SDL_AUDIO_DISK_OUTPUT_FILE" is static:
    const
      HINT_AUDIO_DISK_OUTPUT_FILE* = "SDL_AUDIO_DISK_OUTPUT_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:378:9
  else:
    let HINT_AUDIO_DISK_OUTPUT_FILE* = "SDL_AUDIO_DISK_OUTPUT_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:378:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_OUTPUT_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DISK_TIMESCALE):
  when "SDL_AUDIO_DISK_TIMESCALE" is static:
    const
      HINT_AUDIO_DISK_TIMESCALE* = "SDL_AUDIO_DISK_TIMESCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:391:9
  else:
    let HINT_AUDIO_DISK_TIMESCALE* = "SDL_AUDIO_DISK_TIMESCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:391:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DISK_TIMESCALE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DRIVER):
  when "SDL_AUDIO_DRIVER" is static:
    const
      HINT_AUDIO_DRIVER* = "SDL_AUDIO_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:405:9
  else:
    let HINT_AUDIO_DRIVER* = "SDL_AUDIO_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:405:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_DUMMY_TIMESCALE):
  when "SDL_AUDIO_DUMMY_TIMESCALE" is static:
    const
      HINT_AUDIO_DUMMY_TIMESCALE* = "SDL_AUDIO_DUMMY_TIMESCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:418:9
  else:
    let HINT_AUDIO_DUMMY_TIMESCALE* = "SDL_AUDIO_DUMMY_TIMESCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:418:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_DUMMY_TIMESCALE" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_FORMAT):
  when "SDL_AUDIO_FORMAT" is static:
    const
      HINT_AUDIO_FORMAT* = "SDL_AUDIO_FORMAT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:445:9
  else:
    let HINT_AUDIO_FORMAT* = "SDL_AUDIO_FORMAT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:445:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_FORMAT" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_FREQUENCY):
  when "SDL_AUDIO_FREQUENCY" is static:
    const
      HINT_AUDIO_FREQUENCY* = "SDL_AUDIO_FREQUENCY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:458:9
  else:
    let HINT_AUDIO_FREQUENCY* = "SDL_AUDIO_FREQUENCY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:458:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_FREQUENCY" &
        " already exists, not redeclaring")
when not declared(HINT_AUDIO_INCLUDE_MONITORS):
  when "SDL_AUDIO_INCLUDE_MONITORS" is static:
    const
      HINT_AUDIO_INCLUDE_MONITORS* = "SDL_AUDIO_INCLUDE_MONITORS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:481:9
  else:
    let HINT_AUDIO_INCLUDE_MONITORS* = "SDL_AUDIO_INCLUDE_MONITORS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:481:9
else:
  static :
    hint("Declaration of " & "HINT_AUDIO_INCLUDE_MONITORS" &
        " already exists, not redeclaring")
when not declared(HINT_AUTO_UPDATE_JOYSTICKS):
  when "SDL_AUTO_UPDATE_JOYSTICKS" is static:
    const
      HINT_AUTO_UPDATE_JOYSTICKS* = "SDL_AUTO_UPDATE_JOYSTICKS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:496:9
  else:
    let HINT_AUTO_UPDATE_JOYSTICKS* = "SDL_AUTO_UPDATE_JOYSTICKS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:496:9
else:
  static :
    hint("Declaration of " & "HINT_AUTO_UPDATE_JOYSTICKS" &
        " already exists, not redeclaring")
when not declared(HINT_AUTO_UPDATE_SENSORS):
  when "SDL_AUTO_UPDATE_SENSORS" is static:
    const
      HINT_AUTO_UPDATE_SENSORS* = "SDL_AUTO_UPDATE_SENSORS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:511:9
  else:
    let HINT_AUTO_UPDATE_SENSORS* = "SDL_AUTO_UPDATE_SENSORS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:511:9
else:
  static :
    hint("Declaration of " & "HINT_AUTO_UPDATE_SENSORS" &
        " already exists, not redeclaring")
when not declared(HINT_BMP_SAVE_LEGACY_FORMAT):
  when "SDL_BMP_SAVE_LEGACY_FORMAT" is static:
    const
      HINT_BMP_SAVE_LEGACY_FORMAT* = "SDL_BMP_SAVE_LEGACY_FORMAT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:534:9
  else:
    let HINT_BMP_SAVE_LEGACY_FORMAT* = "SDL_BMP_SAVE_LEGACY_FORMAT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:534:9
else:
  static :
    hint("Declaration of " & "HINT_BMP_SAVE_LEGACY_FORMAT" &
        " already exists, not redeclaring")
when not declared(HINT_CAMERA_DRIVER):
  when "SDL_CAMERA_DRIVER" is static:
    const
      HINT_CAMERA_DRIVER* = "SDL_CAMERA_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:550:9
  else:
    let HINT_CAMERA_DRIVER* = "SDL_CAMERA_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:550:9
else:
  static :
    hint("Declaration of " & "HINT_CAMERA_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_CPU_FEATURE_MASK):
  when "SDL_CPU_FEATURE_MASK" is static:
    const
      HINT_CPU_FEATURE_MASK* = "SDL_CPU_FEATURE_MASK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:583:9
  else:
    let HINT_CPU_FEATURE_MASK* = "SDL_CPU_FEATURE_MASK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:583:9
else:
  static :
    hint("Declaration of " & "HINT_CPU_FEATURE_MASK" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_DIRECTINPUT):
  when "SDL_JOYSTICK_DIRECTINPUT" is static:
    const
      HINT_JOYSTICK_DIRECTINPUT* = "SDL_JOYSTICK_DIRECTINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:597:9
  else:
    let HINT_JOYSTICK_DIRECTINPUT* = "SDL_JOYSTICK_DIRECTINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:597:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_DIRECTINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_FILE_DIALOG_DRIVER):
  when "SDL_FILE_DIALOG_DRIVER" is static:
    const
      HINT_FILE_DIALOG_DRIVER* = "SDL_FILE_DIALOG_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:626:9
  else:
    let HINT_FILE_DIALOG_DRIVER* = "SDL_FILE_DIALOG_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:626:9
else:
  static :
    hint("Declaration of " & "HINT_FILE_DIALOG_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_DISPLAY_USABLE_BOUNDS):
  when "SDL_DISPLAY_USABLE_BOUNDS" is static:
    const
      HINT_DISPLAY_USABLE_BOUNDS* = "SDL_DISPLAY_USABLE_BOUNDS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:644:9
  else:
    let HINT_DISPLAY_USABLE_BOUNDS* = "SDL_DISPLAY_USABLE_BOUNDS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:644:9
else:
  static :
    hint("Declaration of " & "HINT_DISPLAY_USABLE_BOUNDS" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_ASYNCIFY):
  when "SDL_EMSCRIPTEN_ASYNCIFY" is static:
    const
      HINT_EMSCRIPTEN_ASYNCIFY* = "SDL_EMSCRIPTEN_ASYNCIFY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:665:9
  else:
    let HINT_EMSCRIPTEN_ASYNCIFY* = "SDL_EMSCRIPTEN_ASYNCIFY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:665:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_ASYNCIFY" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_CANVAS_SELECTOR):
  when "SDL_EMSCRIPTEN_CANVAS_SELECTOR" is static:
    const
      HINT_EMSCRIPTEN_CANVAS_SELECTOR* = "SDL_EMSCRIPTEN_CANVAS_SELECTOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:678:9
  else:
    let HINT_EMSCRIPTEN_CANVAS_SELECTOR* = "SDL_EMSCRIPTEN_CANVAS_SELECTOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:678:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_CANVAS_SELECTOR" &
        " already exists, not redeclaring")
when not declared(HINT_EMSCRIPTEN_KEYBOARD_ELEMENT):
  when "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" is static:
    const
      HINT_EMSCRIPTEN_KEYBOARD_ELEMENT* = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:698:9
  else:
    let HINT_EMSCRIPTEN_KEYBOARD_ELEMENT* = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:698:9
else:
  static :
    hint("Declaration of " & "HINT_EMSCRIPTEN_KEYBOARD_ELEMENT" &
        " already exists, not redeclaring")
when not declared(HINT_ENABLE_SCREEN_KEYBOARD):
  when "SDL_ENABLE_SCREEN_KEYBOARD" is static:
    const
      HINT_ENABLE_SCREEN_KEYBOARD* = "SDL_ENABLE_SCREEN_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:715:9
  else:
    let HINT_ENABLE_SCREEN_KEYBOARD* = "SDL_ENABLE_SCREEN_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:715:9
else:
  static :
    hint("Declaration of " & "HINT_ENABLE_SCREEN_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_EVDEV_DEVICES):
  when "SDL_EVDEV_DEVICES" is static:
    const
      HINT_EVDEV_DEVICES* = "SDL_EVDEV_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:732:9
  else:
    let HINT_EVDEV_DEVICES* = "SDL_EVDEV_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:732:9
else:
  static :
    hint("Declaration of " & "HINT_EVDEV_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_EVENT_LOGGING):
  when "SDL_EVENT_LOGGING" is static:
    const
      HINT_EVENT_LOGGING* = "SDL_EVENT_LOGGING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:756:9
  else:
    let HINT_EVENT_LOGGING* = "SDL_EVENT_LOGGING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:756:9
else:
  static :
    hint("Declaration of " & "HINT_EVENT_LOGGING" &
        " already exists, not redeclaring")
when not declared(HINT_FORCE_RAISEWINDOW):
  when "SDL_FORCE_RAISEWINDOW" is static:
    const
      HINT_FORCE_RAISEWINDOW* = "SDL_FORCE_RAISEWINDOW" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:776:9
  else:
    let HINT_FORCE_RAISEWINDOW* = "SDL_FORCE_RAISEWINDOW" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:776:9
else:
  static :
    hint("Declaration of " & "HINT_FORCE_RAISEWINDOW" &
        " already exists, not redeclaring")
when not declared(HINT_FRAMEBUFFER_ACCELERATION):
  when "SDL_FRAMEBUFFER_ACCELERATION" is static:
    const
      HINT_FRAMEBUFFER_ACCELERATION* = "SDL_FRAMEBUFFER_ACCELERATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:797:9
  else:
    let HINT_FRAMEBUFFER_ACCELERATION* = "SDL_FRAMEBUFFER_ACCELERATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:797:9
else:
  static :
    hint("Declaration of " & "HINT_FRAMEBUFFER_ACCELERATION" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERCONFIG):
  when "SDL_GAMECONTROLLERCONFIG" is static:
    const
      HINT_GAMECONTROLLERCONFIG* = "SDL_GAMECONTROLLERCONFIG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:812:9
  else:
    let HINT_GAMECONTROLLERCONFIG* = "SDL_GAMECONTROLLERCONFIG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:812:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERCONFIG" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERCONFIG_FILE):
  when "SDL_GAMECONTROLLERCONFIG_FILE" is static:
    const
      HINT_GAMECONTROLLERCONFIG_FILE* = "SDL_GAMECONTROLLERCONFIG_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:828:9
  else:
    let HINT_GAMECONTROLLERCONFIG_FILE* = "SDL_GAMECONTROLLERCONFIG_FILE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:828:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERCONFIG_FILE" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLERTYPE):
  when "SDL_GAMECONTROLLERTYPE" is static:
    const
      HINT_GAMECONTROLLERTYPE* = "SDL_GAMECONTROLLERTYPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:852:9
  else:
    let HINT_GAMECONTROLLERTYPE* = "SDL_GAMECONTROLLERTYPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:852:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLERTYPE" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_IGNORE_DEVICES):
  when "SDL_GAMECONTROLLER_IGNORE_DEVICES" is static:
    const
      HINT_GAMECONTROLLER_IGNORE_DEVICES* = "SDL_GAMECONTROLLER_IGNORE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:870:9
  else:
    let HINT_GAMECONTROLLER_IGNORE_DEVICES* = "SDL_GAMECONTROLLER_IGNORE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:870:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_IGNORE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT):
  when "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" is static:
    const
      HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT* = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:888:9
  else:
    let HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT* = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:888:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT" &
        " already exists, not redeclaring")
when not declared(HINT_GAMECONTROLLER_SENSOR_FUSION):
  when "SDL_GAMECONTROLLER_SENSOR_FUSION" is static:
    const
      HINT_GAMECONTROLLER_SENSOR_FUSION* = "SDL_GAMECONTROLLER_SENSOR_FUSION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:911:9
  else:
    let HINT_GAMECONTROLLER_SENSOR_FUSION* = "SDL_GAMECONTROLLER_SENSOR_FUSION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:911:9
else:
  static :
    hint("Declaration of " & "HINT_GAMECONTROLLER_SENSOR_FUSION" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_DEFAULT_TEXT):
  when "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" is static:
    const
      HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:923:9
  else:
    let HINT_GDK_TEXTINPUT_DEFAULT_TEXT* = "SDL_GDK_TEXTINPUT_DEFAULT_TEXT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:923:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_DEFAULT_TEXT" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_DESCRIPTION):
  when "SDL_GDK_TEXTINPUT_DESCRIPTION" is static:
    const
      HINT_GDK_TEXTINPUT_DESCRIPTION* = "SDL_GDK_TEXTINPUT_DESCRIPTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:935:9
  else:
    let HINT_GDK_TEXTINPUT_DESCRIPTION* = "SDL_GDK_TEXTINPUT_DESCRIPTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:935:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_DESCRIPTION" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_MAX_LENGTH):
  when "SDL_GDK_TEXTINPUT_MAX_LENGTH" is static:
    const
      HINT_GDK_TEXTINPUT_MAX_LENGTH* = "SDL_GDK_TEXTINPUT_MAX_LENGTH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:950:9
  else:
    let HINT_GDK_TEXTINPUT_MAX_LENGTH* = "SDL_GDK_TEXTINPUT_MAX_LENGTH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:950:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_MAX_LENGTH" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_SCOPE):
  when "SDL_GDK_TEXTINPUT_SCOPE" is static:
    const
      HINT_GDK_TEXTINPUT_SCOPE* = "SDL_GDK_TEXTINPUT_SCOPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:966:9
  else:
    let HINT_GDK_TEXTINPUT_SCOPE* = "SDL_GDK_TEXTINPUT_SCOPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:966:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_SCOPE" &
        " already exists, not redeclaring")
when not declared(HINT_GDK_TEXTINPUT_TITLE):
  when "SDL_GDK_TEXTINPUT_TITLE" is static:
    const
      HINT_GDK_TEXTINPUT_TITLE* = "SDL_GDK_TEXTINPUT_TITLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:977:9
  else:
    let HINT_GDK_TEXTINPUT_TITLE* = "SDL_GDK_TEXTINPUT_TITLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:977:9
else:
  static :
    hint("Declaration of " & "HINT_GDK_TEXTINPUT_TITLE" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_LIBUSB):
  when "SDL_HIDAPI_LIBUSB" is static:
    const
      HINT_HIDAPI_LIBUSB* = "SDL_HIDAPI_LIBUSB" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:995:9
  else:
    let HINT_HIDAPI_LIBUSB* = "SDL_HIDAPI_LIBUSB" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:995:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_LIBUSB" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_LIBUSB_WHITELIST):
  when "SDL_HIDAPI_LIBUSB_WHITELIST" is static:
    const
      HINT_HIDAPI_LIBUSB_WHITELIST* = "SDL_HIDAPI_LIBUSB_WHITELIST" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1013:9
  else:
    let HINT_HIDAPI_LIBUSB_WHITELIST* = "SDL_HIDAPI_LIBUSB_WHITELIST" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1013:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_LIBUSB_WHITELIST" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_UDEV):
  when "SDL_HIDAPI_UDEV" is static:
    const
      HINT_HIDAPI_UDEV* = "SDL_HIDAPI_UDEV" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1027:9
  else:
    let HINT_HIDAPI_UDEV* = "SDL_HIDAPI_UDEV" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1027:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_UDEV" &
        " already exists, not redeclaring")
when not declared(HINT_GPU_DRIVER):
  when "SDL_GPU_DRIVER" is static:
    const
      HINT_GPU_DRIVER* = "SDL_GPU_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1041:9
  else:
    let HINT_GPU_DRIVER* = "SDL_GPU_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1041:9
else:
  static :
    hint("Declaration of " & "HINT_GPU_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS):
  when "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" is static:
    const
      HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS* = "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1060:9
  else:
    let HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS* = "SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1060:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS" &
        " already exists, not redeclaring")
when not declared(HINT_HIDAPI_IGNORE_DEVICES):
  when "SDL_HIDAPI_IGNORE_DEVICES" is static:
    const
      HINT_HIDAPI_IGNORE_DEVICES* = "SDL_HIDAPI_IGNORE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1077:9
  else:
    let HINT_HIDAPI_IGNORE_DEVICES* = "SDL_HIDAPI_IGNORE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1077:9
else:
  static :
    hint("Declaration of " & "HINT_HIDAPI_IGNORE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_IME_IMPLEMENTED_UI):
  when "SDL_IME_IMPLEMENTED_UI" is static:
    const
      HINT_IME_IMPLEMENTED_UI* = "SDL_IME_IMPLEMENTED_UI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1100:9
  else:
    let HINT_IME_IMPLEMENTED_UI* = "SDL_IME_IMPLEMENTED_UI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1100:9
else:
  static :
    hint("Declaration of " & "HINT_IME_IMPLEMENTED_UI" &
        " already exists, not redeclaring")
when not declared(HINT_IOS_HIDE_HOME_INDICATOR):
  when "SDL_IOS_HIDE_HOME_INDICATOR" is static:
    const
      HINT_IOS_HIDE_HOME_INDICATOR* = "SDL_IOS_HIDE_HOME_INDICATOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1119:9
  else:
    let HINT_IOS_HIDE_HOME_INDICATOR* = "SDL_IOS_HIDE_HOME_INDICATOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1119:9
else:
  static :
    hint("Declaration of " & "HINT_IOS_HIDE_HOME_INDICATOR" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS):
  when "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" is static:
    const
      HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS* = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1136:9
  else:
    let HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS* = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1136:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ARCADESTICK_DEVICES):
  when "SDL_JOYSTICK_ARCADESTICK_DEVICES" is static:
    const
      HINT_JOYSTICK_ARCADESTICK_DEVICES* = "SDL_JOYSTICK_ARCADESTICK_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1153:9
  else:
    let HINT_JOYSTICK_ARCADESTICK_DEVICES* = "SDL_JOYSTICK_ARCADESTICK_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1153:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ARCADESTICK_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1174:9
  else:
    let HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1174:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_BLACKLIST_DEVICES):
  when "SDL_JOYSTICK_BLACKLIST_DEVICES" is static:
    const
      HINT_JOYSTICK_BLACKLIST_DEVICES* = "SDL_JOYSTICK_BLACKLIST_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1192:9
  else:
    let HINT_JOYSTICK_BLACKLIST_DEVICES* = "SDL_JOYSTICK_BLACKLIST_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1192:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_BLACKLIST_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED* = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1213:9
  else:
    let HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED* = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1213:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_DEVICE):
  when "SDL_JOYSTICK_DEVICE" is static:
    const
      HINT_JOYSTICK_DEVICE* = "SDL_JOYSTICK_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1223:9
  else:
    let HINT_JOYSTICK_DEVICE* = "SDL_JOYSTICK_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1223:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_FLIGHTSTICK_DEVICES):
  when "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" is static:
    const
      HINT_JOYSTICK_FLIGHTSTICK_DEVICES* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1240:9
  else:
    let HINT_JOYSTICK_FLIGHTSTICK_DEVICES* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1240:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_FLIGHTSTICK_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1261:9
  else:
    let HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED* = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1261:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMEINPUT):
  when "SDL_JOYSTICK_GAMEINPUT" is static:
    const
      HINT_JOYSTICK_GAMEINPUT* = "SDL_JOYSTICK_GAMEINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1278:9
  else:
    let HINT_JOYSTICK_GAMEINPUT* = "SDL_JOYSTICK_GAMEINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1278:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMEINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMECUBE_DEVICES):
  when "SDL_JOYSTICK_GAMECUBE_DEVICES" is static:
    const
      HINT_JOYSTICK_GAMECUBE_DEVICES* = "SDL_JOYSTICK_GAMECUBE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1296:9
  else:
    let HINT_JOYSTICK_GAMECUBE_DEVICES* = "SDL_JOYSTICK_GAMECUBE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1296:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMECUBE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1317:9
  else:
    let HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1317:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI):
  when "SDL_JOYSTICK_HIDAPI" is static:
    const
      HINT_JOYSTICK_HIDAPI* = "SDL_JOYSTICK_HIDAPI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1334:9
  else:
    let HINT_JOYSTICK_HIDAPI* = "SDL_JOYSTICK_HIDAPI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1334:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1351:9
  else:
    let HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1351:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_GAMECUBE):
  when "SDL_JOYSTICK_HIDAPI_GAMECUBE" is static:
    const
      HINT_JOYSTICK_HIDAPI_GAMECUBE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1368:9
  else:
    let HINT_JOYSTICK_HIDAPI_GAMECUBE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1368:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_GAMECUBE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE):
  when "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" is static:
    const
      HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1389:9
  else:
    let HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE* = "SDL_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1389:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_GAMECUBE_RUMBLE_BRAKE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1406:9
  else:
    let HINT_JOYSTICK_HIDAPI_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1406:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED* = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1425:9
  else:
    let HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED* = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1425:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_LUNA):
  when "SDL_JOYSTICK_HIDAPI_LUNA" is static:
    const
      HINT_JOYSTICK_HIDAPI_LUNA* = "SDL_JOYSTICK_HIDAPI_LUNA" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1442:9
  else:
    let HINT_JOYSTICK_HIDAPI_LUNA* = "SDL_JOYSTICK_HIDAPI_LUNA" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1442:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_LUNA" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC):
  when "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" is static:
    const
      HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC* = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1459:9
  else:
    let HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC* = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1459:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS3):
  when "SDL_JOYSTICK_HIDAPI_PS3" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS3* = "SDL_JOYSTICK_HIDAPI_PS3" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1481:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS3* = "SDL_JOYSTICK_HIDAPI_PS3" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1481:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS3" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER):
  when "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER* = "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1498:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER* = "SDL_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1498:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS3_SIXAXIS_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4):
  when "SDL_JOYSTICK_HIDAPI_PS4" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4* = "SDL_JOYSTICK_HIDAPI_PS4" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1515:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4* = "SDL_JOYSTICK_HIDAPI_PS4" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1515:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL):
  when "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL* = "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1530:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL* = "SDL_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1530:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4_REPORT_INTERVAL" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS4_RUMBLE):
  when "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS4_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1556:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS4_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1556:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS4_RUMBLE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5):
  when "SDL_JOYSTICK_HIDAPI_PS5" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5* = "SDL_JOYSTICK_HIDAPI_PS5" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1573:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5* = "SDL_JOYSTICK_HIDAPI_PS5" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1573:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1586:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1586:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_PS5_RUMBLE):
  when "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" is static:
    const
      HINT_JOYSTICK_HIDAPI_PS5_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1611:9
  else:
    let HINT_JOYSTICK_HIDAPI_PS5_RUMBLE* = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1611:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_PS5_RUMBLE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SHIELD):
  when "SDL_JOYSTICK_HIDAPI_SHIELD" is static:
    const
      HINT_JOYSTICK_HIDAPI_SHIELD* = "SDL_JOYSTICK_HIDAPI_SHIELD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1628:9
  else:
    let HINT_JOYSTICK_HIDAPI_SHIELD* = "SDL_JOYSTICK_HIDAPI_SHIELD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1628:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SHIELD" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STADIA):
  when "SDL_JOYSTICK_HIDAPI_STADIA" is static:
    const
      HINT_JOYSTICK_HIDAPI_STADIA* = "SDL_JOYSTICK_HIDAPI_STADIA" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1643:9
  else:
    let HINT_JOYSTICK_HIDAPI_STADIA* = "SDL_JOYSTICK_HIDAPI_STADIA" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1643:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STADIA" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM):
  when "SDL_JOYSTICK_HIDAPI_STEAM" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM* = "SDL_JOYSTICK_HIDAPI_STEAM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1660:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM* = "SDL_JOYSTICK_HIDAPI_STEAM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1660:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED* = "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1679:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED* = "SDL_JOYSTICK_HIDAPI_STEAM_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1679:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAMDECK):
  when "SDL_JOYSTICK_HIDAPI_STEAMDECK" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAMDECK* = "SDL_JOYSTICK_HIDAPI_STEAMDECK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1696:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAMDECK* = "SDL_JOYSTICK_HIDAPI_STEAMDECK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1696:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAMDECK" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_STEAM_HORI):
  when "SDL_JOYSTICK_HIDAPI_STEAM_HORI" is static:
    const
      HINT_JOYSTICK_HIDAPI_STEAM_HORI* = "SDL_JOYSTICK_HIDAPI_STEAM_HORI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1707:9
  else:
    let HINT_JOYSTICK_HIDAPI_STEAM_HORI* = "SDL_JOYSTICK_HIDAPI_STEAM_HORI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1707:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_STEAM_HORI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH):
  when "SDL_JOYSTICK_HIDAPI_SWITCH" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH* = "SDL_JOYSTICK_HIDAPI_SWITCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1724:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH* = "SDL_JOYSTICK_HIDAPI_SWITCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1724:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1743:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1743:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1758:9
  else:
    let HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1758:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS):
  when "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" is static:
    const
      HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1774:9
  else:
    let HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS* = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1774:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_WII):
  when "SDL_JOYSTICK_HIDAPI_WII" is static:
    const
      HINT_JOYSTICK_HIDAPI_WII* = "SDL_JOYSTICK_HIDAPI_WII" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1792:9
  else:
    let HINT_JOYSTICK_HIDAPI_WII* = "SDL_JOYSTICK_HIDAPI_WII" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1792:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_WII" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1807:9
  else:
    let HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1807:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX):
  when "SDL_JOYSTICK_HIDAPI_XBOX" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX* = "SDL_JOYSTICK_HIDAPI_XBOX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1825:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX* = "SDL_JOYSTICK_HIDAPI_XBOX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1825:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360* = "SDL_JOYSTICK_HIDAPI_XBOX_360" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1842:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360* = "SDL_JOYSTICK_HIDAPI_XBOX_360" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1842:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1857:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1857:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS):
  when "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS* = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1874:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS* = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1874:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_ONE):
  when "SDL_JOYSTICK_HIDAPI_XBOX_ONE" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_ONE* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1891:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_ONE* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1891:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_ONE" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED):
  when "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" is static:
    const
      HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1910:9
  else:
    let HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED* = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1910:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_IOKIT):
  when "SDL_JOYSTICK_IOKIT" is static:
    const
      HINT_JOYSTICK_IOKIT* = "SDL_JOYSTICK_IOKIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1925:9
  else:
    let HINT_JOYSTICK_IOKIT* = "SDL_JOYSTICK_IOKIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1925:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_IOKIT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_CLASSIC):
  when "SDL_JOYSTICK_LINUX_CLASSIC" is static:
    const
      HINT_JOYSTICK_LINUX_CLASSIC* = "SDL_JOYSTICK_LINUX_CLASSIC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1940:9
  else:
    let HINT_JOYSTICK_LINUX_CLASSIC* = "SDL_JOYSTICK_LINUX_CLASSIC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1940:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_CLASSIC" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_DEADZONES):
  when "SDL_JOYSTICK_LINUX_DEADZONES" is static:
    const
      HINT_JOYSTICK_LINUX_DEADZONES* = "SDL_JOYSTICK_LINUX_DEADZONES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1955:9
  else:
    let HINT_JOYSTICK_LINUX_DEADZONES* = "SDL_JOYSTICK_LINUX_DEADZONES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1955:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_DEADZONES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_DIGITAL_HATS):
  when "SDL_JOYSTICK_LINUX_DIGITAL_HATS" is static:
    const
      HINT_JOYSTICK_LINUX_DIGITAL_HATS* = "SDL_JOYSTICK_LINUX_DIGITAL_HATS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1973:9
  else:
    let HINT_JOYSTICK_LINUX_DIGITAL_HATS* = "SDL_JOYSTICK_LINUX_DIGITAL_HATS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1973:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_DIGITAL_HATS" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_LINUX_HAT_DEADZONES):
  when "SDL_JOYSTICK_LINUX_HAT_DEADZONES" is static:
    const
      HINT_JOYSTICK_LINUX_HAT_DEADZONES* = "SDL_JOYSTICK_LINUX_HAT_DEADZONES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1989:9
  else:
    let HINT_JOYSTICK_LINUX_HAT_DEADZONES* = "SDL_JOYSTICK_LINUX_HAT_DEADZONES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:1989:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_LINUX_HAT_DEADZONES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_MFI):
  when "SDL_JOYSTICK_MFI" is static:
    const
      HINT_JOYSTICK_MFI* = "SDL_JOYSTICK_MFI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2004:9
  else:
    let HINT_JOYSTICK_MFI* = "SDL_JOYSTICK_MFI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2004:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_MFI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_RAWINPUT):
  when "SDL_JOYSTICK_RAWINPUT" is static:
    const
      HINT_JOYSTICK_RAWINPUT* = "SDL_JOYSTICK_RAWINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2019:9
  else:
    let HINT_JOYSTICK_RAWINPUT* = "SDL_JOYSTICK_RAWINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2019:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_RAWINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT):
  when "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" is static:
    const
      HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT* = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2036:9
  else:
    let HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT* = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2036:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ROG_CHAKRAM):
  when "SDL_JOYSTICK_ROG_CHAKRAM" is static:
    const
      HINT_JOYSTICK_ROG_CHAKRAM* = "SDL_JOYSTICK_ROG_CHAKRAM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2051:9
  else:
    let HINT_JOYSTICK_ROG_CHAKRAM* = "SDL_JOYSTICK_ROG_CHAKRAM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2051:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ROG_CHAKRAM" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THREAD):
  when "SDL_JOYSTICK_THREAD" is static:
    const
      HINT_JOYSTICK_THREAD* = "SDL_JOYSTICK_THREAD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2066:9
  else:
    let HINT_JOYSTICK_THREAD* = "SDL_JOYSTICK_THREAD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2066:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THREAD" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THROTTLE_DEVICES):
  when "SDL_JOYSTICK_THROTTLE_DEVICES" is static:
    const
      HINT_JOYSTICK_THROTTLE_DEVICES* = "SDL_JOYSTICK_THROTTLE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2083:9
  else:
    let HINT_JOYSTICK_THROTTLE_DEVICES* = "SDL_JOYSTICK_THROTTLE_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2083:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THROTTLE_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2104:9
  else:
    let HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED* = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2104:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WGI):
  when "SDL_JOYSTICK_WGI" is static:
    const
      HINT_JOYSTICK_WGI* = "SDL_JOYSTICK_WGI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2119:9
  else:
    let HINT_JOYSTICK_WGI* = "SDL_JOYSTICK_WGI" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2119:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WGI" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WHEEL_DEVICES):
  when "SDL_JOYSTICK_WHEEL_DEVICES" is static:
    const
      HINT_JOYSTICK_WHEEL_DEVICES* = "SDL_JOYSTICK_WHEEL_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2136:9
  else:
    let HINT_JOYSTICK_WHEEL_DEVICES* = "SDL_JOYSTICK_WHEEL_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2136:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WHEEL_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED):
  when "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" is static:
    const
      HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED* = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2157:9
  else:
    let HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED* = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2157:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_JOYSTICK_ZERO_CENTERED_DEVICES):
  when "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" is static:
    const
      HINT_JOYSTICK_ZERO_CENTERED_DEVICES* = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2175:9
  else:
    let HINT_JOYSTICK_ZERO_CENTERED_DEVICES* = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2175:9
else:
  static :
    hint("Declaration of " & "HINT_JOYSTICK_ZERO_CENTERED_DEVICES" &
        " already exists, not redeclaring")
when not declared(HINT_KEYCODE_OPTIONS):
  when "SDL_KEYCODE_OPTIONS" is static:
    const
      HINT_KEYCODE_OPTIONS* = "SDL_KEYCODE_OPTIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2209:9
  else:
    let HINT_KEYCODE_OPTIONS* = "SDL_KEYCODE_OPTIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2209:9
else:
  static :
    hint("Declaration of " & "HINT_KEYCODE_OPTIONS" &
        " already exists, not redeclaring")
when not declared(HINT_KMSDRM_DEVICE_INDEX):
  when "SDL_KMSDRM_DEVICE_INDEX" is static:
    const
      HINT_KMSDRM_DEVICE_INDEX* = "SDL_KMSDRM_DEVICE_INDEX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2223:9
  else:
    let HINT_KMSDRM_DEVICE_INDEX* = "SDL_KMSDRM_DEVICE_INDEX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2223:9
else:
  static :
    hint("Declaration of " & "HINT_KMSDRM_DEVICE_INDEX" &
        " already exists, not redeclaring")
when not declared(HINT_KMSDRM_REQUIRE_DRM_MASTER):
  when "SDL_KMSDRM_REQUIRE_DRM_MASTER" is static:
    const
      HINT_KMSDRM_REQUIRE_DRM_MASTER* = "SDL_KMSDRM_REQUIRE_DRM_MASTER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2251:9
  else:
    let HINT_KMSDRM_REQUIRE_DRM_MASTER* = "SDL_KMSDRM_REQUIRE_DRM_MASTER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2251:9
else:
  static :
    hint("Declaration of " & "HINT_KMSDRM_REQUIRE_DRM_MASTER" &
        " already exists, not redeclaring")
when not declared(HINT_LOGGING):
  when "SDL_LOGGING" is static:
    const
      HINT_LOGGING* = "SDL_LOGGING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2277:9
  else:
    let HINT_LOGGING* = "SDL_LOGGING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2277:9
else:
  static :
    hint("Declaration of " & "HINT_LOGGING" & " already exists, not redeclaring")
when not declared(HINT_MAC_BACKGROUND_APP):
  when "SDL_MAC_BACKGROUND_APP" is static:
    const
      HINT_MAC_BACKGROUND_APP* = "SDL_MAC_BACKGROUND_APP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2293:9
  else:
    let HINT_MAC_BACKGROUND_APP* = "SDL_MAC_BACKGROUND_APP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2293:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_BACKGROUND_APP" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK):
  when "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" is static:
    const
      HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK* = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2309:9
  else:
    let HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK* = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2309:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_OPENGL_ASYNC_DISPATCH):
  when "SDL_MAC_OPENGL_ASYNC_DISPATCH" is static:
    const
      HINT_MAC_OPENGL_ASYNC_DISPATCH* = "SDL_MAC_OPENGL_ASYNC_DISPATCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2332:9
  else:
    let HINT_MAC_OPENGL_ASYNC_DISPATCH* = "SDL_MAC_OPENGL_ASYNC_DISPATCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2332:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_OPENGL_ASYNC_DISPATCH" &
        " already exists, not redeclaring")
when not declared(HINT_MAC_SCROLL_MOMENTUM):
  when "SDL_MAC_SCROLL_MOMENTUM" is static:
    const
      HINT_MAC_SCROLL_MOMENTUM* = "SDL_MAC_SCROLL_MOMENTUM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2347:9
  else:
    let HINT_MAC_SCROLL_MOMENTUM* = "SDL_MAC_SCROLL_MOMENTUM" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2347:9
else:
  static :
    hint("Declaration of " & "HINT_MAC_SCROLL_MOMENTUM" &
        " already exists, not redeclaring")
when not declared(HINT_MAIN_CALLBACK_RATE):
  when "SDL_MAIN_CALLBACK_RATE" is static:
    const
      HINT_MAIN_CALLBACK_RATE* = "SDL_MAIN_CALLBACK_RATE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2365:9
  else:
    let HINT_MAIN_CALLBACK_RATE* = "SDL_MAIN_CALLBACK_RATE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2365:9
else:
  static :
    hint("Declaration of " & "HINT_MAIN_CALLBACK_RATE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_AUTO_CAPTURE):
  when "SDL_MOUSE_AUTO_CAPTURE" is static:
    const
      HINT_MOUSE_AUTO_CAPTURE* = "SDL_MOUSE_AUTO_CAPTURE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2384:9
  else:
    let HINT_MOUSE_AUTO_CAPTURE* = "SDL_MOUSE_AUTO_CAPTURE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2384:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_AUTO_CAPTURE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DOUBLE_CLICK_RADIUS):
  when "SDL_MOUSE_DOUBLE_CLICK_RADIUS" is static:
    const
      HINT_MOUSE_DOUBLE_CLICK_RADIUS* = "SDL_MOUSE_DOUBLE_CLICK_RADIUS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2393:9
  else:
    let HINT_MOUSE_DOUBLE_CLICK_RADIUS* = "SDL_MOUSE_DOUBLE_CLICK_RADIUS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2393:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DOUBLE_CLICK_RADIUS" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DOUBLE_CLICK_TIME):
  when "SDL_MOUSE_DOUBLE_CLICK_TIME" is static:
    const
      HINT_MOUSE_DOUBLE_CLICK_TIME* = "SDL_MOUSE_DOUBLE_CLICK_TIME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2402:9
  else:
    let HINT_MOUSE_DOUBLE_CLICK_TIME* = "SDL_MOUSE_DOUBLE_CLICK_TIME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2402:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DOUBLE_CLICK_TIME" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_DEFAULT_SYSTEM_CURSOR):
  when "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" is static:
    const
      HINT_MOUSE_DEFAULT_SYSTEM_CURSOR* = "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2414:9
  else:
    let HINT_MOUSE_DEFAULT_SYSTEM_CURSOR* = "SDL_MOUSE_DEFAULT_SYSTEM_CURSOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2414:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_DEFAULT_SYSTEM_CURSOR" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE):
  when "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" is static:
    const
      HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE* = "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2446:9
  else:
    let HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE* = "SDL_MOUSE_EMULATE_WARP_WITH_RELATIVE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2446:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_EMULATE_WARP_WITH_RELATIVE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_FOCUS_CLICKTHROUGH):
  when "SDL_MOUSE_FOCUS_CLICKTHROUGH" is static:
    const
      HINT_MOUSE_FOCUS_CLICKTHROUGH* = "SDL_MOUSE_FOCUS_CLICKTHROUGH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2460:9
  else:
    let HINT_MOUSE_FOCUS_CLICKTHROUGH* = "SDL_MOUSE_FOCUS_CLICKTHROUGH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2460:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_FOCUS_CLICKTHROUGH" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_NORMAL_SPEED_SCALE):
  when "SDL_MOUSE_NORMAL_SPEED_SCALE" is static:
    const
      HINT_MOUSE_NORMAL_SPEED_SCALE* = "SDL_MOUSE_NORMAL_SPEED_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2470:9
  else:
    let HINT_MOUSE_NORMAL_SPEED_SCALE* = "SDL_MOUSE_NORMAL_SPEED_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2470:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_NORMAL_SPEED_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_MODE_CENTER):
  when "SDL_MOUSE_RELATIVE_MODE_CENTER" is static:
    const
      HINT_MOUSE_RELATIVE_MODE_CENTER* = "SDL_MOUSE_RELATIVE_MODE_CENTER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2491:9
  else:
    let HINT_MOUSE_RELATIVE_MODE_CENTER* = "SDL_MOUSE_RELATIVE_MODE_CENTER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2491:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_MODE_CENTER" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_MODE_WARP):
  when "SDL_MOUSE_RELATIVE_MODE_WARP" is static:
    const
      HINT_MOUSE_RELATIVE_MODE_WARP* = "SDL_MOUSE_RELATIVE_MODE_WARP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2506:9
  else:
    let HINT_MOUSE_RELATIVE_MODE_WARP* = "SDL_MOUSE_RELATIVE_MODE_WARP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2506:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_MODE_WARP" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_SPEED_SCALE):
  when "SDL_MOUSE_RELATIVE_SPEED_SCALE" is static:
    const
      HINT_MOUSE_RELATIVE_SPEED_SCALE* = "SDL_MOUSE_RELATIVE_SPEED_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2516:9
  else:
    let HINT_MOUSE_RELATIVE_SPEED_SCALE* = "SDL_MOUSE_RELATIVE_SPEED_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2516:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_SPEED_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_SYSTEM_SCALE):
  when "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" is static:
    const
      HINT_MOUSE_RELATIVE_SYSTEM_SCALE* = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2535:9
  else:
    let HINT_MOUSE_RELATIVE_SYSTEM_SCALE* = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2535:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_SYSTEM_SCALE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_WARP_MOTION):
  when "SDL_MOUSE_RELATIVE_WARP_MOTION" is static:
    const
      HINT_MOUSE_RELATIVE_WARP_MOTION* = "SDL_MOUSE_RELATIVE_WARP_MOTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2554:9
  else:
    let HINT_MOUSE_RELATIVE_WARP_MOTION* = "SDL_MOUSE_RELATIVE_WARP_MOTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2554:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_WARP_MOTION" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_CURSOR_VISIBLE):
  when "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" is static:
    const
      HINT_MOUSE_RELATIVE_CURSOR_VISIBLE* = "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2573:9
  else:
    let HINT_MOUSE_RELATIVE_CURSOR_VISIBLE* = "SDL_MOUSE_RELATIVE_CURSOR_VISIBLE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2573:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_CURSOR_VISIBLE" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_RELATIVE_CLIP_INTERVAL):
  when "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" is static:
    const
      HINT_MOUSE_RELATIVE_CLIP_INTERVAL* = "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2590:9
  else:
    let HINT_MOUSE_RELATIVE_CLIP_INTERVAL* = "SDL_MOUSE_RELATIVE_CLIP_INTERVAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2590:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_RELATIVE_CLIP_INTERVAL" &
        " already exists, not redeclaring")
when not declared(HINT_MOUSE_TOUCH_EVENTS):
  when "SDL_MOUSE_TOUCH_EVENTS" is static:
    const
      HINT_MOUSE_TOUCH_EVENTS* = "SDL_MOUSE_TOUCH_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2607:9
  else:
    let HINT_MOUSE_TOUCH_EVENTS* = "SDL_MOUSE_TOUCH_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2607:9
else:
  static :
    hint("Declaration of " & "HINT_MOUSE_TOUCH_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_MUTE_CONSOLE_KEYBOARD):
  when "SDL_MUTE_CONSOLE_KEYBOARD" is static:
    const
      HINT_MUTE_CONSOLE_KEYBOARD* = "SDL_MUTE_CONSOLE_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2625:9
  else:
    let HINT_MUTE_CONSOLE_KEYBOARD* = "SDL_MUTE_CONSOLE_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2625:9
else:
  static :
    hint("Declaration of " & "HINT_MUTE_CONSOLE_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_NO_SIGNAL_HANDLERS):
  when "SDL_NO_SIGNAL_HANDLERS" is static:
    const
      HINT_NO_SIGNAL_HANDLERS* = "SDL_NO_SIGNAL_HANDLERS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2640:9
  else:
    let HINT_NO_SIGNAL_HANDLERS* = "SDL_NO_SIGNAL_HANDLERS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2640:9
else:
  static :
    hint("Declaration of " & "HINT_NO_SIGNAL_HANDLERS" &
        " already exists, not redeclaring")
when not declared(HINT_OPENGL_LIBRARY):
  when "SDL_OPENGL_LIBRARY" is static:
    const
      HINT_OPENGL_LIBRARY* = "SDL_OPENGL_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2650:9
  else:
    let HINT_OPENGL_LIBRARY* = "SDL_OPENGL_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2650:9
else:
  static :
    hint("Declaration of " & "HINT_OPENGL_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_OPENGL_ES_DRIVER):
  when "SDL_OPENGL_ES_DRIVER" is static:
    const
      HINT_OPENGL_ES_DRIVER* = "SDL_OPENGL_ES_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2684:9
  else:
    let HINT_OPENGL_ES_DRIVER* = "SDL_OPENGL_ES_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2684:9
else:
  static :
    hint("Declaration of " & "HINT_OPENGL_ES_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_OPENVR_LIBRARY):
  when "SDL_OPENVR_LIBRARY" is static:
    const
      HINT_OPENVR_LIBRARY* = "SDL_OPENVR_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2696:9
  else:
    let HINT_OPENVR_LIBRARY* = "SDL_OPENVR_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2696:9
else:
  static :
    hint("Declaration of " & "HINT_OPENVR_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_ORIENTATIONS):
  when "SDL_ORIENTATIONS" is static:
    const
      HINT_ORIENTATIONS* = "SDL_ORIENTATIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2715:9
  else:
    let HINT_ORIENTATIONS* = "SDL_ORIENTATIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2715:9
else:
  static :
    hint("Declaration of " & "HINT_ORIENTATIONS" &
        " already exists, not redeclaring")
when not declared(HINT_POLL_SENTINEL):
  when "SDL_POLL_SENTINEL" is static:
    const
      HINT_POLL_SENTINEL* = "SDL_POLL_SENTINEL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2735:9
  else:
    let HINT_POLL_SENTINEL* = "SDL_POLL_SENTINEL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2735:9
else:
  static :
    hint("Declaration of " & "HINT_POLL_SENTINEL" &
        " already exists, not redeclaring")
when not declared(HINT_PREFERRED_LOCALES):
  when "SDL_PREFERRED_LOCALES" is static:
    const
      HINT_PREFERRED_LOCALES* = "SDL_PREFERRED_LOCALES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2753:9
  else:
    let HINT_PREFERRED_LOCALES* = "SDL_PREFERRED_LOCALES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2753:9
else:
  static :
    hint("Declaration of " & "HINT_PREFERRED_LOCALES" &
        " already exists, not redeclaring")
when not declared(HINT_QUIT_ON_LAST_WINDOW_CLOSE):
  when "SDL_QUIT_ON_LAST_WINDOW_CLOSE" is static:
    const
      HINT_QUIT_ON_LAST_WINDOW_CLOSE* = "SDL_QUIT_ON_LAST_WINDOW_CLOSE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2772:9
  else:
    let HINT_QUIT_ON_LAST_WINDOW_CLOSE* = "SDL_QUIT_ON_LAST_WINDOW_CLOSE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2772:9
else:
  static :
    hint("Declaration of " & "HINT_QUIT_ON_LAST_WINDOW_CLOSE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DIRECT3D_THREADSAFE):
  when "SDL_RENDER_DIRECT3D_THREADSAFE" is static:
    const
      HINT_RENDER_DIRECT3D_THREADSAFE* = "SDL_RENDER_DIRECT3D_THREADSAFE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2787:9
  else:
    let HINT_RENDER_DIRECT3D_THREADSAFE* = "SDL_RENDER_DIRECT3D_THREADSAFE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2787:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DIRECT3D_THREADSAFE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DIRECT3D11_DEBUG):
  when "SDL_RENDER_DIRECT3D11_DEBUG" is static:
    const
      HINT_RENDER_DIRECT3D11_DEBUG* = "SDL_RENDER_DIRECT3D11_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2803:9
  else:
    let HINT_RENDER_DIRECT3D11_DEBUG* = "SDL_RENDER_DIRECT3D11_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2803:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DIRECT3D11_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_VULKAN_DEBUG):
  when "SDL_RENDER_VULKAN_DEBUG" is static:
    const
      HINT_RENDER_VULKAN_DEBUG* = "SDL_RENDER_VULKAN_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2817:9
  else:
    let HINT_RENDER_VULKAN_DEBUG* = "SDL_RENDER_VULKAN_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2817:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_VULKAN_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_GPU_DEBUG):
  when "SDL_RENDER_GPU_DEBUG" is static:
    const
      HINT_RENDER_GPU_DEBUG* = "SDL_RENDER_GPU_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2831:9
  else:
    let HINT_RENDER_GPU_DEBUG* = "SDL_RENDER_GPU_DEBUG" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2831:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_GPU_DEBUG" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_GPU_LOW_POWER):
  when "SDL_RENDER_GPU_LOW_POWER" is static:
    const
      HINT_RENDER_GPU_LOW_POWER* = "SDL_RENDER_GPU_LOW_POWER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2846:9
  else:
    let HINT_RENDER_GPU_LOW_POWER* = "SDL_RENDER_GPU_LOW_POWER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2846:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_GPU_LOW_POWER" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_DRIVER):
  when "SDL_RENDER_DRIVER" is static:
    const
      HINT_RENDER_DRIVER* = "SDL_RENDER_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2875:9
  else:
    let HINT_RENDER_DRIVER* = "SDL_RENDER_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2875:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_LINE_METHOD):
  when "SDL_RENDER_LINE_METHOD" is static:
    const
      HINT_RENDER_LINE_METHOD* = "SDL_RENDER_LINE_METHOD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2893:9
  else:
    let HINT_RENDER_LINE_METHOD* = "SDL_RENDER_LINE_METHOD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2893:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_LINE_METHOD" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE):
  when "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" is static:
    const
      HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE* = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2908:9
  else:
    let HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE* = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2908:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_RENDER_VSYNC):
  when "SDL_RENDER_VSYNC" is static:
    const
      HINT_RENDER_VSYNC* = "SDL_RENDER_VSYNC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2925:9
  else:
    let HINT_RENDER_VSYNC* = "SDL_RENDER_VSYNC" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2925:9
else:
  static :
    hint("Declaration of " & "HINT_RENDER_VSYNC" &
        " already exists, not redeclaring")
when not declared(HINT_RETURN_KEY_HIDES_IME):
  when "SDL_RETURN_KEY_HIDES_IME" is static:
    const
      HINT_RETURN_KEY_HIDES_IME* = "SDL_RETURN_KEY_HIDES_IME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2942:9
  else:
    let HINT_RETURN_KEY_HIDES_IME* = "SDL_RETURN_KEY_HIDES_IME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2942:9
else:
  static :
    hint("Declaration of " & "HINT_RETURN_KEY_HIDES_IME" &
        " already exists, not redeclaring")
when not declared(HINT_ROG_GAMEPAD_MICE):
  when "SDL_ROG_GAMEPAD_MICE" is static:
    const
      HINT_ROG_GAMEPAD_MICE* = "SDL_ROG_GAMEPAD_MICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2961:9
  else:
    let HINT_ROG_GAMEPAD_MICE* = "SDL_ROG_GAMEPAD_MICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2961:9
else:
  static :
    hint("Declaration of " & "HINT_ROG_GAMEPAD_MICE" &
        " already exists, not redeclaring")
when not declared(HINT_ROG_GAMEPAD_MICE_EXCLUDED):
  when "SDL_ROG_GAMEPAD_MICE_EXCLUDED" is static:
    const
      HINT_ROG_GAMEPAD_MICE_EXCLUDED* = "SDL_ROG_GAMEPAD_MICE_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2981:9
  else:
    let HINT_ROG_GAMEPAD_MICE_EXCLUDED* = "SDL_ROG_GAMEPAD_MICE_EXCLUDED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2981:9
else:
  static :
    hint("Declaration of " & "HINT_ROG_GAMEPAD_MICE_EXCLUDED" &
        " already exists, not redeclaring")
when not declared(HINT_RPI_VIDEO_LAYER):
  when "SDL_RPI_VIDEO_LAYER" is static:
    const
      HINT_RPI_VIDEO_LAYER* = "SDL_RPI_VIDEO_LAYER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2993:9
  else:
    let HINT_RPI_VIDEO_LAYER* = "SDL_RPI_VIDEO_LAYER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:2993:9
else:
  static :
    hint("Declaration of " & "HINT_RPI_VIDEO_LAYER" &
        " already exists, not redeclaring")
when not declared(HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME):
  when "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" is static:
    const
      HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME* = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3015:9
  else:
    let HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME* = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3015:9
else:
  static :
    hint("Declaration of " & "HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME" &
        " already exists, not redeclaring")
when not declared(HINT_SHUTDOWN_DBUS_ON_QUIT):
  when "SDL_SHUTDOWN_DBUS_ON_QUIT" is static:
    const
      HINT_SHUTDOWN_DBUS_ON_QUIT* = "SDL_SHUTDOWN_DBUS_ON_QUIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3034:9
  else:
    let HINT_SHUTDOWN_DBUS_ON_QUIT* = "SDL_SHUTDOWN_DBUS_ON_QUIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3034:9
else:
  static :
    hint("Declaration of " & "HINT_SHUTDOWN_DBUS_ON_QUIT" &
        " already exists, not redeclaring")
when not declared(HINT_STORAGE_TITLE_DRIVER):
  when "SDL_STORAGE_TITLE_DRIVER" is static:
    const
      HINT_STORAGE_TITLE_DRIVER* = "SDL_STORAGE_TITLE_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3048:9
  else:
    let HINT_STORAGE_TITLE_DRIVER* = "SDL_STORAGE_TITLE_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3048:9
else:
  static :
    hint("Declaration of " & "HINT_STORAGE_TITLE_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_STORAGE_USER_DRIVER):
  when "SDL_STORAGE_USER_DRIVER" is static:
    const
      HINT_STORAGE_USER_DRIVER* = "SDL_STORAGE_USER_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3062:9
  else:
    let HINT_STORAGE_USER_DRIVER* = "SDL_STORAGE_USER_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3062:9
else:
  static :
    hint("Declaration of " & "HINT_STORAGE_USER_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL):
  when "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" is static:
    const
      HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL* = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3091:9
  else:
    let HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL* = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3091:9
else:
  static :
    hint("Declaration of " & "HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL" &
        " already exists, not redeclaring")
when not declared(HINT_THREAD_PRIORITY_POLICY):
  when "SDL_THREAD_PRIORITY_POLICY" is static:
    const
      HINT_THREAD_PRIORITY_POLICY* = "SDL_THREAD_PRIORITY_POLICY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3114:9
  else:
    let HINT_THREAD_PRIORITY_POLICY* = "SDL_THREAD_PRIORITY_POLICY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3114:9
else:
  static :
    hint("Declaration of " & "HINT_THREAD_PRIORITY_POLICY" &
        " already exists, not redeclaring")
when not declared(HINT_TIMER_RESOLUTION):
  when "SDL_TIMER_RESOLUTION" is static:
    const
      HINT_TIMER_RESOLUTION* = "SDL_TIMER_RESOLUTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3134:9
  else:
    let HINT_TIMER_RESOLUTION* = "SDL_TIMER_RESOLUTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3134:9
else:
  static :
    hint("Declaration of " & "HINT_TIMER_RESOLUTION" &
        " already exists, not redeclaring")
when not declared(HINT_TOUCH_MOUSE_EVENTS):
  when "SDL_TOUCH_MOUSE_EVENTS" is static:
    const
      HINT_TOUCH_MOUSE_EVENTS* = "SDL_TOUCH_MOUSE_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3149:9
  else:
    let HINT_TOUCH_MOUSE_EVENTS* = "SDL_TOUCH_MOUSE_EVENTS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3149:9
else:
  static :
    hint("Declaration of " & "HINT_TOUCH_MOUSE_EVENTS" &
        " already exists, not redeclaring")
when not declared(HINT_TRACKPAD_IS_TOUCH_ONLY):
  when "SDL_TRACKPAD_IS_TOUCH_ONLY" is static:
    const
      HINT_TRACKPAD_IS_TOUCH_ONLY* = "SDL_TRACKPAD_IS_TOUCH_ONLY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3170:9
  else:
    let HINT_TRACKPAD_IS_TOUCH_ONLY* = "SDL_TRACKPAD_IS_TOUCH_ONLY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3170:9
else:
  static :
    hint("Declaration of " & "HINT_TRACKPAD_IS_TOUCH_ONLY" &
        " already exists, not redeclaring")
when not declared(HINT_TV_REMOTE_AS_JOYSTICK):
  when "SDL_TV_REMOTE_AS_JOYSTICK" is static:
    const
      HINT_TV_REMOTE_AS_JOYSTICK* = "SDL_TV_REMOTE_AS_JOYSTICK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3185:9
  else:
    let HINT_TV_REMOTE_AS_JOYSTICK* = "SDL_TV_REMOTE_AS_JOYSTICK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3185:9
else:
  static :
    hint("Declaration of " & "HINT_TV_REMOTE_AS_JOYSTICK" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_ALLOW_SCREENSAVER):
  when "SDL_VIDEO_ALLOW_SCREENSAVER" is static:
    const
      HINT_VIDEO_ALLOW_SCREENSAVER* = "SDL_VIDEO_ALLOW_SCREENSAVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3199:9
  else:
    let HINT_VIDEO_ALLOW_SCREENSAVER* = "SDL_VIDEO_ALLOW_SCREENSAVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3199:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_ALLOW_SCREENSAVER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DISPLAY_PRIORITY):
  when "SDL_VIDEO_DISPLAY_PRIORITY" is static:
    const
      HINT_VIDEO_DISPLAY_PRIORITY* = "SDL_VIDEO_DISPLAY_PRIORITY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3224:9
  else:
    let HINT_VIDEO_DISPLAY_PRIORITY* = "SDL_VIDEO_DISPLAY_PRIORITY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3224:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DISPLAY_PRIORITY" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DOUBLE_BUFFER):
  when "SDL_VIDEO_DOUBLE_BUFFER" is static:
    const
      HINT_VIDEO_DOUBLE_BUFFER* = "SDL_VIDEO_DOUBLE_BUFFER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3247:9
  else:
    let HINT_VIDEO_DOUBLE_BUFFER* = "SDL_VIDEO_DOUBLE_BUFFER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3247:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DOUBLE_BUFFER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DRIVER):
  when "SDL_VIDEO_DRIVER" is static:
    const
      HINT_VIDEO_DRIVER* = "SDL_VIDEO_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3261:9
  else:
    let HINT_VIDEO_DRIVER* = "SDL_VIDEO_DRIVER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3261:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DRIVER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_DUMMY_SAVE_FRAMES):
  when "SDL_VIDEO_DUMMY_SAVE_FRAMES" is static:
    const
      HINT_VIDEO_DUMMY_SAVE_FRAMES* = "SDL_VIDEO_DUMMY_SAVE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3274:9
  else:
    let HINT_VIDEO_DUMMY_SAVE_FRAMES* = "SDL_VIDEO_DUMMY_SAVE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3274:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_DUMMY_SAVE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK):
  when "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" is static:
    const
      HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK* = "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3288:9
  else:
    let HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK* = "SDL_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3288:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_FORCE_EGL):
  when "SDL_VIDEO_FORCE_EGL" is static:
    const
      HINT_VIDEO_FORCE_EGL* = "SDL_VIDEO_FORCE_EGL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3304:9
  else:
    let HINT_VIDEO_FORCE_EGL* = "SDL_VIDEO_FORCE_EGL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3304:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_FORCE_EGL" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_MAC_FULLSCREEN_SPACES):
  when "SDL_VIDEO_MAC_FULLSCREEN_SPACES" is static:
    const
      HINT_VIDEO_MAC_FULLSCREEN_SPACES* = "SDL_VIDEO_MAC_FULLSCREEN_SPACES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3322:9
  else:
    let HINT_VIDEO_MAC_FULLSCREEN_SPACES* = "SDL_VIDEO_MAC_FULLSCREEN_SPACES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3322:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_MAC_FULLSCREEN_SPACES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS):
  when "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" is static:
    const
      HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS* = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3338:9
  else:
    let HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS* = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3338:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_OFFSCREEN_SAVE_FRAMES):
  when "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" is static:
    const
      HINT_VIDEO_OFFSCREEN_SAVE_FRAMES* = "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3355:9
  else:
    let HINT_VIDEO_OFFSCREEN_SAVE_FRAMES* = "SDL_VIDEO_OFFSCREEN_SAVE_FRAMES" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3355:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_OFFSCREEN_SAVE_FRAMES" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_SYNC_WINDOW_OPERATIONS):
  when "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" is static:
    const
      HINT_VIDEO_SYNC_WINDOW_OPERATIONS* = "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3381:9
  else:
    let HINT_VIDEO_SYNC_WINDOW_OPERATIONS* = "SDL_VIDEO_SYNC_WINDOW_OPERATIONS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3381:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_SYNC_WINDOW_OPERATIONS" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR):
  when "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" is static:
    const
      HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR* = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3399:9
  else:
    let HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR* = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3399:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_MODE_EMULATION):
  when "SDL_VIDEO_WAYLAND_MODE_EMULATION" is static:
    const
      HINT_VIDEO_WAYLAND_MODE_EMULATION* = "SDL_VIDEO_WAYLAND_MODE_EMULATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3419:9
  else:
    let HINT_VIDEO_WAYLAND_MODE_EMULATION* = "SDL_VIDEO_WAYLAND_MODE_EMULATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3419:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_MODE_EMULATION" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_MODE_SCALING):
  when "SDL_VIDEO_WAYLAND_MODE_SCALING" is static:
    const
      HINT_VIDEO_WAYLAND_MODE_SCALING* = "SDL_VIDEO_WAYLAND_MODE_SCALING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3441:9
  else:
    let HINT_VIDEO_WAYLAND_MODE_SCALING* = "SDL_VIDEO_WAYLAND_MODE_SCALING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3441:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_MODE_SCALING" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_PREFER_LIBDECOR):
  when "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" is static:
    const
      HINT_VIDEO_WAYLAND_PREFER_LIBDECOR* = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3461:9
  else:
    let HINT_VIDEO_WAYLAND_PREFER_LIBDECOR* = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3461:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_PREFER_LIBDECOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY):
  when "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" is static:
    const
      HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY* = "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3498:9
  else:
    let HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY* = "SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3498:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_WIN_D3DCOMPILER):
  when "SDL_VIDEO_WIN_D3DCOMPILER" is static:
    const
      HINT_VIDEO_WIN_D3DCOMPILER* = "SDL_VIDEO_WIN_D3DCOMPILER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3520:9
  else:
    let HINT_VIDEO_WIN_D3DCOMPILER* = "SDL_VIDEO_WIN_D3DCOMPILER" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3520:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_WIN_D3DCOMPILER" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR):
  when "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" is static:
    const
      HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR* = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3535:9
  else:
    let HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR* = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3535:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NET_WM_PING):
  when "SDL_VIDEO_X11_NET_WM_PING" is static:
    const
      HINT_VIDEO_X11_NET_WM_PING* = "SDL_VIDEO_X11_NET_WM_PING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3554:9
  else:
    let HINT_VIDEO_X11_NET_WM_PING* = "SDL_VIDEO_X11_NET_WM_PING" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3554:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NET_WM_PING" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_NODIRECTCOLOR):
  when "SDL_VIDEO_X11_NODIRECTCOLOR" is static:
    const
      HINT_VIDEO_X11_NODIRECTCOLOR* = "SDL_VIDEO_X11_NODIRECTCOLOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3568:9
  else:
    let HINT_VIDEO_X11_NODIRECTCOLOR* = "SDL_VIDEO_X11_NODIRECTCOLOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3568:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_NODIRECTCOLOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_SCALING_FACTOR):
  when "SDL_VIDEO_X11_SCALING_FACTOR" is static:
    const
      HINT_VIDEO_X11_SCALING_FACTOR* = "SDL_VIDEO_X11_SCALING_FACTOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3579:9
  else:
    let HINT_VIDEO_X11_SCALING_FACTOR* = "SDL_VIDEO_X11_SCALING_FACTOR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3579:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_SCALING_FACTOR" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_VISUALID):
  when "SDL_VIDEO_X11_VISUALID" is static:
    const
      HINT_VIDEO_X11_VISUALID* = "SDL_VIDEO_X11_VISUALID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3588:9
  else:
    let HINT_VIDEO_X11_VISUALID* = "SDL_VIDEO_X11_VISUALID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3588:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_VISUALID" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_WINDOW_VISUALID):
  when "SDL_VIDEO_X11_WINDOW_VISUALID" is static:
    const
      HINT_VIDEO_X11_WINDOW_VISUALID* = "SDL_VIDEO_X11_WINDOW_VISUALID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3597:9
  else:
    let HINT_VIDEO_X11_WINDOW_VISUALID* = "SDL_VIDEO_X11_WINDOW_VISUALID" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3597:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_WINDOW_VISUALID" &
        " already exists, not redeclaring")
when not declared(HINT_VIDEO_X11_XRANDR):
  when "SDL_VIDEO_X11_XRANDR" is static:
    const
      HINT_VIDEO_X11_XRANDR* = "SDL_VIDEO_X11_XRANDR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3611:9
  else:
    let HINT_VIDEO_X11_XRANDR* = "SDL_VIDEO_X11_XRANDR" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3611:9
else:
  static :
    hint("Declaration of " & "HINT_VIDEO_X11_XRANDR" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_ENABLE_BACK_TOUCH):
  when "SDL_VITA_ENABLE_BACK_TOUCH" is static:
    const
      HINT_VITA_ENABLE_BACK_TOUCH* = "SDL_VITA_ENABLE_BACK_TOUCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3626:9
  else:
    let HINT_VITA_ENABLE_BACK_TOUCH* = "SDL_VITA_ENABLE_BACK_TOUCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3626:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_ENABLE_BACK_TOUCH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_ENABLE_FRONT_TOUCH):
  when "SDL_VITA_ENABLE_FRONT_TOUCH" is static:
    const
      HINT_VITA_ENABLE_FRONT_TOUCH* = "SDL_VITA_ENABLE_FRONT_TOUCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3641:9
  else:
    let HINT_VITA_ENABLE_FRONT_TOUCH* = "SDL_VITA_ENABLE_FRONT_TOUCH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3641:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_ENABLE_FRONT_TOUCH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_MODULE_PATH):
  when "SDL_VITA_MODULE_PATH" is static:
    const
      HINT_VITA_MODULE_PATH* = "SDL_VITA_MODULE_PATH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3652:9
  else:
    let HINT_VITA_MODULE_PATH* = "SDL_VITA_MODULE_PATH" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3652:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_MODULE_PATH" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_PVR_INIT):
  when "SDL_VITA_PVR_INIT" is static:
    const
      HINT_VITA_PVR_INIT* = "SDL_VITA_PVR_INIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3665:9
  else:
    let HINT_VITA_PVR_INIT* = "SDL_VITA_PVR_INIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3665:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_PVR_INIT" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_RESOLUTION):
  when "SDL_VITA_RESOLUTION" is static:
    const
      HINT_VITA_RESOLUTION* = "SDL_VITA_RESOLUTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3680:9
  else:
    let HINT_VITA_RESOLUTION* = "SDL_VITA_RESOLUTION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3680:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_RESOLUTION" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_PVR_OPENGL):
  when "SDL_VITA_PVR_OPENGL" is static:
    const
      HINT_VITA_PVR_OPENGL* = "SDL_VITA_PVR_OPENGL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3695:9
  else:
    let HINT_VITA_PVR_OPENGL* = "SDL_VITA_PVR_OPENGL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3695:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_PVR_OPENGL" &
        " already exists, not redeclaring")
when not declared(HINT_VITA_TOUCH_MOUSE_DEVICE):
  when "SDL_VITA_TOUCH_MOUSE_DEVICE" is static:
    const
      HINT_VITA_TOUCH_MOUSE_DEVICE* = "SDL_VITA_TOUCH_MOUSE_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3711:9
  else:
    let HINT_VITA_TOUCH_MOUSE_DEVICE* = "SDL_VITA_TOUCH_MOUSE_DEVICE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3711:9
else:
  static :
    hint("Declaration of " & "HINT_VITA_TOUCH_MOUSE_DEVICE" &
        " already exists, not redeclaring")
when not declared(HINT_VULKAN_DISPLAY):
  when "SDL_VULKAN_DISPLAY" is static:
    const
      HINT_VULKAN_DISPLAY* = "SDL_VULKAN_DISPLAY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3722:9
  else:
    let HINT_VULKAN_DISPLAY* = "SDL_VULKAN_DISPLAY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3722:9
else:
  static :
    hint("Declaration of " & "HINT_VULKAN_DISPLAY" &
        " already exists, not redeclaring")
when not declared(HINT_VULKAN_LIBRARY):
  when "SDL_VULKAN_LIBRARY" is static:
    const
      HINT_VULKAN_LIBRARY* = "SDL_VULKAN_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3732:9
  else:
    let HINT_VULKAN_LIBRARY* = "SDL_VULKAN_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3732:9
else:
  static :
    hint("Declaration of " & "HINT_VULKAN_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_FACT_CHUNK):
  when "SDL_WAVE_FACT_CHUNK" is static:
    const
      HINT_WAVE_FACT_CHUNK* = "SDL_WAVE_FACT_CHUNK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3764:9
  else:
    let HINT_WAVE_FACT_CHUNK* = "SDL_WAVE_FACT_CHUNK" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3764:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_FACT_CHUNK" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_CHUNK_LIMIT):
  when "SDL_WAVE_CHUNK_LIMIT" is static:
    const
      HINT_WAVE_CHUNK_LIMIT* = "SDL_WAVE_CHUNK_LIMIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3776:9
  else:
    let HINT_WAVE_CHUNK_LIMIT* = "SDL_WAVE_CHUNK_LIMIT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3776:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_CHUNK_LIMIT" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_RIFF_CHUNK_SIZE):
  when "SDL_WAVE_RIFF_CHUNK_SIZE" is static:
    const
      HINT_WAVE_RIFF_CHUNK_SIZE* = "SDL_WAVE_RIFF_CHUNK_SIZE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3804:9
  else:
    let HINT_WAVE_RIFF_CHUNK_SIZE* = "SDL_WAVE_RIFF_CHUNK_SIZE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3804:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_RIFF_CHUNK_SIZE" &
        " already exists, not redeclaring")
when not declared(HINT_WAVE_TRUNCATION):
  when "SDL_WAVE_TRUNCATION" is static:
    const
      HINT_WAVE_TRUNCATION* = "SDL_WAVE_TRUNCATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3824:9
  else:
    let HINT_WAVE_TRUNCATION* = "SDL_WAVE_TRUNCATION" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3824:9
else:
  static :
    hint("Declaration of " & "HINT_WAVE_TRUNCATION" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ACTIVATE_WHEN_RAISED):
  when "SDL_WINDOW_ACTIVATE_WHEN_RAISED" is static:
    const
      HINT_WINDOW_ACTIVATE_WHEN_RAISED* = "SDL_WINDOW_ACTIVATE_WHEN_RAISED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3841:9
  else:
    let HINT_WINDOW_ACTIVATE_WHEN_RAISED* = "SDL_WINDOW_ACTIVATE_WHEN_RAISED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3841:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ACTIVATE_WHEN_RAISED" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ACTIVATE_WHEN_SHOWN):
  when "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" is static:
    const
      HINT_WINDOW_ACTIVATE_WHEN_SHOWN* = "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3858:9
  else:
    let HINT_WINDOW_ACTIVATE_WHEN_SHOWN* = "SDL_WINDOW_ACTIVATE_WHEN_SHOWN" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3858:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ACTIVATE_WHEN_SHOWN" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_ALLOW_TOPMOST):
  when "SDL_WINDOW_ALLOW_TOPMOST" is static:
    const
      HINT_WINDOW_ALLOW_TOPMOST* = "SDL_WINDOW_ALLOW_TOPMOST" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3876:9
  else:
    let HINT_WINDOW_ALLOW_TOPMOST* = "SDL_WINDOW_ALLOW_TOPMOST" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3876:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_ALLOW_TOPMOST" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN):
  when "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" is static:
    const
      HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN* = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3892:9
  else:
    let HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN* = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3892:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_CLOSE_ON_ALT_F4):
  when "SDL_WINDOWS_CLOSE_ON_ALT_F4" is static:
    const
      HINT_WINDOWS_CLOSE_ON_ALT_F4* = "SDL_WINDOWS_CLOSE_ON_ALT_F4" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3908:9
  else:
    let HINT_WINDOWS_CLOSE_ON_ALT_F4* = "SDL_WINDOWS_CLOSE_ON_ALT_F4" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3908:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_CLOSE_ON_ALT_F4" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ENABLE_MENU_MNEMONICS):
  when "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" is static:
    const
      HINT_WINDOWS_ENABLE_MENU_MNEMONICS* = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3937:9
  else:
    let HINT_WINDOWS_ENABLE_MENU_MNEMONICS* = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3937:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ENABLE_MENU_MNEMONICS" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ENABLE_MESSAGELOOP):
  when "SDL_WINDOWS_ENABLE_MESSAGELOOP" is static:
    const
      HINT_WINDOWS_ENABLE_MESSAGELOOP* = "SDL_WINDOWS_ENABLE_MESSAGELOOP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3952:9
  else:
    let HINT_WINDOWS_ENABLE_MESSAGELOOP* = "SDL_WINDOWS_ENABLE_MESSAGELOOP" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3952:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ENABLE_MESSAGELOOP" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_GAMEINPUT):
  when "SDL_WINDOWS_GAMEINPUT" is static:
    const
      HINT_WINDOWS_GAMEINPUT* = "SDL_WINDOWS_GAMEINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3968:9
  else:
    let HINT_WINDOWS_GAMEINPUT* = "SDL_WINDOWS_GAMEINPUT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3968:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_GAMEINPUT" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_RAW_KEYBOARD):
  when "SDL_WINDOWS_RAW_KEYBOARD" is static:
    const
      HINT_WINDOWS_RAW_KEYBOARD* = "SDL_WINDOWS_RAW_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3982:9
  else:
    let HINT_WINDOWS_RAW_KEYBOARD* = "SDL_WINDOWS_RAW_KEYBOARD" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:3982:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_RAW_KEYBOARD" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL):
  when "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" is static:
    const
      HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL* = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4003:9
  else:
    let HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL* = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4003:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_INTRESOURCE_ICON):
  when "SDL_WINDOWS_INTRESOURCE_ICON" is static:
    const
      HINT_WINDOWS_INTRESOURCE_ICON* = "SDL_WINDOWS_INTRESOURCE_ICON" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4013:9
  else:
    let HINT_WINDOWS_INTRESOURCE_ICON* = "SDL_WINDOWS_INTRESOURCE_ICON" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4013:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_INTRESOURCE_ICON" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_INTRESOURCE_ICON_SMALL):
  when "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" is static:
    const
      HINT_WINDOWS_INTRESOURCE_ICON_SMALL* = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4014:9
  else:
    let HINT_WINDOWS_INTRESOURCE_ICON_SMALL* = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4014:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_INTRESOURCE_ICON_SMALL" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_USE_D3D9EX):
  when "SDL_WINDOWS_USE_D3D9EX" is static:
    const
      HINT_WINDOWS_USE_D3D9EX* = "SDL_WINDOWS_USE_D3D9EX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4040:9
  else:
    let HINT_WINDOWS_USE_D3D9EX* = "SDL_WINDOWS_USE_D3D9EX" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4040:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_USE_D3D9EX" &
        " already exists, not redeclaring")
when not declared(HINT_WINDOWS_ERASE_BACKGROUND_MODE):
  when "SDL_WINDOWS_ERASE_BACKGROUND_MODE" is static:
    const
      HINT_WINDOWS_ERASE_BACKGROUND_MODE* = "SDL_WINDOWS_ERASE_BACKGROUND_MODE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4057:9
  else:
    let HINT_WINDOWS_ERASE_BACKGROUND_MODE* = "SDL_WINDOWS_ERASE_BACKGROUND_MODE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4057:9
else:
  static :
    hint("Declaration of " & "HINT_WINDOWS_ERASE_BACKGROUND_MODE" &
        " already exists, not redeclaring")
when not declared(HINT_X11_FORCE_OVERRIDE_REDIRECT):
  when "SDL_X11_FORCE_OVERRIDE_REDIRECT" is static:
    const
      HINT_X11_FORCE_OVERRIDE_REDIRECT* = "SDL_X11_FORCE_OVERRIDE_REDIRECT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4078:9
  else:
    let HINT_X11_FORCE_OVERRIDE_REDIRECT* = "SDL_X11_FORCE_OVERRIDE_REDIRECT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4078:9
else:
  static :
    hint("Declaration of " & "HINT_X11_FORCE_OVERRIDE_REDIRECT" &
        " already exists, not redeclaring")
when not declared(HINT_X11_WINDOW_TYPE):
  when "SDL_X11_WINDOW_TYPE" is static:
    const
      HINT_X11_WINDOW_TYPE* = "SDL_X11_WINDOW_TYPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4095:9
  else:
    let HINT_X11_WINDOW_TYPE* = "SDL_X11_WINDOW_TYPE" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4095:9
else:
  static :
    hint("Declaration of " & "HINT_X11_WINDOW_TYPE" &
        " already exists, not redeclaring")
when not declared(HINT_X11_XCB_LIBRARY):
  when "SDL_X11_XCB_LIBRARY" is static:
    const
      HINT_X11_XCB_LIBRARY* = "SDL_X11_XCB_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4106:9
  else:
    let HINT_X11_XCB_LIBRARY* = "SDL_X11_XCB_LIBRARY" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4106:9
else:
  static :
    hint("Declaration of " & "HINT_X11_XCB_LIBRARY" &
        " already exists, not redeclaring")
when not declared(HINT_XINPUT_ENABLED):
  when "SDL_XINPUT_ENABLED" is static:
    const
      HINT_XINPUT_ENABLED* = "SDL_XINPUT_ENABLED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4121:9
  else:
    let HINT_XINPUT_ENABLED* = "SDL_XINPUT_ENABLED" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4121:9
else:
  static :
    hint("Declaration of " & "HINT_XINPUT_ENABLED" &
        " already exists, not redeclaring")
when not declared(HINT_ASSERT):
  when "SDL_ASSERT" is static:
    const
      HINT_ASSERT* = "SDL_ASSERT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4145:9
  else:
    let HINT_ASSERT* = "SDL_ASSERT" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_hints.h:4145:9
else:
  static :
    hint("Declaration of " & "HINT_ASSERT" & " already exists, not redeclaring")
when not declared(INIT_AUDIO):
  when cast[cuint](16'i64) is static:
    const
      INIT_AUDIO* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:80:9
  else:
    let INIT_AUDIO* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:80:9
else:
  static :
    hint("Declaration of " & "INIT_AUDIO" & " already exists, not redeclaring")
when not declared(INIT_VIDEO):
  when cast[cuint](32'i64) is static:
    const
      INIT_VIDEO* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:81:9
  else:
    let INIT_VIDEO* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:81:9
else:
  static :
    hint("Declaration of " & "INIT_VIDEO" & " already exists, not redeclaring")
when not declared(INIT_JOYSTICK):
  when cast[cuint](512'i64) is static:
    const
      INIT_JOYSTICK* = cast[cuint](512'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:82:9
  else:
    let INIT_JOYSTICK* = cast[cuint](512'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:82:9
else:
  static :
    hint("Declaration of " & "INIT_JOYSTICK" &
        " already exists, not redeclaring")
when not declared(INIT_HAPTIC):
  when cast[cuint](4096'i64) is static:
    const
      INIT_HAPTIC* = cast[cuint](4096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:83:9
  else:
    let INIT_HAPTIC* = cast[cuint](4096'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:83:9
else:
  static :
    hint("Declaration of " & "INIT_HAPTIC" & " already exists, not redeclaring")
when not declared(INIT_GAMEPAD):
  when cast[cuint](8192'i64) is static:
    const
      INIT_GAMEPAD* = cast[cuint](8192'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:84:9
  else:
    let INIT_GAMEPAD* = cast[cuint](8192'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:84:9
else:
  static :
    hint("Declaration of " & "INIT_GAMEPAD" & " already exists, not redeclaring")
when not declared(INIT_EVENTS):
  when cast[cuint](16384'i64) is static:
    const
      INIT_EVENTS* = cast[cuint](16384'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:85:9
  else:
    let INIT_EVENTS* = cast[cuint](16384'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:85:9
else:
  static :
    hint("Declaration of " & "INIT_EVENTS" & " already exists, not redeclaring")
when not declared(INIT_SENSOR):
  when cast[cuint](32768'i64) is static:
    const
      INIT_SENSOR* = cast[cuint](32768'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:86:9
  else:
    let INIT_SENSOR* = cast[cuint](32768'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:86:9
else:
  static :
    hint("Declaration of " & "INIT_SENSOR" & " already exists, not redeclaring")
when not declared(INIT_CAMERA):
  when cast[cuint](65536'i64) is static:
    const
      INIT_CAMERA* = cast[cuint](65536'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:87:9
  else:
    let INIT_CAMERA* = cast[cuint](65536'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:87:9
else:
  static :
    hint("Declaration of " & "INIT_CAMERA" & " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_NAME_STRING):
  when "SDL.app.metadata.name" is static:
    const
      PROP_APP_METADATA_NAME_STRING* = "SDL.app.metadata.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:400:9
  else:
    let PROP_APP_METADATA_NAME_STRING* = "SDL.app.metadata.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:400:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_VERSION_STRING):
  when "SDL.app.metadata.version" is static:
    const
      PROP_APP_METADATA_VERSION_STRING* = "SDL.app.metadata.version" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:401:9
  else:
    let PROP_APP_METADATA_VERSION_STRING* = "SDL.app.metadata.version" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:401:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_VERSION_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_IDENTIFIER_STRING):
  when "SDL.app.metadata.identifier" is static:
    const
      PROP_APP_METADATA_IDENTIFIER_STRING* = "SDL.app.metadata.identifier" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:402:9
  else:
    let PROP_APP_METADATA_IDENTIFIER_STRING* = "SDL.app.metadata.identifier" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:402:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_IDENTIFIER_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_CREATOR_STRING):
  when "SDL.app.metadata.creator" is static:
    const
      PROP_APP_METADATA_CREATOR_STRING* = "SDL.app.metadata.creator" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:403:9
  else:
    let PROP_APP_METADATA_CREATOR_STRING* = "SDL.app.metadata.creator" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:403:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_CREATOR_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_COPYRIGHT_STRING):
  when "SDL.app.metadata.copyright" is static:
    const
      PROP_APP_METADATA_COPYRIGHT_STRING* = "SDL.app.metadata.copyright" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:404:9
  else:
    let PROP_APP_METADATA_COPYRIGHT_STRING* = "SDL.app.metadata.copyright" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:404:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_COPYRIGHT_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_URL_STRING):
  when "SDL.app.metadata.url" is static:
    const
      PROP_APP_METADATA_URL_STRING* = "SDL.app.metadata.url" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:405:9
  else:
    let PROP_APP_METADATA_URL_STRING* = "SDL.app.metadata.url" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:405:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_URL_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_APP_METADATA_TYPE_STRING):
  when "SDL.app.metadata.type" is static:
    const
      PROP_APP_METADATA_TYPE_STRING* = "SDL.app.metadata.type" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:406:9
  else:
    let PROP_APP_METADATA_TYPE_STRING* = "SDL.app.metadata.type" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_init.h:406:9
else:
  static :
    hint("Declaration of " & "PROP_APP_METADATA_TYPE_STRING" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_ERROR):
  when cast[cuint](16'i64) is static:
    const
      MESSAGEBOX_ERROR* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:50:9
  else:
    let MESSAGEBOX_ERROR* = cast[cuint](16'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:50:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_ERROR" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_WARNING):
  when cast[cuint](32'i64) is static:
    const
      MESSAGEBOX_WARNING* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:51:9
  else:
    let MESSAGEBOX_WARNING* = cast[cuint](32'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:51:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_WARNING" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_INFORMATION):
  when cast[cuint](64'i64) is static:
    const
      MESSAGEBOX_INFORMATION* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:52:9
  else:
    let MESSAGEBOX_INFORMATION* = cast[cuint](64'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:52:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_INFORMATION" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT):
  when cast[cuint](128'i64) is static:
    const
      MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT* = cast[cuint](128'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:53:9
  else:
    let MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT* = cast[cuint](128'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:53:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT):
  when cast[cuint](256'i64) is static:
    const
      MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT* = cast[cuint](256'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:54:9
  else:
    let MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT* = cast[cuint](256'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:54:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT):
  when cast[cuint](1'i64) is static:
    const
      MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:63:9
  else:
    let MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT* = cast[cuint](1'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:63:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT" &
        " already exists, not redeclaring")
when not declared(MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT):
  when cast[cuint](2'i64) is static:
    const
      MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:64:9
  else:
    let MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT* = cast[cuint](2'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_messagebox.h:64:9
else:
  static :
    hint("Declaration of " & "MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_ARGS_POINTER):
  when "SDL.process.create.args" is static:
    const
      PROP_PROCESS_CREATE_ARGS_POINTER* = "SDL.process.create.args" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:213:9
  else:
    let PROP_PROCESS_CREATE_ARGS_POINTER* = "SDL.process.create.args" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:213:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_ARGS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_ENVIRONMENT_POINTER):
  when "SDL.process.create.environment" is static:
    const
      PROP_PROCESS_CREATE_ENVIRONMENT_POINTER* = "SDL.process.create.environment" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:214:9
  else:
    let PROP_PROCESS_CREATE_ENVIRONMENT_POINTER* = "SDL.process.create.environment" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:214:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_ENVIRONMENT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDIN_NUMBER):
  when "SDL.process.create.stdin_option" is static:
    const
      PROP_PROCESS_CREATE_STDIN_NUMBER* = "SDL.process.create.stdin_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:215:9
  else:
    let PROP_PROCESS_CREATE_STDIN_NUMBER* = "SDL.process.create.stdin_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:215:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDIN_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDIN_POINTER):
  when "SDL.process.create.stdin_source" is static:
    const
      PROP_PROCESS_CREATE_STDIN_POINTER* = "SDL.process.create.stdin_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:216:9
  else:
    let PROP_PROCESS_CREATE_STDIN_POINTER* = "SDL.process.create.stdin_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:216:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDOUT_NUMBER):
  when "SDL.process.create.stdout_option" is static:
    const
      PROP_PROCESS_CREATE_STDOUT_NUMBER* = "SDL.process.create.stdout_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:217:9
  else:
    let PROP_PROCESS_CREATE_STDOUT_NUMBER* = "SDL.process.create.stdout_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:217:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDOUT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDOUT_POINTER):
  when "SDL.process.create.stdout_source" is static:
    const
      PROP_PROCESS_CREATE_STDOUT_POINTER* = "SDL.process.create.stdout_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:218:9
  else:
    let PROP_PROCESS_CREATE_STDOUT_POINTER* = "SDL.process.create.stdout_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:218:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDOUT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_NUMBER):
  when "SDL.process.create.stderr_option" is static:
    const
      PROP_PROCESS_CREATE_STDERR_NUMBER* = "SDL.process.create.stderr_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:219:9
  else:
    let PROP_PROCESS_CREATE_STDERR_NUMBER* = "SDL.process.create.stderr_option" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:219:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_POINTER):
  when "SDL.process.create.stderr_source" is static:
    const
      PROP_PROCESS_CREATE_STDERR_POINTER* = "SDL.process.create.stderr_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:220:9
  else:
    let PROP_PROCESS_CREATE_STDERR_POINTER* = "SDL.process.create.stderr_source" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:220:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN):
  when "SDL.process.create.stderr_to_stdout" is static:
    const
      PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN* = "SDL.process.create.stderr_to_stdout" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:221:9
  else:
    let PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN* = "SDL.process.create.stderr_to_stdout" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:221:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN):
  when "SDL.process.create.background" is static:
    const
      PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN* = "SDL.process.create.background" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:222:9
  else:
    let PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN* = "SDL.process.create.background" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:222:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_PID_NUMBER):
  when "SDL.process.pid" is static:
    const
      PROP_PROCESS_PID_NUMBER* = "SDL.process.pid" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:255:9
  else:
    let PROP_PROCESS_PID_NUMBER* = "SDL.process.pid" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:255:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_PID_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDIN_POINTER):
  when "SDL.process.stdin" is static:
    const
      PROP_PROCESS_STDIN_POINTER* = "SDL.process.stdin" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:256:9
  else:
    let PROP_PROCESS_STDIN_POINTER* = "SDL.process.stdin" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:256:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDOUT_POINTER):
  when "SDL.process.stdout" is static:
    const
      PROP_PROCESS_STDOUT_POINTER* = "SDL.process.stdout" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:257:9
  else:
    let PROP_PROCESS_STDOUT_POINTER* = "SDL.process.stdout" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:257:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDOUT_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_STDERR_POINTER):
  when "SDL.process.stderr" is static:
    const
      PROP_PROCESS_STDERR_POINTER* = "SDL.process.stderr" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:258:9
  else:
    let PROP_PROCESS_STDERR_POINTER* = "SDL.process.stderr" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:258:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_STDERR_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_PROCESS_BACKGROUND_BOOLEAN):
  when "SDL.process.background" is static:
    const
      PROP_PROCESS_BACKGROUND_BOOLEAN* = "SDL.process.background" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:259:9
  else:
    let PROP_PROCESS_BACKGROUND_BOOLEAN* = "SDL.process.background" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_process.h:259:9
else:
  static :
    hint("Declaration of " & "PROP_PROCESS_BACKGROUND_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(SOFTWARE_RENDERER):
  when "software" is static:
    const
      SOFTWARE_RENDERER* = "software" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:74:9
  else:
    let SOFTWARE_RENDERER* = "software" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:74:9
else:
  static :
    hint("Declaration of " & "SOFTWARE_RENDERER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_NAME_STRING):
  when "SDL.renderer.create.name" is static:
    const
      PROP_RENDERER_CREATE_NAME_STRING* = "SDL.renderer.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:298:9
  else:
    let PROP_RENDERER_CREATE_NAME_STRING* = "SDL.renderer.create.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:298:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_WINDOW_POINTER):
  when "SDL.renderer.create.window" is static:
    const
      PROP_RENDERER_CREATE_WINDOW_POINTER* = "SDL.renderer.create.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:299:9
  else:
    let PROP_RENDERER_CREATE_WINDOW_POINTER* = "SDL.renderer.create.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:299:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_SURFACE_POINTER):
  when "SDL.renderer.create.surface" is static:
    const
      PROP_RENDERER_CREATE_SURFACE_POINTER* = "SDL.renderer.create.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:300:9
  else:
    let PROP_RENDERER_CREATE_SURFACE_POINTER* = "SDL.renderer.create.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:300:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER):
  when "SDL.renderer.create.output_colorspace" is static:
    const
      PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.create.output_colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:301:9
  else:
    let PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.create.output_colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:301:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER):
  when "SDL.renderer.create.present_vsync" is static:
    const
      PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER* = "SDL.renderer.create.present_vsync" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:302:9
  else:
    let PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER* = "SDL.renderer.create.present_vsync" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:302:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER):
  when "SDL.renderer.create.vulkan.instance" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER* = "SDL.renderer.create.vulkan.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:303:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER* = "SDL.renderer.create.vulkan.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:303:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER):
  when "SDL.renderer.create.vulkan.surface" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER* = "SDL.renderer.create.vulkan.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:304:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER* = "SDL.renderer.create.vulkan.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:304:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER):
  when "SDL.renderer.create.vulkan.physical_device" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.create.vulkan.physical_device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:305:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.create.vulkan.physical_device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:305:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER):
  when "SDL.renderer.create.vulkan.device" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER* = "SDL.renderer.create.vulkan.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:306:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER* = "SDL.renderer.create.vulkan.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:306:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.create.vulkan.graphics_queue_family_index" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.graphics_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:307:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.graphics_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:307:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.create.vulkan.present_queue_family_index" is static:
    const
      PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.present_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:308:9
  else:
    let PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.create.vulkan.present_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:308:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_NAME_STRING):
  when "SDL.renderer.name" is static:
    const
      PROP_RENDERER_NAME_STRING* = "SDL.renderer.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:454:9
  else:
    let PROP_RENDERER_NAME_STRING* = "SDL.renderer.name" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:454:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_NAME_STRING" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_WINDOW_POINTER):
  when "SDL.renderer.window" is static:
    const
      PROP_RENDERER_WINDOW_POINTER* = "SDL.renderer.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:455:9
  else:
    let PROP_RENDERER_WINDOW_POINTER* = "SDL.renderer.window" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:455:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_WINDOW_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_SURFACE_POINTER):
  when "SDL.renderer.surface" is static:
    const
      PROP_RENDERER_SURFACE_POINTER* = "SDL.renderer.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:456:9
  else:
    let PROP_RENDERER_SURFACE_POINTER* = "SDL.renderer.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:456:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_SURFACE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VSYNC_NUMBER):
  when "SDL.renderer.vsync" is static:
    const
      PROP_RENDERER_VSYNC_NUMBER* = "SDL.renderer.vsync" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:457:9
  else:
    let PROP_RENDERER_VSYNC_NUMBER* = "SDL.renderer.vsync" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:457:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VSYNC_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER):
  when "SDL.renderer.max_texture_size" is static:
    const
      PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER* = "SDL.renderer.max_texture_size" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:458:9
  else:
    let PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER* = "SDL.renderer.max_texture_size" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:458:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_TEXTURE_FORMATS_POINTER):
  when "SDL.renderer.texture_formats" is static:
    const
      PROP_RENDERER_TEXTURE_FORMATS_POINTER* = "SDL.renderer.texture_formats" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:459:9
  else:
    let PROP_RENDERER_TEXTURE_FORMATS_POINTER* = "SDL.renderer.texture_formats" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:459:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_TEXTURE_FORMATS_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER):
  when "SDL.renderer.output_colorspace" is static:
    const
      PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.output_colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:460:9
  else:
    let PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER* = "SDL.renderer.output_colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:460:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_HDR_ENABLED_BOOLEAN):
  when "SDL.renderer.HDR_enabled" is static:
    const
      PROP_RENDERER_HDR_ENABLED_BOOLEAN* = "SDL.renderer.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:461:9
  else:
    let PROP_RENDERER_HDR_ENABLED_BOOLEAN* = "SDL.renderer.HDR_enabled" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:461:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_HDR_ENABLED_BOOLEAN" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_SDR_WHITE_POINT_FLOAT):
  when "SDL.renderer.SDR_white_point" is static:
    const
      PROP_RENDERER_SDR_WHITE_POINT_FLOAT* = "SDL.renderer.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:462:9
  else:
    let PROP_RENDERER_SDR_WHITE_POINT_FLOAT* = "SDL.renderer.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:462:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_HDR_HEADROOM_FLOAT):
  when "SDL.renderer.HDR_headroom" is static:
    const
      PROP_RENDERER_HDR_HEADROOM_FLOAT* = "SDL.renderer.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:463:9
  else:
    let PROP_RENDERER_HDR_HEADROOM_FLOAT* = "SDL.renderer.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:463:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D9_DEVICE_POINTER):
  when "SDL.renderer.d3d9.device" is static:
    const
      PROP_RENDERER_D3D9_DEVICE_POINTER* = "SDL.renderer.d3d9.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:464:9
  else:
    let PROP_RENDERER_D3D9_DEVICE_POINTER* = "SDL.renderer.d3d9.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:464:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D9_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D11_DEVICE_POINTER):
  when "SDL.renderer.d3d11.device" is static:
    const
      PROP_RENDERER_D3D11_DEVICE_POINTER* = "SDL.renderer.d3d11.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:465:9
  else:
    let PROP_RENDERER_D3D11_DEVICE_POINTER* = "SDL.renderer.d3d11.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:465:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D11_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D11_SWAPCHAIN_POINTER):
  when "SDL.renderer.d3d11.swap_chain" is static:
    const
      PROP_RENDERER_D3D11_SWAPCHAIN_POINTER* = "SDL.renderer.d3d11.swap_chain" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:466:9
  else:
    let PROP_RENDERER_D3D11_SWAPCHAIN_POINTER* = "SDL.renderer.d3d11.swap_chain" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:466:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D11_SWAPCHAIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_DEVICE_POINTER):
  when "SDL.renderer.d3d12.device" is static:
    const
      PROP_RENDERER_D3D12_DEVICE_POINTER* = "SDL.renderer.d3d12.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:467:9
  else:
    let PROP_RENDERER_D3D12_DEVICE_POINTER* = "SDL.renderer.d3d12.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:467:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_SWAPCHAIN_POINTER):
  when "SDL.renderer.d3d12.swap_chain" is static:
    const
      PROP_RENDERER_D3D12_SWAPCHAIN_POINTER* = "SDL.renderer.d3d12.swap_chain" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:468:9
  else:
    let PROP_RENDERER_D3D12_SWAPCHAIN_POINTER* = "SDL.renderer.d3d12.swap_chain" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:468:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_SWAPCHAIN_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER):
  when "SDL.renderer.d3d12.command_queue" is static:
    const
      PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER* = "SDL.renderer.d3d12.command_queue" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:469:9
  else:
    let PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER* = "SDL.renderer.d3d12.command_queue" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:469:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_INSTANCE_POINTER):
  when "SDL.renderer.vulkan.instance" is static:
    const
      PROP_RENDERER_VULKAN_INSTANCE_POINTER* = "SDL.renderer.vulkan.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:470:9
  else:
    let PROP_RENDERER_VULKAN_INSTANCE_POINTER* = "SDL.renderer.vulkan.instance" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:470:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_INSTANCE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_SURFACE_NUMBER):
  when "SDL.renderer.vulkan.surface" is static:
    const
      PROP_RENDERER_VULKAN_SURFACE_NUMBER* = "SDL.renderer.vulkan.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:471:9
  else:
    let PROP_RENDERER_VULKAN_SURFACE_NUMBER* = "SDL.renderer.vulkan.surface" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:471:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_SURFACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER):
  when "SDL.renderer.vulkan.physical_device" is static:
    const
      PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.vulkan.physical_device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:472:9
  else:
    let PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER* = "SDL.renderer.vulkan.physical_device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:472:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_DEVICE_POINTER):
  when "SDL.renderer.vulkan.device" is static:
    const
      PROP_RENDERER_VULKAN_DEVICE_POINTER* = "SDL.renderer.vulkan.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:473:9
  else:
    let PROP_RENDERER_VULKAN_DEVICE_POINTER* = "SDL.renderer.vulkan.device" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:473:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_DEVICE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.vulkan.graphics_queue_family_index" is static:
    const
      PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.graphics_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:474:9
  else:
    let PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.graphics_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:474:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER):
  when "SDL.renderer.vulkan.present_queue_family_index" is static:
    const
      PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.present_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:475:9
  else:
    let PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER* = "SDL.renderer.vulkan.present_queue_family_index" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:475:9
else:
  static :
    hint("Declaration of " &
        "PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER):
  when "SDL.renderer.vulkan.swapchain_image_count" is static:
    const
      PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER* = "SDL.renderer.vulkan.swapchain_image_count" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:476:9
  else:
    let PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER* = "SDL.renderer.vulkan.swapchain_image_count" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:476:9
else:
  static :
    hint("Declaration of " & "PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_COLORSPACE_NUMBER):
  when "SDL.texture.create.colorspace" is static:
    const
      PROP_TEXTURE_CREATE_COLORSPACE_NUMBER* = "SDL.texture.create.colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:687:9
  else:
    let PROP_TEXTURE_CREATE_COLORSPACE_NUMBER* = "SDL.texture.create.colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:687:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_FORMAT_NUMBER):
  when "SDL.texture.create.format" is static:
    const
      PROP_TEXTURE_CREATE_FORMAT_NUMBER* = "SDL.texture.create.format" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:688:9
  else:
    let PROP_TEXTURE_CREATE_FORMAT_NUMBER* = "SDL.texture.create.format" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:688:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_FORMAT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_ACCESS_NUMBER):
  when "SDL.texture.create.access" is static:
    const
      PROP_TEXTURE_CREATE_ACCESS_NUMBER* = "SDL.texture.create.access" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:689:9
  else:
    let PROP_TEXTURE_CREATE_ACCESS_NUMBER* = "SDL.texture.create.access" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:689:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_ACCESS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_WIDTH_NUMBER):
  when "SDL.texture.create.width" is static:
    const
      PROP_TEXTURE_CREATE_WIDTH_NUMBER* = "SDL.texture.create.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:690:9
  else:
    let PROP_TEXTURE_CREATE_WIDTH_NUMBER* = "SDL.texture.create.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:690:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_HEIGHT_NUMBER):
  when "SDL.texture.create.height" is static:
    const
      PROP_TEXTURE_CREATE_HEIGHT_NUMBER* = "SDL.texture.create.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:691:9
  else:
    let PROP_TEXTURE_CREATE_HEIGHT_NUMBER* = "SDL.texture.create.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:691:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT):
  when "SDL.texture.create.SDR_white_point" is static:
    const
      PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.create.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:692:9
  else:
    let PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.create.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:692:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT):
  when "SDL.texture.create.HDR_headroom" is static:
    const
      PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT* = "SDL.texture.create.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:693:9
  else:
    let PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT* = "SDL.texture.create.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:693:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER):
  when "SDL.texture.create.d3d11.texture" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER* = "SDL.texture.create.d3d11.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:694:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER* = "SDL.texture.create.d3d11.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:694:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER):
  when "SDL.texture.create.d3d11.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.create.d3d11.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:695:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.create.d3d11.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:695:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER):
  when "SDL.texture.create.d3d11.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.create.d3d11.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:696:9
  else:
    let PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.create.d3d11.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:696:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER):
  when "SDL.texture.create.d3d12.texture" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER* = "SDL.texture.create.d3d12.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:697:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER* = "SDL.texture.create.d3d12.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:697:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER):
  when "SDL.texture.create.d3d12.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.create.d3d12.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:698:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.create.d3d12.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:698:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER):
  when "SDL.texture.create.d3d12.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.create.d3d12.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:699:9
  else:
    let PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.create.d3d12.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:699:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER):
  when "SDL.texture.create.metal.pixelbuffer" is static:
    const
      PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER* = "SDL.texture.create.metal.pixelbuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:700:9
  else:
    let PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER* = "SDL.texture.create.metal.pixelbuffer" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:700:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER):
  when "SDL.texture.create.opengl.texture" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.create.opengl.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:701:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.create.opengl.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:701:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER):
  when "SDL.texture.create.opengl.texture_uv" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengl.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:702:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengl.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:702:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER):
  when "SDL.texture.create.opengl.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.create.opengl.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:703:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.create.opengl.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:703:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER):
  when "SDL.texture.create.opengl.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.create.opengl.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:704:9
  else:
    let PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.create.opengl.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:704:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER):
  when "SDL.texture.create.opengles2.texture" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.create.opengles2.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:705:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.create.opengles2.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:705:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER):
  when "SDL.texture.create.opengles2.texture_uv" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengles2.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:706:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.create.opengles2.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:706:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER):
  when "SDL.texture.create.opengles2.texture_u" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.create.opengles2.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:707:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.create.opengles2.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:707:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER):
  when "SDL.texture.create.opengles2.texture_v" is static:
    const
      PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.create.opengles2.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:708:9
  else:
    let PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.create.opengles2.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:708:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER):
  when "SDL.texture.create.vulkan.texture" is static:
    const
      PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.create.vulkan.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:709:9
  else:
    let PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.create.vulkan.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:709:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_COLORSPACE_NUMBER):
  when "SDL.texture.colorspace" is static:
    const
      PROP_TEXTURE_COLORSPACE_NUMBER* = "SDL.texture.colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:799:9
  else:
    let PROP_TEXTURE_COLORSPACE_NUMBER* = "SDL.texture.colorspace" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:799:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_COLORSPACE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_FORMAT_NUMBER):
  when "SDL.texture.format" is static:
    const
      PROP_TEXTURE_FORMAT_NUMBER* = "SDL.texture.format" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:800:9
  else:
    let PROP_TEXTURE_FORMAT_NUMBER* = "SDL.texture.format" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:800:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_FORMAT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_ACCESS_NUMBER):
  when "SDL.texture.access" is static:
    const
      PROP_TEXTURE_ACCESS_NUMBER* = "SDL.texture.access" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:801:9
  else:
    let PROP_TEXTURE_ACCESS_NUMBER* = "SDL.texture.access" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:801:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_ACCESS_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_WIDTH_NUMBER):
  when "SDL.texture.width" is static:
    const
      PROP_TEXTURE_WIDTH_NUMBER* = "SDL.texture.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:802:9
  else:
    let PROP_TEXTURE_WIDTH_NUMBER* = "SDL.texture.width" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:802:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_WIDTH_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_HEIGHT_NUMBER):
  when "SDL.texture.height" is static:
    const
      PROP_TEXTURE_HEIGHT_NUMBER* = "SDL.texture.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:803:9
  else:
    let PROP_TEXTURE_HEIGHT_NUMBER* = "SDL.texture.height" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:803:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_HEIGHT_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_SDR_WHITE_POINT_FLOAT):
  when "SDL.texture.SDR_white_point" is static:
    const
      PROP_TEXTURE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:804:9
  else:
    let PROP_TEXTURE_SDR_WHITE_POINT_FLOAT* = "SDL.texture.SDR_white_point" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:804:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_SDR_WHITE_POINT_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_HDR_HEADROOM_FLOAT):
  when "SDL.texture.HDR_headroom" is static:
    const
      PROP_TEXTURE_HDR_HEADROOM_FLOAT* = "SDL.texture.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:805:9
  else:
    let PROP_TEXTURE_HDR_HEADROOM_FLOAT* = "SDL.texture.HDR_headroom" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:805:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_HDR_HEADROOM_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_POINTER):
  when "SDL.texture.d3d11.texture" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_POINTER* = "SDL.texture.d3d11.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:806:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_POINTER* = "SDL.texture.d3d11.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:806:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_U_POINTER):
  when "SDL.texture.d3d11.texture_u" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.d3d11.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:807:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_U_POINTER* = "SDL.texture.d3d11.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:807:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D11_TEXTURE_V_POINTER):
  when "SDL.texture.d3d11.texture_v" is static:
    const
      PROP_TEXTURE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.d3d11.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:808:9
  else:
    let PROP_TEXTURE_D3D11_TEXTURE_V_POINTER* = "SDL.texture.d3d11.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:808:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D11_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_POINTER):
  when "SDL.texture.d3d12.texture" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_POINTER* = "SDL.texture.d3d12.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:809:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_POINTER* = "SDL.texture.d3d12.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:809:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_U_POINTER):
  when "SDL.texture.d3d12.texture_u" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.d3d12.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:810:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_U_POINTER* = "SDL.texture.d3d12.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:810:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_U_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_D3D12_TEXTURE_V_POINTER):
  when "SDL.texture.d3d12.texture_v" is static:
    const
      PROP_TEXTURE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.d3d12.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:811:9
  else:
    let PROP_TEXTURE_D3D12_TEXTURE_V_POINTER* = "SDL.texture.d3d12.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:811:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_D3D12_TEXTURE_V_POINTER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_NUMBER):
  when "SDL.texture.opengl.texture" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.opengl.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:812:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_NUMBER* = "SDL.texture.opengl.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:812:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER):
  when "SDL.texture.opengl.texture_uv" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.opengl.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:813:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER* = "SDL.texture.opengl.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:813:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER):
  when "SDL.texture.opengl.texture_u" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.opengl.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:814:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER* = "SDL.texture.opengl.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:814:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER):
  when "SDL.texture.opengl.texture_v" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.opengl.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:815:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER* = "SDL.texture.opengl.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:815:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER):
  when "SDL.texture.opengl.target" is static:
    const
      PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengl.target" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:816:9
  else:
    let PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengl.target" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:816:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEX_W_FLOAT):
  when "SDL.texture.opengl.tex_w" is static:
    const
      PROP_TEXTURE_OPENGL_TEX_W_FLOAT* = "SDL.texture.opengl.tex_w" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:817:9
  else:
    let PROP_TEXTURE_OPENGL_TEX_W_FLOAT* = "SDL.texture.opengl.tex_w" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:817:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEX_W_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGL_TEX_H_FLOAT):
  when "SDL.texture.opengl.tex_h" is static:
    const
      PROP_TEXTURE_OPENGL_TEX_H_FLOAT* = "SDL.texture.opengl.tex_h" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:818:9
  else:
    let PROP_TEXTURE_OPENGL_TEX_H_FLOAT* = "SDL.texture.opengl.tex_h" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:818:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGL_TEX_H_FLOAT" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER):
  when "SDL.texture.opengles2.texture" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.opengles2.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:819:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER* = "SDL.texture.opengles2.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:819:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER):
  when "SDL.texture.opengles2.texture_uv" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.opengles2.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:820:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER* = "SDL.texture.opengles2.texture_uv" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:820:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER):
  when "SDL.texture.opengles2.texture_u" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.opengles2.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:821:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER* = "SDL.texture.opengles2.texture_u" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:821:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER):
  when "SDL.texture.opengles2.texture_v" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.opengles2.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:822:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER* = "SDL.texture.opengles2.texture_v" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:822:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER):
  when "SDL.texture.opengles2.target" is static:
    const
      PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengles2.target" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:823:9
  else:
    let PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER* = "SDL.texture.opengles2.target" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:823:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER" &
        " already exists, not redeclaring")
when not declared(PROP_TEXTURE_VULKAN_TEXTURE_NUMBER):
  when "SDL.texture.vulkan.texture" is static:
    const
      PROP_TEXTURE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.vulkan.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:824:9
  else:
    let PROP_TEXTURE_VULKAN_TEXTURE_NUMBER* = "SDL.texture.vulkan.texture" ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:824:9
else:
  static :
    hint("Declaration of " & "PROP_TEXTURE_VULKAN_TEXTURE_NUMBER" &
        " already exists, not redeclaring")
when not declared(RENDERER_VSYNC_DISABLED):
  when 0 is static:
    const
      RENDERER_VSYNC_DISABLED* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2466:9
  else:
    let RENDERER_VSYNC_DISABLED* = 0 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2466:9
else:
  static :
    hint("Declaration of " & "RENDERER_VSYNC_DISABLED" &
        " already exists, not redeclaring")
when not declared(RENDERER_VSYNC_ADAPTIVE):
  when -1 is static:
    const
      RENDERER_VSYNC_ADAPTIVE* = -1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2467:9
  else:
    let RENDERER_VSYNC_ADAPTIVE* = -1 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2467:9
else:
  static :
    hint("Declaration of " & "RENDERER_VSYNC_ADAPTIVE" &
        " already exists, not redeclaring")
when not declared(DEBUG_TEXT_FONT_CHARACTER_SIZE):
  when 8 is static:
    const
      DEBUG_TEXT_FONT_CHARACTER_SIZE* = 8 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2495:9
  else:
    let DEBUG_TEXT_FONT_CHARACTER_SIZE* = 8 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_render.h:2495:9
else:
  static :
    hint("Declaration of " & "DEBUG_TEXT_FONT_CHARACTER_SIZE" &
        " already exists, not redeclaring")
when not declared(MS_PER_SECOND):
  when 1000 is static:
    const
      MS_PER_SECOND* = 1000  ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:41:9
  else:
    let MS_PER_SECOND* = 1000 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:41:9
else:
  static :
    hint("Declaration of " & "MS_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(US_PER_SECOND):
  when 1000000 is static:
    const
      US_PER_SECOND* = 1000000 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:42:9
  else:
    let US_PER_SECOND* = 1000000 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:42:9
else:
  static :
    hint("Declaration of " & "US_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(NS_PER_SECOND):
  when cast[clonglong](1000000000'i64) is static:
    const
      NS_PER_SECOND* = cast[clonglong](1000000000'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:43:9
  else:
    let NS_PER_SECOND* = cast[clonglong](1000000000'i64) ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:43:9
else:
  static :
    hint("Declaration of " & "NS_PER_SECOND" &
        " already exists, not redeclaring")
when not declared(NS_PER_MS):
  when 1000000 is static:
    const
      NS_PER_MS* = 1000000   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:44:9
  else:
    let NS_PER_MS* = 1000000 ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:44:9
else:
  static :
    hint("Declaration of " & "NS_PER_MS" & " already exists, not redeclaring")
when not declared(NS_PER_US):
  when 1000 is static:
    const
      NS_PER_US* = 1000      ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:45:9
  else:
    let NS_PER_US* = 1000    ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_timer.h:45:9
else:
  static :
    hint("Declaration of " & "NS_PER_US" & " already exists, not redeclaring")
when not declared(MAJOR_VERSION):
  when 3 is static:
    const
      MAJOR_VERSION* = 3     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:47:9
  else:
    let MAJOR_VERSION* = 3   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:47:9
else:
  static :
    hint("Declaration of " & "MAJOR_VERSION" &
        " already exists, not redeclaring")
when not declared(MINOR_VERSION):
  when 1 is static:
    const
      MINOR_VERSION* = 1     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:56:9
  else:
    let MINOR_VERSION* = 1   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:56:9
else:
  static :
    hint("Declaration of " & "MINOR_VERSION" &
        " already exists, not redeclaring")
when not declared(MICRO_VERSION):
  when 7 is static:
    const
      MICRO_VERSION* = 7     ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:65:9
  else:
    let MICRO_VERSION* = 7   ## Generated based on /home/carlo/SDL3/include/SDL3/SDL_version.h:65:9
else:
  static :
    hint("Declaration of " & "MICRO_VERSION" &
        " already exists, not redeclaring")
when not declared(malloc):
  proc malloc*(size: csize_t): pointer {.cdecl, importc: "SDL_malloc".}
else:
  static :
    hint("Declaration of " & "malloc" & " already exists, not redeclaring")
when not declared(calloc):
  proc calloc*(nmemb: csize_t; size: csize_t): pointer {.cdecl,
      importc: "SDL_calloc".}
else:
  static :
    hint("Declaration of " & "calloc" & " already exists, not redeclaring")
when not declared(realloc):
  proc realloc*(mem: pointer; size: csize_t): pointer {.cdecl,
      importc: "SDL_realloc".}
else:
  static :
    hint("Declaration of " & "realloc" & " already exists, not redeclaring")
when not declared(free):
  proc free*(mem: pointer): void {.cdecl, importc: "SDL_free".}
else:
  static :
    hint("Declaration of " & "free" & " already exists, not redeclaring")
when not declared(GetOriginalMemoryFunctions):
  proc GetOriginalMemoryFunctions*(malloc_func: malloc_func_1157628461;
                                   calloc_func: calloc_func_1157628463;
                                   realloc_func: realloc_func_1157628465;
                                   free_func: free_func_1157628467): void {.
      cdecl, importc: "SDL_GetOriginalMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "GetOriginalMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(GetMemoryFunctions):
  proc GetMemoryFunctions*(malloc_func: malloc_func_1157628461;
                           calloc_func: calloc_func_1157628463;
                           realloc_func: realloc_func_1157628465;
                           free_func: free_func_1157628467): void {.cdecl,
      importc: "SDL_GetMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "GetMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(SetMemoryFunctions):
  proc SetMemoryFunctions*(malloc_func: malloc_func_1157628461;
                           calloc_func: calloc_func_1157628463;
                           realloc_func: realloc_func_1157628465;
                           free_func: free_func_1157628467): bool {.cdecl,
      importc: "SDL_SetMemoryFunctions".}
else:
  static :
    hint("Declaration of " & "SetMemoryFunctions" &
        " already exists, not redeclaring")
when not declared(aligned_alloc):
  proc aligned_alloc*(alignment: csize_t; size: csize_t): pointer {.cdecl,
      importc: "SDL_aligned_alloc".}
else:
  static :
    hint("Declaration of " & "aligned_alloc" &
        " already exists, not redeclaring")
when not declared(aligned_free):
  proc aligned_free*(mem: pointer): void {.cdecl, importc: "SDL_aligned_free".}
else:
  static :
    hint("Declaration of " & "aligned_free" & " already exists, not redeclaring")
when not declared(GetNumAllocations):
  proc GetNumAllocations*(): cint {.cdecl, importc: "SDL_GetNumAllocations".}
else:
  static :
    hint("Declaration of " & "GetNumAllocations" &
        " already exists, not redeclaring")
when not declared(GetEnvironment):
  proc GetEnvironment*(): ptr Environment_1157628469 {.cdecl,
      importc: "SDL_GetEnvironment".}
else:
  static :
    hint("Declaration of " & "GetEnvironment" &
        " already exists, not redeclaring")
when not declared(CreateEnvironment):
  proc CreateEnvironment*(populated: bool): ptr Environment_1157628469 {.cdecl,
      importc: "SDL_CreateEnvironment".}
else:
  static :
    hint("Declaration of " & "CreateEnvironment" &
        " already exists, not redeclaring")
when not declared(GetEnvironmentVariable):
  proc GetEnvironmentVariable*(env: ptr Environment_1157628469; name: cstring): cstring {.
      cdecl, importc: "SDL_GetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "GetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(GetEnvironmentVariables):
  proc GetEnvironmentVariables*(env: ptr Environment_1157628469): ptr cstring {.
      cdecl, importc: "SDL_GetEnvironmentVariables".}
else:
  static :
    hint("Declaration of " & "GetEnvironmentVariables" &
        " already exists, not redeclaring")
when not declared(SetEnvironmentVariable):
  proc SetEnvironmentVariable*(env: ptr Environment_1157628469; name: cstring;
                               value: cstring; overwrite: bool): bool {.cdecl,
      importc: "SDL_SetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "SetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(UnsetEnvironmentVariable):
  proc UnsetEnvironmentVariable*(env: ptr Environment_1157628469; name: cstring): bool {.
      cdecl, importc: "SDL_UnsetEnvironmentVariable".}
else:
  static :
    hint("Declaration of " & "UnsetEnvironmentVariable" &
        " already exists, not redeclaring")
when not declared(DestroyEnvironment):
  proc DestroyEnvironment*(env: ptr Environment_1157628469): void {.cdecl,
      importc: "SDL_DestroyEnvironment".}
else:
  static :
    hint("Declaration of " & "DestroyEnvironment" &
        " already exists, not redeclaring")
when not declared(getenv):
  proc getenv*(name: cstring): cstring {.cdecl, importc: "SDL_getenv".}
else:
  static :
    hint("Declaration of " & "getenv" & " already exists, not redeclaring")
when not declared(getenv_unsafe):
  proc getenv_unsafe*(name: cstring): cstring {.cdecl,
      importc: "SDL_getenv_unsafe".}
else:
  static :
    hint("Declaration of " & "getenv_unsafe" &
        " already exists, not redeclaring")
when not declared(setenv_unsafe):
  proc setenv_unsafe*(name: cstring; value: cstring; overwrite: cint): cint {.
      cdecl, importc: "SDL_setenv_unsafe".}
else:
  static :
    hint("Declaration of " & "setenv_unsafe" &
        " already exists, not redeclaring")
when not declared(unsetenv_unsafe):
  proc unsetenv_unsafe*(name: cstring): cint {.cdecl,
      importc: "SDL_unsetenv_unsafe".}
else:
  static :
    hint("Declaration of " & "unsetenv_unsafe" &
        " already exists, not redeclaring")
when not declared(qsort):
  proc qsort*(base: pointer; nmemb: csize_t; size: csize_t;
              compare: CompareCallback_1157628471): void {.cdecl,
      importc: "SDL_qsort".}
else:
  static :
    hint("Declaration of " & "qsort" & " already exists, not redeclaring")
when not declared(bsearch):
  proc bsearch*(key: pointer; base: pointer; nmemb: csize_t; size: csize_t;
                compare: CompareCallback_1157628471): pointer {.cdecl,
      importc: "SDL_bsearch".}
else:
  static :
    hint("Declaration of " & "bsearch" & " already exists, not redeclaring")
when not declared(qsort_r):
  proc qsort_r*(base: pointer; nmemb: csize_t; size: csize_t;
                compare: CompareCallback_r_1157628473; userdata: pointer): void {.
      cdecl, importc: "SDL_qsort_r".}
else:
  static :
    hint("Declaration of " & "qsort_r" & " already exists, not redeclaring")
when not declared(bsearch_r):
  proc bsearch_r*(key: pointer; base: pointer; nmemb: csize_t; size: csize_t;
                  compare: CompareCallback_r_1157628473; userdata: pointer): pointer {.
      cdecl, importc: "SDL_bsearch_r".}
else:
  static :
    hint("Declaration of " & "bsearch_r" & " already exists, not redeclaring")
when not declared(abs):
  proc abs*(x: cint): cint {.cdecl, importc: "SDL_abs".}
else:
  static :
    hint("Declaration of " & "abs" & " already exists, not redeclaring")
when not declared(isalpha):
  proc isalpha*(x: cint): cint {.cdecl, importc: "SDL_isalpha".}
else:
  static :
    hint("Declaration of " & "isalpha" & " already exists, not redeclaring")
when not declared(isalnum):
  proc isalnum*(x: cint): cint {.cdecl, importc: "SDL_isalnum".}
else:
  static :
    hint("Declaration of " & "isalnum" & " already exists, not redeclaring")
when not declared(isblank):
  proc isblank*(x: cint): cint {.cdecl, importc: "SDL_isblank".}
else:
  static :
    hint("Declaration of " & "isblank" & " already exists, not redeclaring")
when not declared(iscntrl):
  proc iscntrl*(x: cint): cint {.cdecl, importc: "SDL_iscntrl".}
else:
  static :
    hint("Declaration of " & "iscntrl" & " already exists, not redeclaring")
when not declared(isdigit):
  proc isdigit*(x: cint): cint {.cdecl, importc: "SDL_isdigit".}
else:
  static :
    hint("Declaration of " & "isdigit" & " already exists, not redeclaring")
when not declared(isxdigit):
  proc isxdigit*(x: cint): cint {.cdecl, importc: "SDL_isxdigit".}
else:
  static :
    hint("Declaration of " & "isxdigit" & " already exists, not redeclaring")
when not declared(ispunct):
  proc ispunct*(x: cint): cint {.cdecl, importc: "SDL_ispunct".}
else:
  static :
    hint("Declaration of " & "ispunct" & " already exists, not redeclaring")
when not declared(isspace):
  proc isspace*(x: cint): cint {.cdecl, importc: "SDL_isspace".}
else:
  static :
    hint("Declaration of " & "isspace" & " already exists, not redeclaring")
when not declared(isupper):
  proc isupper*(x: cint): cint {.cdecl, importc: "SDL_isupper".}
else:
  static :
    hint("Declaration of " & "isupper" & " already exists, not redeclaring")
when not declared(islower):
  proc islower*(x: cint): cint {.cdecl, importc: "SDL_islower".}
else:
  static :
    hint("Declaration of " & "islower" & " already exists, not redeclaring")
when not declared(isprint):
  proc isprint*(x: cint): cint {.cdecl, importc: "SDL_isprint".}
else:
  static :
    hint("Declaration of " & "isprint" & " already exists, not redeclaring")
when not declared(isgraph):
  proc isgraph*(x: cint): cint {.cdecl, importc: "SDL_isgraph".}
else:
  static :
    hint("Declaration of " & "isgraph" & " already exists, not redeclaring")
when not declared(toupper):
  proc toupper*(x: cint): cint {.cdecl, importc: "SDL_toupper".}
else:
  static :
    hint("Declaration of " & "toupper" & " already exists, not redeclaring")
when not declared(tolower):
  proc tolower*(x: cint): cint {.cdecl, importc: "SDL_tolower".}
else:
  static :
    hint("Declaration of " & "tolower" & " already exists, not redeclaring")
when not declared(crc16):
  proc crc16*(crc: Uint16_1157628441; data: pointer; len: csize_t): Uint16_1157628441 {.
      cdecl, importc: "SDL_crc16".}
else:
  static :
    hint("Declaration of " & "crc16" & " already exists, not redeclaring")
when not declared(crc32):
  proc crc32*(crc: Uint32_1157628445; data: pointer; len: csize_t): Uint32_1157628445 {.
      cdecl, importc: "SDL_crc32".}
else:
  static :
    hint("Declaration of " & "crc32" & " already exists, not redeclaring")
when not declared(murmur3_32):
  proc murmur3_32*(data: pointer; len: csize_t; seed: Uint32_1157628445): Uint32_1157628445 {.
      cdecl, importc: "SDL_murmur3_32".}
else:
  static :
    hint("Declaration of " & "murmur3_32" & " already exists, not redeclaring")
when not declared(memset4):
  proc memset4*(dst: pointer; val: Uint32_1157628445; dwords: csize_t): pointer {.
      cdecl, importc: "SDL_memset4".}
else:
  static :
    hint("Declaration of " & "memset4" & " already exists, not redeclaring")
when not declared(memcmp):
  proc memcmp*(s1: pointer; s2: pointer; len: csize_t): cint {.cdecl,
      importc: "SDL_memcmp".}
else:
  static :
    hint("Declaration of " & "memcmp" & " already exists, not redeclaring")
when not declared(wcslen):
  proc wcslen*(wstr: ptr wchar_t_1157628475): csize_t {.cdecl,
      importc: "SDL_wcslen".}
else:
  static :
    hint("Declaration of " & "wcslen" & " already exists, not redeclaring")
when not declared(wcsnlen):
  proc wcsnlen*(wstr: ptr wchar_t_1157628475; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_wcsnlen".}
else:
  static :
    hint("Declaration of " & "wcsnlen" & " already exists, not redeclaring")
when not declared(wcslcpy):
  proc wcslcpy*(dst: ptr wchar_t_1157628475; src: ptr wchar_t_1157628475;
                maxlen: csize_t): csize_t {.cdecl, importc: "SDL_wcslcpy".}
else:
  static :
    hint("Declaration of " & "wcslcpy" & " already exists, not redeclaring")
when not declared(wcslcat):
  proc wcslcat*(dst: ptr wchar_t_1157628475; src: ptr wchar_t_1157628475;
                maxlen: csize_t): csize_t {.cdecl, importc: "SDL_wcslcat".}
else:
  static :
    hint("Declaration of " & "wcslcat" & " already exists, not redeclaring")
when not declared(wcsdup):
  proc wcsdup*(wstr: ptr wchar_t_1157628475): ptr wchar_t_1157628475 {.cdecl,
      importc: "SDL_wcsdup".}
else:
  static :
    hint("Declaration of " & "wcsdup" & " already exists, not redeclaring")
when not declared(wcsstr):
  proc wcsstr*(haystack: ptr wchar_t_1157628475; needle: ptr wchar_t_1157628475): ptr wchar_t_1157628475 {.
      cdecl, importc: "SDL_wcsstr".}
else:
  static :
    hint("Declaration of " & "wcsstr" & " already exists, not redeclaring")
when not declared(wcsnstr):
  proc wcsnstr*(haystack: ptr wchar_t_1157628475; needle: ptr wchar_t_1157628475;
                maxlen: csize_t): ptr wchar_t_1157628475 {.cdecl,
      importc: "SDL_wcsnstr".}
else:
  static :
    hint("Declaration of " & "wcsnstr" & " already exists, not redeclaring")
when not declared(wcscmp):
  proc wcscmp*(str1: ptr wchar_t_1157628475; str2: ptr wchar_t_1157628475): cint {.
      cdecl, importc: "SDL_wcscmp".}
else:
  static :
    hint("Declaration of " & "wcscmp" & " already exists, not redeclaring")
when not declared(wcsncmp):
  proc wcsncmp*(str1: ptr wchar_t_1157628475; str2: ptr wchar_t_1157628475;
                maxlen: csize_t): cint {.cdecl, importc: "SDL_wcsncmp".}
else:
  static :
    hint("Declaration of " & "wcsncmp" & " already exists, not redeclaring")
when not declared(wcscasecmp):
  proc wcscasecmp*(str1: ptr wchar_t_1157628475; str2: ptr wchar_t_1157628475): cint {.
      cdecl, importc: "SDL_wcscasecmp".}
else:
  static :
    hint("Declaration of " & "wcscasecmp" & " already exists, not redeclaring")
when not declared(wcsncasecmp):
  proc wcsncasecmp*(str1: ptr wchar_t_1157628475; str2: ptr wchar_t_1157628475;
                    maxlen: csize_t): cint {.cdecl, importc: "SDL_wcsncasecmp".}
else:
  static :
    hint("Declaration of " & "wcsncasecmp" & " already exists, not redeclaring")
when not declared(wcstol):
  proc wcstol*(str: ptr wchar_t_1157628475; endp: ptr ptr wchar_t_1157628475;
               base: cint): clong {.cdecl, importc: "SDL_wcstol".}
else:
  static :
    hint("Declaration of " & "wcstol" & " already exists, not redeclaring")
when not declared(strlen):
  proc strlen*(str: cstring): csize_t {.cdecl, importc: "SDL_strlen".}
else:
  static :
    hint("Declaration of " & "strlen" & " already exists, not redeclaring")
when not declared(strnlen):
  proc strnlen*(str: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strnlen".}
else:
  static :
    hint("Declaration of " & "strnlen" & " already exists, not redeclaring")
when not declared(strlcpy):
  proc strlcpy*(dst: cstring; src: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strlcpy".}
else:
  static :
    hint("Declaration of " & "strlcpy" & " already exists, not redeclaring")
when not declared(utf8strlcpy):
  proc utf8strlcpy*(dst: cstring; src: cstring; dst_bytes: csize_t): csize_t {.
      cdecl, importc: "SDL_utf8strlcpy".}
else:
  static :
    hint("Declaration of " & "utf8strlcpy" & " already exists, not redeclaring")
when not declared(strlcat):
  proc strlcat*(dst: cstring; src: cstring; maxlen: csize_t): csize_t {.cdecl,
      importc: "SDL_strlcat".}
else:
  static :
    hint("Declaration of " & "strlcat" & " already exists, not redeclaring")
when not declared(strdup):
  proc strdup*(str: cstring): cstring {.cdecl, importc: "SDL_strdup".}
else:
  static :
    hint("Declaration of " & "strdup" & " already exists, not redeclaring")
when not declared(strndup):
  proc strndup*(str: cstring; maxlen: csize_t): cstring {.cdecl,
      importc: "SDL_strndup".}
else:
  static :
    hint("Declaration of " & "strndup" & " already exists, not redeclaring")
when not declared(strrev):
  proc strrev*(str: cstring): cstring {.cdecl, importc: "SDL_strrev".}
else:
  static :
    hint("Declaration of " & "strrev" & " already exists, not redeclaring")
when not declared(strupr):
  proc strupr*(str: cstring): cstring {.cdecl, importc: "SDL_strupr".}
else:
  static :
    hint("Declaration of " & "strupr" & " already exists, not redeclaring")
when not declared(strlwr):
  proc strlwr*(str: cstring): cstring {.cdecl, importc: "SDL_strlwr".}
else:
  static :
    hint("Declaration of " & "strlwr" & " already exists, not redeclaring")
when not declared(strchr):
  proc strchr*(str: cstring; c: cint): cstring {.cdecl, importc: "SDL_strchr".}
else:
  static :
    hint("Declaration of " & "strchr" & " already exists, not redeclaring")
when not declared(strrchr):
  proc strrchr*(str: cstring; c: cint): cstring {.cdecl, importc: "SDL_strrchr".}
else:
  static :
    hint("Declaration of " & "strrchr" & " already exists, not redeclaring")
when not declared(strstr):
  proc strstr*(haystack: cstring; needle: cstring): cstring {.cdecl,
      importc: "SDL_strstr".}
else:
  static :
    hint("Declaration of " & "strstr" & " already exists, not redeclaring")
when not declared(strnstr):
  proc strnstr*(haystack: cstring; needle: cstring; maxlen: csize_t): cstring {.
      cdecl, importc: "SDL_strnstr".}
else:
  static :
    hint("Declaration of " & "strnstr" & " already exists, not redeclaring")
when not declared(strcasestr):
  proc strcasestr*(haystack: cstring; needle: cstring): cstring {.cdecl,
      importc: "SDL_strcasestr".}
else:
  static :
    hint("Declaration of " & "strcasestr" & " already exists, not redeclaring")
when not declared(strtok_r_proc):
  proc strtok_r_proc*(s1: cstring; s2: cstring; saveptr: ptr cstring): cstring {.
      cdecl, importc: "SDL_strtok_r".}
else:
  static :
    hint("Declaration of " & "strtok_r_proc" &
        " already exists, not redeclaring")
when not declared(utf8strlen):
  proc utf8strlen*(str: cstring): csize_t {.cdecl, importc: "SDL_utf8strlen".}
else:
  static :
    hint("Declaration of " & "utf8strlen" & " already exists, not redeclaring")
when not declared(utf8strnlen):
  proc utf8strnlen*(str: cstring; bytes: csize_t): csize_t {.cdecl,
      importc: "SDL_utf8strnlen".}
else:
  static :
    hint("Declaration of " & "utf8strnlen" & " already exists, not redeclaring")
when not declared(itoa):
  proc itoa*(value: cint; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_itoa".}
else:
  static :
    hint("Declaration of " & "itoa" & " already exists, not redeclaring")
when not declared(uitoa):
  proc uitoa*(value: cuint; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_uitoa".}
else:
  static :
    hint("Declaration of " & "uitoa" & " already exists, not redeclaring")
when not declared(ltoa):
  proc ltoa*(value: clong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ltoa".}
else:
  static :
    hint("Declaration of " & "ltoa" & " already exists, not redeclaring")
when not declared(ultoa):
  proc ultoa*(value: culong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ultoa".}
else:
  static :
    hint("Declaration of " & "ultoa" & " already exists, not redeclaring")
when not declared(lltoa):
  proc lltoa*(value: clonglong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_lltoa".}
else:
  static :
    hint("Declaration of " & "lltoa" & " already exists, not redeclaring")
when not declared(ulltoa):
  proc ulltoa*(value: culonglong; str: cstring; radix: cint): cstring {.cdecl,
      importc: "SDL_ulltoa".}
else:
  static :
    hint("Declaration of " & "ulltoa" & " already exists, not redeclaring")
when not declared(atoi):
  proc atoi*(str: cstring): cint {.cdecl, importc: "SDL_atoi".}
else:
  static :
    hint("Declaration of " & "atoi" & " already exists, not redeclaring")
when not declared(atof):
  proc atof*(str: cstring): cdouble {.cdecl, importc: "SDL_atof".}
else:
  static :
    hint("Declaration of " & "atof" & " already exists, not redeclaring")
when not declared(strtol):
  proc strtol*(str: cstring; endp: ptr cstring; base: cint): clong {.cdecl,
      importc: "SDL_strtol".}
else:
  static :
    hint("Declaration of " & "strtol" & " already exists, not redeclaring")
when not declared(strtoul):
  proc strtoul*(str: cstring; endp: ptr cstring; base: cint): culong {.cdecl,
      importc: "SDL_strtoul".}
else:
  static :
    hint("Declaration of " & "strtoul" & " already exists, not redeclaring")
when not declared(strtoll):
  proc strtoll*(str: cstring; endp: ptr cstring; base: cint): clonglong {.cdecl,
      importc: "SDL_strtoll".}
else:
  static :
    hint("Declaration of " & "strtoll" & " already exists, not redeclaring")
when not declared(strtoull):
  proc strtoull*(str: cstring; endp: ptr cstring; base: cint): culonglong {.
      cdecl, importc: "SDL_strtoull".}
else:
  static :
    hint("Declaration of " & "strtoull" & " already exists, not redeclaring")
when not declared(strtod):
  proc strtod*(str: cstring; endp: ptr cstring): cdouble {.cdecl,
      importc: "SDL_strtod".}
else:
  static :
    hint("Declaration of " & "strtod" & " already exists, not redeclaring")
when not declared(strcmp):
  proc strcmp*(str1: cstring; str2: cstring): cint {.cdecl,
      importc: "SDL_strcmp".}
else:
  static :
    hint("Declaration of " & "strcmp" & " already exists, not redeclaring")
when not declared(strncmp):
  proc strncmp*(str1: cstring; str2: cstring; maxlen: csize_t): cint {.cdecl,
      importc: "SDL_strncmp".}
else:
  static :
    hint("Declaration of " & "strncmp" & " already exists, not redeclaring")
when not declared(strcasecmp):
  proc strcasecmp*(str1: cstring; str2: cstring): cint {.cdecl,
      importc: "SDL_strcasecmp".}
else:
  static :
    hint("Declaration of " & "strcasecmp" & " already exists, not redeclaring")
when not declared(strncasecmp):
  proc strncasecmp*(str1: cstring; str2: cstring; maxlen: csize_t): cint {.
      cdecl, importc: "SDL_strncasecmp".}
else:
  static :
    hint("Declaration of " & "strncasecmp" & " already exists, not redeclaring")
when not declared(strpbrk):
  proc strpbrk*(str: cstring; breakset: cstring): cstring {.cdecl,
      importc: "SDL_strpbrk".}
else:
  static :
    hint("Declaration of " & "strpbrk" & " already exists, not redeclaring")
when not declared(StepUTF8):
  proc StepUTF8*(pstr: ptr cstring; pslen: ptr csize_t): Uint32_1157628445 {.
      cdecl, importc: "SDL_StepUTF8".}
else:
  static :
    hint("Declaration of " & "StepUTF8" & " already exists, not redeclaring")
when not declared(StepBackUTF8):
  proc StepBackUTF8*(start: cstring; pstr: ptr cstring): Uint32_1157628445 {.
      cdecl, importc: "SDL_StepBackUTF8".}
else:
  static :
    hint("Declaration of " & "StepBackUTF8" & " already exists, not redeclaring")
when not declared(UCS4ToUTF8):
  proc UCS4ToUTF8*(codepoint: Uint32_1157628445; dst: cstring): cstring {.cdecl,
      importc: "SDL_UCS4ToUTF8".}
else:
  static :
    hint("Declaration of " & "UCS4ToUTF8" & " already exists, not redeclaring")
when not declared(sscanf):
  proc sscanf*(text: cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_sscanf".}
else:
  static :
    hint("Declaration of " & "sscanf" & " already exists, not redeclaring")
when not declared(vsscanf):
  proc vsscanf*(text: cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_vsscanf".}
else:
  static :
    hint("Declaration of " & "vsscanf" & " already exists, not redeclaring")
when not declared(snprintf):
  proc snprintf*(text: cstring; maxlen: csize_t; fmt: cstring): cint {.cdecl,
      varargs, importc: "SDL_snprintf".}
else:
  static :
    hint("Declaration of " & "snprintf" & " already exists, not redeclaring")
when not declared(swprintf):
  proc swprintf*(text: ptr wchar_t_1157628475; maxlen: csize_t; fmt: ptr wchar_t_1157628475): cint {.
      cdecl, varargs, importc: "SDL_swprintf".}
else:
  static :
    hint("Declaration of " & "swprintf" & " already exists, not redeclaring")
when not declared(vsnprintf):
  proc vsnprintf*(text: cstring; maxlen: csize_t; fmt: cstring): cint {.cdecl,
      varargs, importc: "SDL_vsnprintf".}
else:
  static :
    hint("Declaration of " & "vsnprintf" & " already exists, not redeclaring")
when not declared(vswprintf):
  proc vswprintf*(text: ptr wchar_t_1157628475; maxlen: csize_t;
                  fmt: ptr wchar_t_1157628475): cint {.cdecl, varargs,
      importc: "SDL_vswprintf".}
else:
  static :
    hint("Declaration of " & "vswprintf" & " already exists, not redeclaring")
when not declared(asprintf):
  proc asprintf*(strp: ptr cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_asprintf".}
else:
  static :
    hint("Declaration of " & "asprintf" & " already exists, not redeclaring")
when not declared(vasprintf):
  proc vasprintf*(strp: ptr cstring; fmt: cstring): cint {.cdecl, varargs,
      importc: "SDL_vasprintf".}
else:
  static :
    hint("Declaration of " & "vasprintf" & " already exists, not redeclaring")
when not declared(srand):
  proc srand*(seed: Uint64_1157628449): void {.cdecl, importc: "SDL_srand".}
else:
  static :
    hint("Declaration of " & "srand" & " already exists, not redeclaring")
when not declared(rand):
  proc rand*(n: Sint32_1157628443): Sint32_1157628443 {.cdecl,
      importc: "SDL_rand".}
else:
  static :
    hint("Declaration of " & "rand" & " already exists, not redeclaring")
when not declared(randf):
  proc randf*(): cfloat {.cdecl, importc: "SDL_randf".}
else:
  static :
    hint("Declaration of " & "randf" & " already exists, not redeclaring")
when not declared(rand_bits):
  proc rand_bits*(): Uint32_1157628445 {.cdecl, importc: "SDL_rand_bits".}
else:
  static :
    hint("Declaration of " & "rand_bits" & " already exists, not redeclaring")
when not declared(rand_r):
  proc rand_r*(state: ptr Uint64_1157628449; n: Sint32_1157628443): Sint32_1157628443 {.
      cdecl, importc: "SDL_rand_r".}
else:
  static :
    hint("Declaration of " & "rand_r" & " already exists, not redeclaring")
when not declared(randf_r):
  proc randf_r*(state: ptr Uint64_1157628449): cfloat {.cdecl,
      importc: "SDL_randf_r".}
else:
  static :
    hint("Declaration of " & "randf_r" & " already exists, not redeclaring")
when not declared(rand_bits_r):
  proc rand_bits_r*(state: ptr Uint64_1157628449): Uint32_1157628445 {.cdecl,
      importc: "SDL_rand_bits_r".}
else:
  static :
    hint("Declaration of " & "rand_bits_r" & " already exists, not redeclaring")
when not declared(acos):
  proc acos*(x: cdouble): cdouble {.cdecl, importc: "SDL_acos".}
else:
  static :
    hint("Declaration of " & "acos" & " already exists, not redeclaring")
when not declared(acosf):
  proc acosf*(x: cfloat): cfloat {.cdecl, importc: "SDL_acosf".}
else:
  static :
    hint("Declaration of " & "acosf" & " already exists, not redeclaring")
when not declared(asin):
  proc asin*(x: cdouble): cdouble {.cdecl, importc: "SDL_asin".}
else:
  static :
    hint("Declaration of " & "asin" & " already exists, not redeclaring")
when not declared(asinf):
  proc asinf*(x: cfloat): cfloat {.cdecl, importc: "SDL_asinf".}
else:
  static :
    hint("Declaration of " & "asinf" & " already exists, not redeclaring")
when not declared(atan):
  proc atan*(x: cdouble): cdouble {.cdecl, importc: "SDL_atan".}
else:
  static :
    hint("Declaration of " & "atan" & " already exists, not redeclaring")
when not declared(atanf):
  proc atanf*(x: cfloat): cfloat {.cdecl, importc: "SDL_atanf".}
else:
  static :
    hint("Declaration of " & "atanf" & " already exists, not redeclaring")
when not declared(atan2):
  proc atan2*(y: cdouble; x: cdouble): cdouble {.cdecl, importc: "SDL_atan2".}
else:
  static :
    hint("Declaration of " & "atan2" & " already exists, not redeclaring")
when not declared(atan2f):
  proc atan2f*(y: cfloat; x: cfloat): cfloat {.cdecl, importc: "SDL_atan2f".}
else:
  static :
    hint("Declaration of " & "atan2f" & " already exists, not redeclaring")
when not declared(ceil):
  proc ceil*(x: cdouble): cdouble {.cdecl, importc: "SDL_ceil".}
else:
  static :
    hint("Declaration of " & "ceil" & " already exists, not redeclaring")
when not declared(ceilf):
  proc ceilf*(x: cfloat): cfloat {.cdecl, importc: "SDL_ceilf".}
else:
  static :
    hint("Declaration of " & "ceilf" & " already exists, not redeclaring")
when not declared(copysign):
  proc copysign*(x: cdouble; y: cdouble): cdouble {.cdecl,
      importc: "SDL_copysign".}
else:
  static :
    hint("Declaration of " & "copysign" & " already exists, not redeclaring")
when not declared(copysignf):
  proc copysignf*(x: cfloat; y: cfloat): cfloat {.cdecl,
      importc: "SDL_copysignf".}
else:
  static :
    hint("Declaration of " & "copysignf" & " already exists, not redeclaring")
when not declared(cos):
  proc cos*(x: cdouble): cdouble {.cdecl, importc: "SDL_cos".}
else:
  static :
    hint("Declaration of " & "cos" & " already exists, not redeclaring")
when not declared(cosf):
  proc cosf*(x: cfloat): cfloat {.cdecl, importc: "SDL_cosf".}
else:
  static :
    hint("Declaration of " & "cosf" & " already exists, not redeclaring")
when not declared(exp):
  proc exp*(x: cdouble): cdouble {.cdecl, importc: "SDL_exp".}
else:
  static :
    hint("Declaration of " & "exp" & " already exists, not redeclaring")
when not declared(expf):
  proc expf*(x: cfloat): cfloat {.cdecl, importc: "SDL_expf".}
else:
  static :
    hint("Declaration of " & "expf" & " already exists, not redeclaring")
when not declared(fabs):
  proc fabs*(x: cdouble): cdouble {.cdecl, importc: "SDL_fabs".}
else:
  static :
    hint("Declaration of " & "fabs" & " already exists, not redeclaring")
when not declared(fabsf):
  proc fabsf*(x: cfloat): cfloat {.cdecl, importc: "SDL_fabsf".}
else:
  static :
    hint("Declaration of " & "fabsf" & " already exists, not redeclaring")
when not declared(floor):
  proc floor*(x: cdouble): cdouble {.cdecl, importc: "SDL_floor".}
else:
  static :
    hint("Declaration of " & "floor" & " already exists, not redeclaring")
when not declared(floorf):
  proc floorf*(x: cfloat): cfloat {.cdecl, importc: "SDL_floorf".}
else:
  static :
    hint("Declaration of " & "floorf" & " already exists, not redeclaring")
when not declared(trunc):
  proc trunc*(x: cdouble): cdouble {.cdecl, importc: "SDL_trunc".}
else:
  static :
    hint("Declaration of " & "trunc" & " already exists, not redeclaring")
when not declared(truncf):
  proc truncf*(x: cfloat): cfloat {.cdecl, importc: "SDL_truncf".}
else:
  static :
    hint("Declaration of " & "truncf" & " already exists, not redeclaring")
when not declared(fmod):
  proc fmod*(x: cdouble; y: cdouble): cdouble {.cdecl, importc: "SDL_fmod".}
else:
  static :
    hint("Declaration of " & "fmod" & " already exists, not redeclaring")
when not declared(fmodf):
  proc fmodf*(x: cfloat; y: cfloat): cfloat {.cdecl, importc: "SDL_fmodf".}
else:
  static :
    hint("Declaration of " & "fmodf" & " already exists, not redeclaring")
when not declared(isinf):
  proc isinf*(x: cdouble): cint {.cdecl, importc: "SDL_isinf".}
else:
  static :
    hint("Declaration of " & "isinf" & " already exists, not redeclaring")
when not declared(isinff):
  proc isinff*(x: cfloat): cint {.cdecl, importc: "SDL_isinff".}
else:
  static :
    hint("Declaration of " & "isinff" & " already exists, not redeclaring")
when not declared(isnan):
  proc isnan*(x: cdouble): cint {.cdecl, importc: "SDL_isnan".}
else:
  static :
    hint("Declaration of " & "isnan" & " already exists, not redeclaring")
when not declared(isnanf):
  proc isnanf*(x: cfloat): cint {.cdecl, importc: "SDL_isnanf".}
else:
  static :
    hint("Declaration of " & "isnanf" & " already exists, not redeclaring")
when not declared(log):
  proc log*(x: cdouble): cdouble {.cdecl, importc: "SDL_log".}
else:
  static :
    hint("Declaration of " & "log" & " already exists, not redeclaring")
when not declared(logf):
  proc logf*(x: cfloat): cfloat {.cdecl, importc: "SDL_logf".}
else:
  static :
    hint("Declaration of " & "logf" & " already exists, not redeclaring")
when not declared(log10):
  proc log10*(x: cdouble): cdouble {.cdecl, importc: "SDL_log10".}
else:
  static :
    hint("Declaration of " & "log10" & " already exists, not redeclaring")
when not declared(log10f):
  proc log10f*(x: cfloat): cfloat {.cdecl, importc: "SDL_log10f".}
else:
  static :
    hint("Declaration of " & "log10f" & " already exists, not redeclaring")
when not declared(modf):
  proc modf*(x: cdouble; y: ptr cdouble): cdouble {.cdecl, importc: "SDL_modf".}
else:
  static :
    hint("Declaration of " & "modf" & " already exists, not redeclaring")
when not declared(modff):
  proc modff*(x: cfloat; y: ptr cfloat): cfloat {.cdecl, importc: "SDL_modff".}
else:
  static :
    hint("Declaration of " & "modff" & " already exists, not redeclaring")
when not declared(pow):
  proc pow*(x: cdouble; y: cdouble): cdouble {.cdecl, importc: "SDL_pow".}
else:
  static :
    hint("Declaration of " & "pow" & " already exists, not redeclaring")
when not declared(powf):
  proc powf*(x: cfloat; y: cfloat): cfloat {.cdecl, importc: "SDL_powf".}
else:
  static :
    hint("Declaration of " & "powf" & " already exists, not redeclaring")
when not declared(round):
  proc round*(x: cdouble): cdouble {.cdecl, importc: "SDL_round".}
else:
  static :
    hint("Declaration of " & "round" & " already exists, not redeclaring")
when not declared(roundf):
  proc roundf*(x: cfloat): cfloat {.cdecl, importc: "SDL_roundf".}
else:
  static :
    hint("Declaration of " & "roundf" & " already exists, not redeclaring")
when not declared(lround):
  proc lround*(x: cdouble): clong {.cdecl, importc: "SDL_lround".}
else:
  static :
    hint("Declaration of " & "lround" & " already exists, not redeclaring")
when not declared(lroundf):
  proc lroundf*(x: cfloat): clong {.cdecl, importc: "SDL_lroundf".}
else:
  static :
    hint("Declaration of " & "lroundf" & " already exists, not redeclaring")
when not declared(scalbn):
  proc scalbn*(x: cdouble; n: cint): cdouble {.cdecl, importc: "SDL_scalbn".}
else:
  static :
    hint("Declaration of " & "scalbn" & " already exists, not redeclaring")
when not declared(scalbnf):
  proc scalbnf*(x: cfloat; n: cint): cfloat {.cdecl, importc: "SDL_scalbnf".}
else:
  static :
    hint("Declaration of " & "scalbnf" & " already exists, not redeclaring")
when not declared(sin):
  proc sin*(x: cdouble): cdouble {.cdecl, importc: "SDL_sin".}
else:
  static :
    hint("Declaration of " & "sin" & " already exists, not redeclaring")
when not declared(sinf):
  proc sinf*(x: cfloat): cfloat {.cdecl, importc: "SDL_sinf".}
else:
  static :
    hint("Declaration of " & "sinf" & " already exists, not redeclaring")
when not declared(sqrt):
  proc sqrt*(x: cdouble): cdouble {.cdecl, importc: "SDL_sqrt".}
else:
  static :
    hint("Declaration of " & "sqrt" & " already exists, not redeclaring")
when not declared(sqrtf):
  proc sqrtf*(x: cfloat): cfloat {.cdecl, importc: "SDL_sqrtf".}
else:
  static :
    hint("Declaration of " & "sqrtf" & " already exists, not redeclaring")
when not declared(tan):
  proc tan*(x: cdouble): cdouble {.cdecl, importc: "SDL_tan".}
else:
  static :
    hint("Declaration of " & "tan" & " already exists, not redeclaring")
when not declared(tanf):
  proc tanf*(x: cfloat): cfloat {.cdecl, importc: "SDL_tanf".}
else:
  static :
    hint("Declaration of " & "tanf" & " already exists, not redeclaring")
when not declared(iconv_open):
  proc iconv_open*(tocode: cstring; fromcode: cstring): iconv_t_1157628477 {.
      cdecl, importc: "SDL_iconv_open".}
else:
  static :
    hint("Declaration of " & "iconv_open" & " already exists, not redeclaring")
when not declared(iconv_close):
  proc iconv_close*(cd: iconv_t_1157628477): cint {.cdecl,
      importc: "SDL_iconv_close".}
else:
  static :
    hint("Declaration of " & "iconv_close" & " already exists, not redeclaring")
when not declared(iconv):
  proc iconv*(cd: iconv_t_1157628477; inbuf: ptr cstring;
              inbytesleft: ptr csize_t; outbuf: ptr cstring;
              outbytesleft: ptr csize_t): csize_t {.cdecl, importc: "SDL_iconv".}
else:
  static :
    hint("Declaration of " & "iconv" & " already exists, not redeclaring")
when not declared(iconv_string):
  proc iconv_string*(tocode: cstring; fromcode: cstring; inbuf: cstring;
                     inbytesleft: csize_t): cstring {.cdecl,
      importc: "SDL_iconv_string".}
else:
  static :
    hint("Declaration of " & "iconv_string" & " already exists, not redeclaring")
when not declared(ReportAssertion):
  proc ReportAssertion*(data: ptr AssertData_1157628487; func_arg: cstring;
                        file: cstring; line: cint): AssertState_1157628483 {.
      cdecl, importc: "SDL_ReportAssertion".}
else:
  static :
    hint("Declaration of " & "ReportAssertion" &
        " already exists, not redeclaring")
when not declared(SetAssertionHandler):
  proc SetAssertionHandler*(handler: AssertionHandler_1157628489;
                            userdata: pointer): void {.cdecl,
      importc: "SDL_SetAssertionHandler".}
else:
  static :
    hint("Declaration of " & "SetAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetDefaultAssertionHandler):
  proc GetDefaultAssertionHandler*(): AssertionHandler_1157628489 {.cdecl,
      importc: "SDL_GetDefaultAssertionHandler".}
else:
  static :
    hint("Declaration of " & "GetDefaultAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetAssertionHandler):
  proc GetAssertionHandler*(puserdata: ptr pointer): AssertionHandler_1157628489 {.
      cdecl, importc: "SDL_GetAssertionHandler".}
else:
  static :
    hint("Declaration of " & "GetAssertionHandler" &
        " already exists, not redeclaring")
when not declared(GetAssertionReport):
  proc GetAssertionReport*(): ptr AssertData_1157628487 {.cdecl,
      importc: "SDL_GetAssertionReport".}
else:
  static :
    hint("Declaration of " & "GetAssertionReport" &
        " already exists, not redeclaring")
when not declared(ResetAssertionReport):
  proc ResetAssertionReport*(): void {.cdecl,
                                       importc: "SDL_ResetAssertionReport".}
else:
  static :
    hint("Declaration of " & "ResetAssertionReport" &
        " already exists, not redeclaring")
when not declared(AsyncIOFromFile):
  proc AsyncIOFromFile*(file: cstring; mode: cstring): ptr AsyncIO_1157628491 {.
      cdecl, importc: "SDL_AsyncIOFromFile".}
else:
  static :
    hint("Declaration of " & "AsyncIOFromFile" &
        " already exists, not redeclaring")
when not declared(GetAsyncIOSize):
  proc GetAsyncIOSize*(asyncio: ptr AsyncIO_1157628491): Sint64_1157628447 {.
      cdecl, importc: "SDL_GetAsyncIOSize".}
else:
  static :
    hint("Declaration of " & "GetAsyncIOSize" &
        " already exists, not redeclaring")
when not declared(ReadAsyncIO):
  proc ReadAsyncIO*(asyncio: ptr AsyncIO_1157628491; ptr_arg: pointer;
                    offset: Uint64_1157628449; size: Uint64_1157628449;
                    queue: ptr AsyncIOQueue_1157628505; userdata: pointer): bool {.
      cdecl, importc: "SDL_ReadAsyncIO".}
else:
  static :
    hint("Declaration of " & "ReadAsyncIO" & " already exists, not redeclaring")
when not declared(WriteAsyncIO):
  proc WriteAsyncIO*(asyncio: ptr AsyncIO_1157628491; ptr_arg: pointer;
                     offset: Uint64_1157628449; size: Uint64_1157628449;
                     queue: ptr AsyncIOQueue_1157628505; userdata: pointer): bool {.
      cdecl, importc: "SDL_WriteAsyncIO".}
else:
  static :
    hint("Declaration of " & "WriteAsyncIO" & " already exists, not redeclaring")
when not declared(CloseAsyncIO):
  proc CloseAsyncIO*(asyncio: ptr AsyncIO_1157628491; flush: bool;
                     queue: ptr AsyncIOQueue_1157628505; userdata: pointer): bool {.
      cdecl, importc: "SDL_CloseAsyncIO".}
else:
  static :
    hint("Declaration of " & "CloseAsyncIO" & " already exists, not redeclaring")
when not declared(CreateAsyncIOQueue):
  proc CreateAsyncIOQueue*(): ptr AsyncIOQueue_1157628505 {.cdecl,
      importc: "SDL_CreateAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "CreateAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(DestroyAsyncIOQueue):
  proc DestroyAsyncIOQueue*(queue: ptr AsyncIOQueue_1157628505): void {.cdecl,
      importc: "SDL_DestroyAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "DestroyAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(GetAsyncIOResult):
  proc GetAsyncIOResult*(queue: ptr AsyncIOQueue_1157628505;
                         outcome: ptr AsyncIOOutcome_1157628503): bool {.cdecl,
      importc: "SDL_GetAsyncIOResult".}
else:
  static :
    hint("Declaration of " & "GetAsyncIOResult" &
        " already exists, not redeclaring")
when not declared(WaitAsyncIOResult):
  proc WaitAsyncIOResult*(queue: ptr AsyncIOQueue_1157628505;
                          outcome: ptr AsyncIOOutcome_1157628503;
                          timeoutMS: Sint32_1157628443): bool {.cdecl,
      importc: "SDL_WaitAsyncIOResult".}
else:
  static :
    hint("Declaration of " & "WaitAsyncIOResult" &
        " already exists, not redeclaring")
when not declared(SignalAsyncIOQueue):
  proc SignalAsyncIOQueue*(queue: ptr AsyncIOQueue_1157628505): void {.cdecl,
      importc: "SDL_SignalAsyncIOQueue".}
else:
  static :
    hint("Declaration of " & "SignalAsyncIOQueue" &
        " already exists, not redeclaring")
when not declared(LoadFileAsync):
  proc LoadFileAsync*(file: cstring; queue: ptr AsyncIOQueue_1157628505;
                      userdata: pointer): bool {.cdecl,
      importc: "SDL_LoadFileAsync".}
else:
  static :
    hint("Declaration of " & "LoadFileAsync" &
        " already exists, not redeclaring")
when not declared(TryLockSpinlock):
  proc TryLockSpinlock*(lock: ptr SpinLock_1157628507): bool {.cdecl,
      importc: "SDL_TryLockSpinlock".}
else:
  static :
    hint("Declaration of " & "TryLockSpinlock" &
        " already exists, not redeclaring")
when not declared(LockSpinlock):
  proc LockSpinlock*(lock: ptr SpinLock_1157628507): void {.cdecl,
      importc: "SDL_LockSpinlock".}
else:
  static :
    hint("Declaration of " & "LockSpinlock" & " already exists, not redeclaring")
when not declared(UnlockSpinlock):
  proc UnlockSpinlock*(lock: ptr SpinLock_1157628507): void {.cdecl,
      importc: "SDL_UnlockSpinlock".}
else:
  static :
    hint("Declaration of " & "UnlockSpinlock" &
        " already exists, not redeclaring")
when not declared(MemoryBarrierReleaseFunction):
  proc MemoryBarrierReleaseFunction*(): void {.cdecl,
      importc: "SDL_MemoryBarrierReleaseFunction".}
else:
  static :
    hint("Declaration of " & "MemoryBarrierReleaseFunction" &
        " already exists, not redeclaring")
when not declared(MemoryBarrierAcquireFunction):
  proc MemoryBarrierAcquireFunction*(): void {.cdecl,
      importc: "SDL_MemoryBarrierAcquireFunction".}
else:
  static :
    hint("Declaration of " & "MemoryBarrierAcquireFunction" &
        " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicInt):
  proc CompareAndSwapAtomicInt*(a: ptr AtomicInt_1157628511; oldval: cint;
                                newval: cint): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicInt".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicInt" &
        " already exists, not redeclaring")
when not declared(SetAtomicInt):
  proc SetAtomicInt*(a: ptr AtomicInt_1157628511; v: cint): cint {.cdecl,
      importc: "SDL_SetAtomicInt".}
else:
  static :
    hint("Declaration of " & "SetAtomicInt" & " already exists, not redeclaring")
when not declared(GetAtomicInt):
  proc GetAtomicInt*(a: ptr AtomicInt_1157628511): cint {.cdecl,
      importc: "SDL_GetAtomicInt".}
else:
  static :
    hint("Declaration of " & "GetAtomicInt" & " already exists, not redeclaring")
when not declared(AddAtomicInt):
  proc AddAtomicInt*(a: ptr AtomicInt_1157628511; v: cint): cint {.cdecl,
      importc: "SDL_AddAtomicInt".}
else:
  static :
    hint("Declaration of " & "AddAtomicInt" & " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicU32):
  proc CompareAndSwapAtomicU32*(a: ptr AtomicU32_1157628515; oldval: Uint32_1157628445;
                                newval: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicU32".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicU32" &
        " already exists, not redeclaring")
when not declared(SetAtomicU32):
  proc SetAtomicU32*(a: ptr AtomicU32_1157628515; v: Uint32_1157628445): Uint32_1157628445 {.
      cdecl, importc: "SDL_SetAtomicU32".}
else:
  static :
    hint("Declaration of " & "SetAtomicU32" & " already exists, not redeclaring")
when not declared(GetAtomicU32):
  proc GetAtomicU32*(a: ptr AtomicU32_1157628515): Uint32_1157628445 {.cdecl,
      importc: "SDL_GetAtomicU32".}
else:
  static :
    hint("Declaration of " & "GetAtomicU32" & " already exists, not redeclaring")
when not declared(CompareAndSwapAtomicPointer):
  proc CompareAndSwapAtomicPointer*(a: ptr pointer; oldval: pointer;
                                    newval: pointer): bool {.cdecl,
      importc: "SDL_CompareAndSwapAtomicPointer".}
else:
  static :
    hint("Declaration of " & "CompareAndSwapAtomicPointer" &
        " already exists, not redeclaring")
when not declared(SetAtomicPointer):
  proc SetAtomicPointer*(a: ptr pointer; v: pointer): pointer {.cdecl,
      importc: "SDL_SetAtomicPointer".}
else:
  static :
    hint("Declaration of " & "SetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(GetAtomicPointer):
  proc GetAtomicPointer*(a: ptr pointer): pointer {.cdecl,
      importc: "SDL_GetAtomicPointer".}
else:
  static :
    hint("Declaration of " & "GetAtomicPointer" &
        " already exists, not redeclaring")
when not declared(SetError):
  proc SetError*(fmt: cstring): bool {.cdecl, varargs, importc: "SDL_SetError".}
else:
  static :
    hint("Declaration of " & "SetError" & " already exists, not redeclaring")
when not declared(SetErrorV):
  proc SetErrorV*(fmt: cstring): bool {.cdecl, varargs, importc: "SDL_SetErrorV".}
else:
  static :
    hint("Declaration of " & "SetErrorV" & " already exists, not redeclaring")
when not declared(OutOfMemory):
  proc OutOfMemory*(): bool {.cdecl, importc: "SDL_OutOfMemory".}
else:
  static :
    hint("Declaration of " & "OutOfMemory" & " already exists, not redeclaring")
when not declared(GetError):
  proc GetError*(): cstring {.cdecl, importc: "SDL_GetError".}
else:
  static :
    hint("Declaration of " & "GetError" & " already exists, not redeclaring")
when not declared(ClearError):
  proc ClearError*(): bool {.cdecl, importc: "SDL_ClearError".}
else:
  static :
    hint("Declaration of " & "ClearError" & " already exists, not redeclaring")
when not declared(GetGlobalProperties):
  proc GetGlobalProperties*(): PropertiesID_1157628517 {.cdecl,
      importc: "SDL_GetGlobalProperties".}
else:
  static :
    hint("Declaration of " & "GetGlobalProperties" &
        " already exists, not redeclaring")
when not declared(CreateProperties):
  proc CreateProperties*(): PropertiesID_1157628517 {.cdecl,
      importc: "SDL_CreateProperties".}
else:
  static :
    hint("Declaration of " & "CreateProperties" &
        " already exists, not redeclaring")
when not declared(CopyProperties):
  proc CopyProperties*(src: PropertiesID_1157628517; dst: PropertiesID_1157628517): bool {.
      cdecl, importc: "SDL_CopyProperties".}
else:
  static :
    hint("Declaration of " & "CopyProperties" &
        " already exists, not redeclaring")
when not declared(LockProperties):
  proc LockProperties*(props: PropertiesID_1157628517): bool {.cdecl,
      importc: "SDL_LockProperties".}
else:
  static :
    hint("Declaration of " & "LockProperties" &
        " already exists, not redeclaring")
when not declared(UnlockProperties):
  proc UnlockProperties*(props: PropertiesID_1157628517): void {.cdecl,
      importc: "SDL_UnlockProperties".}
else:
  static :
    hint("Declaration of " & "UnlockProperties" &
        " already exists, not redeclaring")
when not declared(SetPointerPropertyWithCleanup):
  proc SetPointerPropertyWithCleanup*(props: PropertiesID_1157628517;
                                      name: cstring; value: pointer;
                                      cleanup: CleanupPropertyCallback_1157628523;
                                      userdata: pointer): bool {.cdecl,
      importc: "SDL_SetPointerPropertyWithCleanup".}
else:
  static :
    hint("Declaration of " & "SetPointerPropertyWithCleanup" &
        " already exists, not redeclaring")
when not declared(SetPointerProperty):
  proc SetPointerProperty*(props: PropertiesID_1157628517; name: cstring;
                           value: pointer): bool {.cdecl,
      importc: "SDL_SetPointerProperty".}
else:
  static :
    hint("Declaration of " & "SetPointerProperty" &
        " already exists, not redeclaring")
when not declared(SetStringProperty):
  proc SetStringProperty*(props: PropertiesID_1157628517; name: cstring;
                          value: cstring): bool {.cdecl,
      importc: "SDL_SetStringProperty".}
else:
  static :
    hint("Declaration of " & "SetStringProperty" &
        " already exists, not redeclaring")
when not declared(SetNumberProperty):
  proc SetNumberProperty*(props: PropertiesID_1157628517; name: cstring;
                          value: Sint64_1157628447): bool {.cdecl,
      importc: "SDL_SetNumberProperty".}
else:
  static :
    hint("Declaration of " & "SetNumberProperty" &
        " already exists, not redeclaring")
when not declared(SetFloatProperty):
  proc SetFloatProperty*(props: PropertiesID_1157628517; name: cstring;
                         value: cfloat): bool {.cdecl,
      importc: "SDL_SetFloatProperty".}
else:
  static :
    hint("Declaration of " & "SetFloatProperty" &
        " already exists, not redeclaring")
when not declared(SetBooleanProperty):
  proc SetBooleanProperty*(props: PropertiesID_1157628517; name: cstring;
                           value: bool): bool {.cdecl,
      importc: "SDL_SetBooleanProperty".}
else:
  static :
    hint("Declaration of " & "SetBooleanProperty" &
        " already exists, not redeclaring")
when not declared(HasProperty):
  proc HasProperty*(props: PropertiesID_1157628517; name: cstring): bool {.
      cdecl, importc: "SDL_HasProperty".}
else:
  static :
    hint("Declaration of " & "HasProperty" & " already exists, not redeclaring")
when not declared(GetPropertyType):
  proc GetPropertyType*(props: PropertiesID_1157628517; name: cstring): PropertyType_1157628521 {.
      cdecl, importc: "SDL_GetPropertyType".}
else:
  static :
    hint("Declaration of " & "GetPropertyType" &
        " already exists, not redeclaring")
when not declared(GetPointerProperty):
  proc GetPointerProperty*(props: PropertiesID_1157628517; name: cstring;
                           default_value: pointer): pointer {.cdecl,
      importc: "SDL_GetPointerProperty".}
else:
  static :
    hint("Declaration of " & "GetPointerProperty" &
        " already exists, not redeclaring")
when not declared(GetStringProperty):
  proc GetStringProperty*(props: PropertiesID_1157628517; name: cstring;
                          default_value: cstring): cstring {.cdecl,
      importc: "SDL_GetStringProperty".}
else:
  static :
    hint("Declaration of " & "GetStringProperty" &
        " already exists, not redeclaring")
when not declared(GetNumberProperty):
  proc GetNumberProperty*(props: PropertiesID_1157628517; name: cstring;
                          default_value: Sint64_1157628447): Sint64_1157628447 {.
      cdecl, importc: "SDL_GetNumberProperty".}
else:
  static :
    hint("Declaration of " & "GetNumberProperty" &
        " already exists, not redeclaring")
when not declared(GetFloatProperty):
  proc GetFloatProperty*(props: PropertiesID_1157628517; name: cstring;
                         default_value: cfloat): cfloat {.cdecl,
      importc: "SDL_GetFloatProperty".}
else:
  static :
    hint("Declaration of " & "GetFloatProperty" &
        " already exists, not redeclaring")
when not declared(GetBooleanProperty):
  proc GetBooleanProperty*(props: PropertiesID_1157628517; name: cstring;
                           default_value: bool): bool {.cdecl,
      importc: "SDL_GetBooleanProperty".}
else:
  static :
    hint("Declaration of " & "GetBooleanProperty" &
        " already exists, not redeclaring")
when not declared(ClearProperty):
  proc ClearProperty*(props: PropertiesID_1157628517; name: cstring): bool {.
      cdecl, importc: "SDL_ClearProperty".}
else:
  static :
    hint("Declaration of " & "ClearProperty" &
        " already exists, not redeclaring")
when not declared(EnumerateProperties):
  proc EnumerateProperties*(props: PropertiesID_1157628517;
                            callback: EnumeratePropertiesCallback_1157628525;
                            userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateProperties".}
else:
  static :
    hint("Declaration of " & "EnumerateProperties" &
        " already exists, not redeclaring")
when not declared(DestroyProperties):
  proc DestroyProperties*(props: PropertiesID_1157628517): void {.cdecl,
      importc: "SDL_DestroyProperties".}
else:
  static :
    hint("Declaration of " & "DestroyProperties" &
        " already exists, not redeclaring")
when not declared(CreateThreadRuntime):
  proc CreateThreadRuntime*(fn: ThreadFunction_1157628537; name: cstring;
                            data: pointer; pfnBeginThread: FunctionPointer_1157628479;
                            pfnEndThread: FunctionPointer_1157628479): ptr Thread_1157628527 {.
      cdecl, importc: "SDL_CreateThreadRuntime".}
else:
  static :
    hint("Declaration of " & "CreateThreadRuntime" &
        " already exists, not redeclaring")
when not declared(CreateThreadWithPropertiesRuntime):
  proc CreateThreadWithPropertiesRuntime*(props: PropertiesID_1157628517;
      pfnBeginThread: FunctionPointer_1157628479; pfnEndThread: FunctionPointer_1157628479): ptr Thread_1157628527 {.
      cdecl, importc: "SDL_CreateThreadWithPropertiesRuntime".}
else:
  static :
    hint("Declaration of " & "CreateThreadWithPropertiesRuntime" &
        " already exists, not redeclaring")
when not declared(GetThreadName):
  proc GetThreadName*(thread: ptr Thread_1157628527): cstring {.cdecl,
      importc: "SDL_GetThreadName".}
else:
  static :
    hint("Declaration of " & "GetThreadName" &
        " already exists, not redeclaring")
when not declared(GetCurrentThreadID):
  proc GetCurrentThreadID*(): ThreadID_1157628529 {.cdecl,
      importc: "SDL_GetCurrentThreadID".}
else:
  static :
    hint("Declaration of " & "GetCurrentThreadID" &
        " already exists, not redeclaring")
when not declared(GetThreadID):
  proc GetThreadID*(thread: ptr Thread_1157628527): ThreadID_1157628529 {.cdecl,
      importc: "SDL_GetThreadID".}
else:
  static :
    hint("Declaration of " & "GetThreadID" & " already exists, not redeclaring")
when not declared(SetCurrentThreadPriority):
  proc SetCurrentThreadPriority*(priority: ThreadPriority_1157628535): bool {.
      cdecl, importc: "SDL_SetCurrentThreadPriority".}
else:
  static :
    hint("Declaration of " & "SetCurrentThreadPriority" &
        " already exists, not redeclaring")
when not declared(WaitThread):
  proc WaitThread*(thread: ptr Thread_1157628527; status: ptr cint): void {.
      cdecl, importc: "SDL_WaitThread".}
else:
  static :
    hint("Declaration of " & "WaitThread" & " already exists, not redeclaring")
when not declared(DetachThread):
  proc DetachThread*(thread: ptr Thread_1157628527): void {.cdecl,
      importc: "SDL_DetachThread".}
else:
  static :
    hint("Declaration of " & "DetachThread" & " already exists, not redeclaring")
when not declared(GetTLS):
  proc GetTLS*(id: ptr TLSID_1157628531): pointer {.cdecl, importc: "SDL_GetTLS".}
else:
  static :
    hint("Declaration of " & "GetTLS" & " already exists, not redeclaring")
when not declared(SetTLS):
  proc SetTLS*(id: ptr TLSID_1157628531; value: pointer;
               destructor: TLSDestructorCallback_1157628539): bool {.cdecl,
      importc: "SDL_SetTLS".}
else:
  static :
    hint("Declaration of " & "SetTLS" & " already exists, not redeclaring")
when not declared(CleanupTLS):
  proc CleanupTLS*(): void {.cdecl, importc: "SDL_CleanupTLS".}
else:
  static :
    hint("Declaration of " & "CleanupTLS" & " already exists, not redeclaring")
when not declared(CreateMutex):
  proc CreateMutex*(): ptr Mutex_1157628541 {.cdecl, importc: "SDL_CreateMutex".}
else:
  static :
    hint("Declaration of " & "CreateMutex" & " already exists, not redeclaring")
when not declared(LockMutex):
  proc LockMutex*(mutex: ptr Mutex_1157628541): void {.cdecl,
      importc: "SDL_LockMutex".}
else:
  static :
    hint("Declaration of " & "LockMutex" & " already exists, not redeclaring")
when not declared(TryLockMutex):
  proc TryLockMutex*(mutex: ptr Mutex_1157628541): bool {.cdecl,
      importc: "SDL_TryLockMutex".}
else:
  static :
    hint("Declaration of " & "TryLockMutex" & " already exists, not redeclaring")
when not declared(UnlockMutex):
  proc UnlockMutex*(mutex: ptr Mutex_1157628541): void {.cdecl,
      importc: "SDL_UnlockMutex".}
else:
  static :
    hint("Declaration of " & "UnlockMutex" & " already exists, not redeclaring")
when not declared(DestroyMutex):
  proc DestroyMutex*(mutex: ptr Mutex_1157628541): void {.cdecl,
      importc: "SDL_DestroyMutex".}
else:
  static :
    hint("Declaration of " & "DestroyMutex" & " already exists, not redeclaring")
when not declared(CreateRWLock):
  proc CreateRWLock*(): ptr RWLock_1157628543 {.cdecl,
      importc: "SDL_CreateRWLock".}
else:
  static :
    hint("Declaration of " & "CreateRWLock" & " already exists, not redeclaring")
when not declared(LockRWLockForReading):
  proc LockRWLockForReading*(rwlock: ptr RWLock_1157628543): void {.cdecl,
      importc: "SDL_LockRWLockForReading".}
else:
  static :
    hint("Declaration of " & "LockRWLockForReading" &
        " already exists, not redeclaring")
when not declared(LockRWLockForWriting):
  proc LockRWLockForWriting*(rwlock: ptr RWLock_1157628543): void {.cdecl,
      importc: "SDL_LockRWLockForWriting".}
else:
  static :
    hint("Declaration of " & "LockRWLockForWriting" &
        " already exists, not redeclaring")
when not declared(TryLockRWLockForReading):
  proc TryLockRWLockForReading*(rwlock: ptr RWLock_1157628543): bool {.cdecl,
      importc: "SDL_TryLockRWLockForReading".}
else:
  static :
    hint("Declaration of " & "TryLockRWLockForReading" &
        " already exists, not redeclaring")
when not declared(TryLockRWLockForWriting):
  proc TryLockRWLockForWriting*(rwlock: ptr RWLock_1157628543): bool {.cdecl,
      importc: "SDL_TryLockRWLockForWriting".}
else:
  static :
    hint("Declaration of " & "TryLockRWLockForWriting" &
        " already exists, not redeclaring")
when not declared(UnlockRWLock):
  proc UnlockRWLock*(rwlock: ptr RWLock_1157628543): void {.cdecl,
      importc: "SDL_UnlockRWLock".}
else:
  static :
    hint("Declaration of " & "UnlockRWLock" & " already exists, not redeclaring")
when not declared(DestroyRWLock):
  proc DestroyRWLock*(rwlock: ptr RWLock_1157628543): void {.cdecl,
      importc: "SDL_DestroyRWLock".}
else:
  static :
    hint("Declaration of " & "DestroyRWLock" &
        " already exists, not redeclaring")
when not declared(CreateSemaphore):
  proc CreateSemaphore*(initial_value: Uint32_1157628445): ptr Semaphore_1157628545 {.
      cdecl, importc: "SDL_CreateSemaphore".}
else:
  static :
    hint("Declaration of " & "CreateSemaphore" &
        " already exists, not redeclaring")
when not declared(DestroySemaphore):
  proc DestroySemaphore*(sem: ptr Semaphore_1157628545): void {.cdecl,
      importc: "SDL_DestroySemaphore".}
else:
  static :
    hint("Declaration of " & "DestroySemaphore" &
        " already exists, not redeclaring")
when not declared(WaitSemaphore):
  proc WaitSemaphore*(sem: ptr Semaphore_1157628545): void {.cdecl,
      importc: "SDL_WaitSemaphore".}
else:
  static :
    hint("Declaration of " & "WaitSemaphore" &
        " already exists, not redeclaring")
when not declared(TryWaitSemaphore):
  proc TryWaitSemaphore*(sem: ptr Semaphore_1157628545): bool {.cdecl,
      importc: "SDL_TryWaitSemaphore".}
else:
  static :
    hint("Declaration of " & "TryWaitSemaphore" &
        " already exists, not redeclaring")
when not declared(WaitSemaphoreTimeout):
  proc WaitSemaphoreTimeout*(sem: ptr Semaphore_1157628545; timeoutMS: Sint32_1157628443): bool {.
      cdecl, importc: "SDL_WaitSemaphoreTimeout".}
else:
  static :
    hint("Declaration of " & "WaitSemaphoreTimeout" &
        " already exists, not redeclaring")
when not declared(SignalSemaphore):
  proc SignalSemaphore*(sem: ptr Semaphore_1157628545): void {.cdecl,
      importc: "SDL_SignalSemaphore".}
else:
  static :
    hint("Declaration of " & "SignalSemaphore" &
        " already exists, not redeclaring")
when not declared(GetSemaphoreValue):
  proc GetSemaphoreValue*(sem: ptr Semaphore_1157628545): Uint32_1157628445 {.
      cdecl, importc: "SDL_GetSemaphoreValue".}
else:
  static :
    hint("Declaration of " & "GetSemaphoreValue" &
        " already exists, not redeclaring")
when not declared(CreateCondition):
  proc CreateCondition*(): ptr Condition_1157628547 {.cdecl,
      importc: "SDL_CreateCondition".}
else:
  static :
    hint("Declaration of " & "CreateCondition" &
        " already exists, not redeclaring")
when not declared(DestroyCondition):
  proc DestroyCondition*(cond: ptr Condition_1157628547): void {.cdecl,
      importc: "SDL_DestroyCondition".}
else:
  static :
    hint("Declaration of " & "DestroyCondition" &
        " already exists, not redeclaring")
when not declared(SignalCondition):
  proc SignalCondition*(cond: ptr Condition_1157628547): void {.cdecl,
      importc: "SDL_SignalCondition".}
else:
  static :
    hint("Declaration of " & "SignalCondition" &
        " already exists, not redeclaring")
when not declared(BroadcastCondition):
  proc BroadcastCondition*(cond: ptr Condition_1157628547): void {.cdecl,
      importc: "SDL_BroadcastCondition".}
else:
  static :
    hint("Declaration of " & "BroadcastCondition" &
        " already exists, not redeclaring")
when not declared(WaitCondition):
  proc WaitCondition*(cond: ptr Condition_1157628547; mutex: ptr Mutex_1157628541): void {.
      cdecl, importc: "SDL_WaitCondition".}
else:
  static :
    hint("Declaration of " & "WaitCondition" &
        " already exists, not redeclaring")
when not declared(WaitConditionTimeout):
  proc WaitConditionTimeout*(cond: ptr Condition_1157628547; mutex: ptr Mutex_1157628541;
                             timeoutMS: Sint32_1157628443): bool {.cdecl,
      importc: "SDL_WaitConditionTimeout".}
else:
  static :
    hint("Declaration of " & "WaitConditionTimeout" &
        " already exists, not redeclaring")
when not declared(ShouldInit):
  proc ShouldInit*(state: ptr InitState_1157628555): bool {.cdecl,
      importc: "SDL_ShouldInit".}
else:
  static :
    hint("Declaration of " & "ShouldInit" & " already exists, not redeclaring")
when not declared(ShouldQuit):
  proc ShouldQuit*(state: ptr InitState_1157628555): bool {.cdecl,
      importc: "SDL_ShouldQuit".}
else:
  static :
    hint("Declaration of " & "ShouldQuit" & " already exists, not redeclaring")
when not declared(SetInitialized):
  proc SetInitialized*(state: ptr InitState_1157628555; initialized: bool): void {.
      cdecl, importc: "SDL_SetInitialized".}
else:
  static :
    hint("Declaration of " & "SetInitialized" &
        " already exists, not redeclaring")
when not declared(IOFromFile):
  proc IOFromFile*(file: cstring; mode: cstring): ptr IOStream_1157628569 {.
      cdecl, importc: "SDL_IOFromFile".}
else:
  static :
    hint("Declaration of " & "IOFromFile" & " already exists, not redeclaring")
when not declared(IOFromMem):
  proc IOFromMem*(mem: pointer; size: csize_t): ptr IOStream_1157628569 {.cdecl,
      importc: "SDL_IOFromMem".}
else:
  static :
    hint("Declaration of " & "IOFromMem" & " already exists, not redeclaring")
when not declared(IOFromConstMem):
  proc IOFromConstMem*(mem: pointer; size: csize_t): ptr IOStream_1157628569 {.
      cdecl, importc: "SDL_IOFromConstMem".}
else:
  static :
    hint("Declaration of " & "IOFromConstMem" &
        " already exists, not redeclaring")
when not declared(IOFromDynamicMem):
  proc IOFromDynamicMem*(): ptr IOStream_1157628569 {.cdecl,
      importc: "SDL_IOFromDynamicMem".}
else:
  static :
    hint("Declaration of " & "IOFromDynamicMem" &
        " already exists, not redeclaring")
when not declared(OpenIO):
  proc OpenIO*(iface: ptr IOStreamInterface_1157628567; userdata: pointer): ptr IOStream_1157628569 {.
      cdecl, importc: "SDL_OpenIO".}
else:
  static :
    hint("Declaration of " & "OpenIO" & " already exists, not redeclaring")
when not declared(CloseIO):
  proc CloseIO*(context: ptr IOStream_1157628569): bool {.cdecl,
      importc: "SDL_CloseIO".}
else:
  static :
    hint("Declaration of " & "CloseIO" & " already exists, not redeclaring")
when not declared(GetIOProperties):
  proc GetIOProperties*(context: ptr IOStream_1157628569): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetIOProperties".}
else:
  static :
    hint("Declaration of " & "GetIOProperties" &
        " already exists, not redeclaring")
when not declared(GetIOStatus):
  proc GetIOStatus*(context: ptr IOStream_1157628569): IOStatus_1157628559 {.
      cdecl, importc: "SDL_GetIOStatus".}
else:
  static :
    hint("Declaration of " & "GetIOStatus" & " already exists, not redeclaring")
when not declared(GetIOSize):
  proc GetIOSize*(context: ptr IOStream_1157628569): Sint64_1157628447 {.cdecl,
      importc: "SDL_GetIOSize".}
else:
  static :
    hint("Declaration of " & "GetIOSize" & " already exists, not redeclaring")
when not declared(SeekIO):
  proc SeekIO*(context: ptr IOStream_1157628569; offset: Sint64_1157628447;
               whence: IOWhence_1157628563): Sint64_1157628447 {.cdecl,
      importc: "SDL_SeekIO".}
else:
  static :
    hint("Declaration of " & "SeekIO" & " already exists, not redeclaring")
when not declared(TellIO):
  proc TellIO*(context: ptr IOStream_1157628569): Sint64_1157628447 {.cdecl,
      importc: "SDL_TellIO".}
else:
  static :
    hint("Declaration of " & "TellIO" & " already exists, not redeclaring")
when not declared(ReadIO):
  proc ReadIO*(context: ptr IOStream_1157628569; ptr_arg: pointer; size: csize_t): csize_t {.
      cdecl, importc: "SDL_ReadIO".}
else:
  static :
    hint("Declaration of " & "ReadIO" & " already exists, not redeclaring")
when not declared(WriteIO):
  proc WriteIO*(context: ptr IOStream_1157628569; ptr_arg: pointer;
                size: csize_t): csize_t {.cdecl, importc: "SDL_WriteIO".}
else:
  static :
    hint("Declaration of " & "WriteIO" & " already exists, not redeclaring")
when not declared(IOprintf):
  proc IOprintf*(context: ptr IOStream_1157628569; fmt: cstring): csize_t {.
      cdecl, varargs, importc: "SDL_IOprintf".}
else:
  static :
    hint("Declaration of " & "IOprintf" & " already exists, not redeclaring")
when not declared(IOvprintf):
  proc IOvprintf*(context: ptr IOStream_1157628569; fmt: cstring): csize_t {.
      cdecl, varargs, importc: "SDL_IOvprintf".}
else:
  static :
    hint("Declaration of " & "IOvprintf" & " already exists, not redeclaring")
when not declared(FlushIO):
  proc FlushIO*(context: ptr IOStream_1157628569): bool {.cdecl,
      importc: "SDL_FlushIO".}
else:
  static :
    hint("Declaration of " & "FlushIO" & " already exists, not redeclaring")
when not declared(LoadFile_IO):
  proc LoadFile_IO*(src: ptr IOStream_1157628569; datasize: ptr csize_t;
                    closeio: bool): pointer {.cdecl, importc: "SDL_LoadFile_IO".}
else:
  static :
    hint("Declaration of " & "LoadFile_IO" & " already exists, not redeclaring")
when not declared(LoadFile):
  proc LoadFile*(file: cstring; datasize: ptr csize_t): pointer {.cdecl,
      importc: "SDL_LoadFile".}
else:
  static :
    hint("Declaration of " & "LoadFile" & " already exists, not redeclaring")
when not declared(SaveFile_IO):
  proc SaveFile_IO*(src: ptr IOStream_1157628569; data: pointer;
                    datasize: csize_t; closeio: bool): bool {.cdecl,
      importc: "SDL_SaveFile_IO".}
else:
  static :
    hint("Declaration of " & "SaveFile_IO" & " already exists, not redeclaring")
when not declared(SaveFile):
  proc SaveFile*(file: cstring; data: pointer; datasize: csize_t): bool {.cdecl,
      importc: "SDL_SaveFile".}
else:
  static :
    hint("Declaration of " & "SaveFile" & " already exists, not redeclaring")
when not declared(ReadU8):
  proc ReadU8*(src: ptr IOStream_1157628569; value: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_ReadU8".}
else:
  static :
    hint("Declaration of " & "ReadU8" & " already exists, not redeclaring")
when not declared(ReadS8):
  proc ReadS8*(src: ptr IOStream_1157628569; value: ptr Sint8_1157628435): bool {.
      cdecl, importc: "SDL_ReadS8".}
else:
  static :
    hint("Declaration of " & "ReadS8" & " already exists, not redeclaring")
when not declared(ReadU16LE):
  proc ReadU16LE*(src: ptr IOStream_1157628569; value: ptr Uint16_1157628441): bool {.
      cdecl, importc: "SDL_ReadU16LE".}
else:
  static :
    hint("Declaration of " & "ReadU16LE" & " already exists, not redeclaring")
when not declared(ReadS16LE):
  proc ReadS16LE*(src: ptr IOStream_1157628569; value: ptr Sint16_1157628439): bool {.
      cdecl, importc: "SDL_ReadS16LE".}
else:
  static :
    hint("Declaration of " & "ReadS16LE" & " already exists, not redeclaring")
when not declared(ReadU16BE):
  proc ReadU16BE*(src: ptr IOStream_1157628569; value: ptr Uint16_1157628441): bool {.
      cdecl, importc: "SDL_ReadU16BE".}
else:
  static :
    hint("Declaration of " & "ReadU16BE" & " already exists, not redeclaring")
when not declared(ReadS16BE):
  proc ReadS16BE*(src: ptr IOStream_1157628569; value: ptr Sint16_1157628439): bool {.
      cdecl, importc: "SDL_ReadS16BE".}
else:
  static :
    hint("Declaration of " & "ReadS16BE" & " already exists, not redeclaring")
when not declared(ReadU32LE):
  proc ReadU32LE*(src: ptr IOStream_1157628569; value: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_ReadU32LE".}
else:
  static :
    hint("Declaration of " & "ReadU32LE" & " already exists, not redeclaring")
when not declared(ReadS32LE):
  proc ReadS32LE*(src: ptr IOStream_1157628569; value: ptr Sint32_1157628443): bool {.
      cdecl, importc: "SDL_ReadS32LE".}
else:
  static :
    hint("Declaration of " & "ReadS32LE" & " already exists, not redeclaring")
when not declared(ReadU32BE):
  proc ReadU32BE*(src: ptr IOStream_1157628569; value: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_ReadU32BE".}
else:
  static :
    hint("Declaration of " & "ReadU32BE" & " already exists, not redeclaring")
when not declared(ReadS32BE):
  proc ReadS32BE*(src: ptr IOStream_1157628569; value: ptr Sint32_1157628443): bool {.
      cdecl, importc: "SDL_ReadS32BE".}
else:
  static :
    hint("Declaration of " & "ReadS32BE" & " already exists, not redeclaring")
when not declared(ReadU64LE):
  proc ReadU64LE*(src: ptr IOStream_1157628569; value: ptr Uint64_1157628449): bool {.
      cdecl, importc: "SDL_ReadU64LE".}
else:
  static :
    hint("Declaration of " & "ReadU64LE" & " already exists, not redeclaring")
when not declared(ReadS64LE):
  proc ReadS64LE*(src: ptr IOStream_1157628569; value: ptr Sint64_1157628447): bool {.
      cdecl, importc: "SDL_ReadS64LE".}
else:
  static :
    hint("Declaration of " & "ReadS64LE" & " already exists, not redeclaring")
when not declared(ReadU64BE):
  proc ReadU64BE*(src: ptr IOStream_1157628569; value: ptr Uint64_1157628449): bool {.
      cdecl, importc: "SDL_ReadU64BE".}
else:
  static :
    hint("Declaration of " & "ReadU64BE" & " already exists, not redeclaring")
when not declared(ReadS64BE):
  proc ReadS64BE*(src: ptr IOStream_1157628569; value: ptr Sint64_1157628447): bool {.
      cdecl, importc: "SDL_ReadS64BE".}
else:
  static :
    hint("Declaration of " & "ReadS64BE" & " already exists, not redeclaring")
when not declared(WriteU8):
  proc WriteU8*(dst: ptr IOStream_1157628569; value: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_WriteU8".}
else:
  static :
    hint("Declaration of " & "WriteU8" & " already exists, not redeclaring")
when not declared(WriteS8):
  proc WriteS8*(dst: ptr IOStream_1157628569; value: Sint8_1157628435): bool {.
      cdecl, importc: "SDL_WriteS8".}
else:
  static :
    hint("Declaration of " & "WriteS8" & " already exists, not redeclaring")
when not declared(WriteU16LE):
  proc WriteU16LE*(dst: ptr IOStream_1157628569; value: Uint16_1157628441): bool {.
      cdecl, importc: "SDL_WriteU16LE".}
else:
  static :
    hint("Declaration of " & "WriteU16LE" & " already exists, not redeclaring")
when not declared(WriteS16LE):
  proc WriteS16LE*(dst: ptr IOStream_1157628569; value: Sint16_1157628439): bool {.
      cdecl, importc: "SDL_WriteS16LE".}
else:
  static :
    hint("Declaration of " & "WriteS16LE" & " already exists, not redeclaring")
when not declared(WriteU16BE):
  proc WriteU16BE*(dst: ptr IOStream_1157628569; value: Uint16_1157628441): bool {.
      cdecl, importc: "SDL_WriteU16BE".}
else:
  static :
    hint("Declaration of " & "WriteU16BE" & " already exists, not redeclaring")
when not declared(WriteS16BE):
  proc WriteS16BE*(dst: ptr IOStream_1157628569; value: Sint16_1157628439): bool {.
      cdecl, importc: "SDL_WriteS16BE".}
else:
  static :
    hint("Declaration of " & "WriteS16BE" & " already exists, not redeclaring")
when not declared(WriteU32LE):
  proc WriteU32LE*(dst: ptr IOStream_1157628569; value: Uint32_1157628445): bool {.
      cdecl, importc: "SDL_WriteU32LE".}
else:
  static :
    hint("Declaration of " & "WriteU32LE" & " already exists, not redeclaring")
when not declared(WriteS32LE):
  proc WriteS32LE*(dst: ptr IOStream_1157628569; value: Sint32_1157628443): bool {.
      cdecl, importc: "SDL_WriteS32LE".}
else:
  static :
    hint("Declaration of " & "WriteS32LE" & " already exists, not redeclaring")
when not declared(WriteU32BE):
  proc WriteU32BE*(dst: ptr IOStream_1157628569; value: Uint32_1157628445): bool {.
      cdecl, importc: "SDL_WriteU32BE".}
else:
  static :
    hint("Declaration of " & "WriteU32BE" & " already exists, not redeclaring")
when not declared(WriteS32BE):
  proc WriteS32BE*(dst: ptr IOStream_1157628569; value: Sint32_1157628443): bool {.
      cdecl, importc: "SDL_WriteS32BE".}
else:
  static :
    hint("Declaration of " & "WriteS32BE" & " already exists, not redeclaring")
when not declared(WriteU64LE):
  proc WriteU64LE*(dst: ptr IOStream_1157628569; value: Uint64_1157628449): bool {.
      cdecl, importc: "SDL_WriteU64LE".}
else:
  static :
    hint("Declaration of " & "WriteU64LE" & " already exists, not redeclaring")
when not declared(WriteS64LE):
  proc WriteS64LE*(dst: ptr IOStream_1157628569; value: Sint64_1157628447): bool {.
      cdecl, importc: "SDL_WriteS64LE".}
else:
  static :
    hint("Declaration of " & "WriteS64LE" & " already exists, not redeclaring")
when not declared(WriteU64BE):
  proc WriteU64BE*(dst: ptr IOStream_1157628569; value: Uint64_1157628449): bool {.
      cdecl, importc: "SDL_WriteU64BE".}
else:
  static :
    hint("Declaration of " & "WriteU64BE" & " already exists, not redeclaring")
when not declared(WriteS64BE):
  proc WriteS64BE*(dst: ptr IOStream_1157628569; value: Sint64_1157628447): bool {.
      cdecl, importc: "SDL_WriteS64BE".}
else:
  static :
    hint("Declaration of " & "WriteS64BE" & " already exists, not redeclaring")
when not declared(GetNumAudioDrivers):
  proc GetNumAudioDrivers*(): cint {.cdecl, importc: "SDL_GetNumAudioDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumAudioDrivers" &
        " already exists, not redeclaring")
when not declared(GetAudioDriver):
  proc GetAudioDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetAudioDriver".}
else:
  static :
    hint("Declaration of " & "GetAudioDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentAudioDriver):
  proc GetCurrentAudioDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentAudioDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentAudioDriver" &
        " already exists, not redeclaring")
when not declared(GetAudioPlaybackDevices):
  proc GetAudioPlaybackDevices*(count: ptr cint): ptr AudioDeviceID_1157628575 {.
      cdecl, importc: "SDL_GetAudioPlaybackDevices".}
else:
  static :
    hint("Declaration of " & "GetAudioPlaybackDevices" &
        " already exists, not redeclaring")
when not declared(GetAudioRecordingDevices):
  proc GetAudioRecordingDevices*(count: ptr cint): ptr AudioDeviceID_1157628575 {.
      cdecl, importc: "SDL_GetAudioRecordingDevices".}
else:
  static :
    hint("Declaration of " & "GetAudioRecordingDevices" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceName):
  proc GetAudioDeviceName*(devid: AudioDeviceID_1157628575): cstring {.cdecl,
      importc: "SDL_GetAudioDeviceName".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceName" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceFormat):
  proc GetAudioDeviceFormat*(devid: AudioDeviceID_1157628575;
                             spec: ptr AudioSpec_1157628579;
                             sample_frames: ptr cint): bool {.cdecl,
      importc: "SDL_GetAudioDeviceFormat".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceFormat" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceChannelMap):
  proc GetAudioDeviceChannelMap*(devid: AudioDeviceID_1157628575;
                                 count: ptr cint): ptr cint {.cdecl,
      importc: "SDL_GetAudioDeviceChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceChannelMap" &
        " already exists, not redeclaring")
when not declared(OpenAudioDevice):
  proc OpenAudioDevice*(devid: AudioDeviceID_1157628575; spec: ptr AudioSpec_1157628579): AudioDeviceID_1157628575 {.
      cdecl, importc: "SDL_OpenAudioDevice".}
else:
  static :
    hint("Declaration of " & "OpenAudioDevice" &
        " already exists, not redeclaring")
when not declared(IsAudioDevicePhysical):
  proc IsAudioDevicePhysical*(devid: AudioDeviceID_1157628575): bool {.cdecl,
      importc: "SDL_IsAudioDevicePhysical".}
else:
  static :
    hint("Declaration of " & "IsAudioDevicePhysical" &
        " already exists, not redeclaring")
when not declared(IsAudioDevicePlayback):
  proc IsAudioDevicePlayback*(devid: AudioDeviceID_1157628575): bool {.cdecl,
      importc: "SDL_IsAudioDevicePlayback".}
else:
  static :
    hint("Declaration of " & "IsAudioDevicePlayback" &
        " already exists, not redeclaring")
when not declared(PauseAudioDevice):
  proc PauseAudioDevice*(dev: AudioDeviceID_1157628575): bool {.cdecl,
      importc: "SDL_PauseAudioDevice".}
else:
  static :
    hint("Declaration of " & "PauseAudioDevice" &
        " already exists, not redeclaring")
when not declared(ResumeAudioDevice):
  proc ResumeAudioDevice*(dev: AudioDeviceID_1157628575): bool {.cdecl,
      importc: "SDL_ResumeAudioDevice".}
else:
  static :
    hint("Declaration of " & "ResumeAudioDevice" &
        " already exists, not redeclaring")
when not declared(AudioDevicePaused):
  proc AudioDevicePaused*(dev: AudioDeviceID_1157628575): bool {.cdecl,
      importc: "SDL_AudioDevicePaused".}
else:
  static :
    hint("Declaration of " & "AudioDevicePaused" &
        " already exists, not redeclaring")
when not declared(GetAudioDeviceGain):
  proc GetAudioDeviceGain*(devid: AudioDeviceID_1157628575): cfloat {.cdecl,
      importc: "SDL_GetAudioDeviceGain".}
else:
  static :
    hint("Declaration of " & "GetAudioDeviceGain" &
        " already exists, not redeclaring")
when not declared(SetAudioDeviceGain):
  proc SetAudioDeviceGain*(devid: AudioDeviceID_1157628575; gain: cfloat): bool {.
      cdecl, importc: "SDL_SetAudioDeviceGain".}
else:
  static :
    hint("Declaration of " & "SetAudioDeviceGain" &
        " already exists, not redeclaring")
when not declared(CloseAudioDevice):
  proc CloseAudioDevice*(devid: AudioDeviceID_1157628575): void {.cdecl,
      importc: "SDL_CloseAudioDevice".}
else:
  static :
    hint("Declaration of " & "CloseAudioDevice" &
        " already exists, not redeclaring")
when not declared(BindAudioStreams):
  proc BindAudioStreams*(devid: AudioDeviceID_1157628575;
                         streams: ptr ptr AudioStream_1157628581;
                         num_streams: cint): bool {.cdecl,
      importc: "SDL_BindAudioStreams".}
else:
  static :
    hint("Declaration of " & "BindAudioStreams" &
        " already exists, not redeclaring")
when not declared(BindAudioStream):
  proc BindAudioStream*(devid: AudioDeviceID_1157628575; stream: ptr AudioStream_1157628581): bool {.
      cdecl, importc: "SDL_BindAudioStream".}
else:
  static :
    hint("Declaration of " & "BindAudioStream" &
        " already exists, not redeclaring")
when not declared(UnbindAudioStreams):
  proc UnbindAudioStreams*(streams: ptr ptr AudioStream_1157628581;
                           num_streams: cint): void {.cdecl,
      importc: "SDL_UnbindAudioStreams".}
else:
  static :
    hint("Declaration of " & "UnbindAudioStreams" &
        " already exists, not redeclaring")
when not declared(UnbindAudioStream):
  proc UnbindAudioStream*(stream: ptr AudioStream_1157628581): void {.cdecl,
      importc: "SDL_UnbindAudioStream".}
else:
  static :
    hint("Declaration of " & "UnbindAudioStream" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamDevice):
  proc GetAudioStreamDevice*(stream: ptr AudioStream_1157628581): AudioDeviceID_1157628575 {.
      cdecl, importc: "SDL_GetAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(CreateAudioStream):
  proc CreateAudioStream*(src_spec: ptr AudioSpec_1157628579;
                          dst_spec: ptr AudioSpec_1157628579): ptr AudioStream_1157628581 {.
      cdecl, importc: "SDL_CreateAudioStream".}
else:
  static :
    hint("Declaration of " & "CreateAudioStream" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamProperties):
  proc GetAudioStreamProperties*(stream: ptr AudioStream_1157628581): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetAudioStreamProperties".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamProperties" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamFormat):
  proc GetAudioStreamFormat*(stream: ptr AudioStream_1157628581;
                             src_spec: ptr AudioSpec_1157628579;
                             dst_spec: ptr AudioSpec_1157628579): bool {.cdecl,
      importc: "SDL_GetAudioStreamFormat".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamFormat" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamFormat):
  proc SetAudioStreamFormat*(stream: ptr AudioStream_1157628581;
                             src_spec: ptr AudioSpec_1157628579;
                             dst_spec: ptr AudioSpec_1157628579): bool {.cdecl,
      importc: "SDL_SetAudioStreamFormat".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamFormat" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamFrequencyRatio):
  proc GetAudioStreamFrequencyRatio*(stream: ptr AudioStream_1157628581): cfloat {.
      cdecl, importc: "SDL_GetAudioStreamFrequencyRatio".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamFrequencyRatio" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamFrequencyRatio):
  proc SetAudioStreamFrequencyRatio*(stream: ptr AudioStream_1157628581;
                                     ratio: cfloat): bool {.cdecl,
      importc: "SDL_SetAudioStreamFrequencyRatio".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamFrequencyRatio" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamGain):
  proc GetAudioStreamGain*(stream: ptr AudioStream_1157628581): cfloat {.cdecl,
      importc: "SDL_GetAudioStreamGain".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamGain" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamGain):
  proc SetAudioStreamGain*(stream: ptr AudioStream_1157628581; gain: cfloat): bool {.
      cdecl, importc: "SDL_SetAudioStreamGain".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamGain" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamInputChannelMap):
  proc GetAudioStreamInputChannelMap*(stream: ptr AudioStream_1157628581;
                                      count: ptr cint): ptr cint {.cdecl,
      importc: "SDL_GetAudioStreamInputChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamInputChannelMap" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamOutputChannelMap):
  proc GetAudioStreamOutputChannelMap*(stream: ptr AudioStream_1157628581;
                                       count: ptr cint): ptr cint {.cdecl,
      importc: "SDL_GetAudioStreamOutputChannelMap".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamOutputChannelMap" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamInputChannelMap):
  proc SetAudioStreamInputChannelMap*(stream: ptr AudioStream_1157628581;
                                      chmap: ptr cint; count: cint): bool {.
      cdecl, importc: "SDL_SetAudioStreamInputChannelMap".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamInputChannelMap" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamOutputChannelMap):
  proc SetAudioStreamOutputChannelMap*(stream: ptr AudioStream_1157628581;
                                       chmap: ptr cint; count: cint): bool {.
      cdecl, importc: "SDL_SetAudioStreamOutputChannelMap".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamOutputChannelMap" &
        " already exists, not redeclaring")
when not declared(PutAudioStreamData):
  proc PutAudioStreamData*(stream: ptr AudioStream_1157628581; buf: pointer;
                           len: cint): bool {.cdecl,
      importc: "SDL_PutAudioStreamData".}
else:
  static :
    hint("Declaration of " & "PutAudioStreamData" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamData):
  proc GetAudioStreamData*(stream: ptr AudioStream_1157628581; buf: pointer;
                           len: cint): cint {.cdecl,
      importc: "SDL_GetAudioStreamData".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamData" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamAvailable):
  proc GetAudioStreamAvailable*(stream: ptr AudioStream_1157628581): cint {.
      cdecl, importc: "SDL_GetAudioStreamAvailable".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamAvailable" &
        " already exists, not redeclaring")
when not declared(GetAudioStreamQueued):
  proc GetAudioStreamQueued*(stream: ptr AudioStream_1157628581): cint {.cdecl,
      importc: "SDL_GetAudioStreamQueued".}
else:
  static :
    hint("Declaration of " & "GetAudioStreamQueued" &
        " already exists, not redeclaring")
when not declared(FlushAudioStream):
  proc FlushAudioStream*(stream: ptr AudioStream_1157628581): bool {.cdecl,
      importc: "SDL_FlushAudioStream".}
else:
  static :
    hint("Declaration of " & "FlushAudioStream" &
        " already exists, not redeclaring")
when not declared(ClearAudioStream):
  proc ClearAudioStream*(stream: ptr AudioStream_1157628581): bool {.cdecl,
      importc: "SDL_ClearAudioStream".}
else:
  static :
    hint("Declaration of " & "ClearAudioStream" &
        " already exists, not redeclaring")
when not declared(PauseAudioStreamDevice):
  proc PauseAudioStreamDevice*(stream: ptr AudioStream_1157628581): bool {.
      cdecl, importc: "SDL_PauseAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "PauseAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(ResumeAudioStreamDevice):
  proc ResumeAudioStreamDevice*(stream: ptr AudioStream_1157628581): bool {.
      cdecl, importc: "SDL_ResumeAudioStreamDevice".}
else:
  static :
    hint("Declaration of " & "ResumeAudioStreamDevice" &
        " already exists, not redeclaring")
when not declared(LockAudioStream):
  proc LockAudioStream*(stream: ptr AudioStream_1157628581): bool {.cdecl,
      importc: "SDL_LockAudioStream".}
else:
  static :
    hint("Declaration of " & "LockAudioStream" &
        " already exists, not redeclaring")
when not declared(UnlockAudioStream):
  proc UnlockAudioStream*(stream: ptr AudioStream_1157628581): bool {.cdecl,
      importc: "SDL_UnlockAudioStream".}
else:
  static :
    hint("Declaration of " & "UnlockAudioStream" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamGetCallback):
  proc SetAudioStreamGetCallback*(stream: ptr AudioStream_1157628581;
                                  callback: AudioStreamCallback_1157628583;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioStreamGetCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamGetCallback" &
        " already exists, not redeclaring")
when not declared(SetAudioStreamPutCallback):
  proc SetAudioStreamPutCallback*(stream: ptr AudioStream_1157628581;
                                  callback: AudioStreamCallback_1157628583;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioStreamPutCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioStreamPutCallback" &
        " already exists, not redeclaring")
when not declared(DestroyAudioStream):
  proc DestroyAudioStream*(stream: ptr AudioStream_1157628581): void {.cdecl,
      importc: "SDL_DestroyAudioStream".}
else:
  static :
    hint("Declaration of " & "DestroyAudioStream" &
        " already exists, not redeclaring")
when not declared(OpenAudioDeviceStream):
  proc OpenAudioDeviceStream*(devid: AudioDeviceID_1157628575;
                              spec: ptr AudioSpec_1157628579;
                              callback: AudioStreamCallback_1157628583;
                              userdata: pointer): ptr AudioStream_1157628581 {.
      cdecl, importc: "SDL_OpenAudioDeviceStream".}
else:
  static :
    hint("Declaration of " & "OpenAudioDeviceStream" &
        " already exists, not redeclaring")
when not declared(SetAudioPostmixCallback):
  proc SetAudioPostmixCallback*(devid: AudioDeviceID_1157628575;
                                callback: AudioPostmixCallback_1157628585;
                                userdata: pointer): bool {.cdecl,
      importc: "SDL_SetAudioPostmixCallback".}
else:
  static :
    hint("Declaration of " & "SetAudioPostmixCallback" &
        " already exists, not redeclaring")
when not declared(LoadWAV_IO):
  proc LoadWAV_IO*(src: ptr IOStream_1157628569; closeio: bool;
                   spec: ptr AudioSpec_1157628579; audio_buf: ptr ptr Uint8_1157628437;
                   audio_len: ptr Uint32_1157628445): bool {.cdecl,
      importc: "SDL_LoadWAV_IO".}
else:
  static :
    hint("Declaration of " & "LoadWAV_IO" & " already exists, not redeclaring")
when not declared(LoadWAV):
  proc LoadWAV*(path: cstring; spec: ptr AudioSpec_1157628579;
                audio_buf: ptr ptr Uint8_1157628437; audio_len: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_LoadWAV".}
else:
  static :
    hint("Declaration of " & "LoadWAV" & " already exists, not redeclaring")
when not declared(MixAudio):
  proc MixAudio*(dst: ptr Uint8_1157628437; src: ptr Uint8_1157628437;
                 format: AudioFormat_1157628573; len: Uint32_1157628445;
                 volume: cfloat): bool {.cdecl, importc: "SDL_MixAudio".}
else:
  static :
    hint("Declaration of " & "MixAudio" & " already exists, not redeclaring")
when not declared(ConvertAudioSamples):
  proc ConvertAudioSamples*(src_spec: ptr AudioSpec_1157628579;
                            src_data: ptr Uint8_1157628437; src_len: cint;
                            dst_spec: ptr AudioSpec_1157628579;
                            dst_data: ptr ptr Uint8_1157628437;
                            dst_len: ptr cint): bool {.cdecl,
      importc: "SDL_ConvertAudioSamples".}
else:
  static :
    hint("Declaration of " & "ConvertAudioSamples" &
        " already exists, not redeclaring")
when not declared(GetAudioFormatName):
  proc GetAudioFormatName*(format: AudioFormat_1157628573): cstring {.cdecl,
      importc: "SDL_GetAudioFormatName".}
else:
  static :
    hint("Declaration of " & "GetAudioFormatName" &
        " already exists, not redeclaring")
when not declared(GetSilenceValueForFormat):
  proc GetSilenceValueForFormat*(format: AudioFormat_1157628573): cint {.cdecl,
      importc: "SDL_GetSilenceValueForFormat".}
else:
  static :
    hint("Declaration of " & "GetSilenceValueForFormat" &
        " already exists, not redeclaring")
when not declared(ComposeCustomBlendMode):
  proc ComposeCustomBlendMode*(srcColorFactor: BlendFactor_1157628595;
                               dstColorFactor: BlendFactor_1157628595;
                               colorOperation: BlendOperation_1157628591;
                               srcAlphaFactor: BlendFactor_1157628595;
                               dstAlphaFactor: BlendFactor_1157628595;
                               alphaOperation: BlendOperation_1157628591): BlendMode_1157628587 {.
      cdecl, importc: "SDL_ComposeCustomBlendMode".}
else:
  static :
    hint("Declaration of " & "ComposeCustomBlendMode" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatName):
  proc GetPixelFormatName*(format: PixelFormat_1157628619): cstring {.cdecl,
      importc: "SDL_GetPixelFormatName".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatName" &
        " already exists, not redeclaring")
when not declared(GetMasksForPixelFormat):
  proc GetMasksForPixelFormat*(format: PixelFormat_1157628619; bpp: ptr cint;
                               Rmask: ptr Uint32_1157628445; Gmask: ptr Uint32_1157628445;
                               Bmask: ptr Uint32_1157628445; Amask: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_GetMasksForPixelFormat".}
else:
  static :
    hint("Declaration of " & "GetMasksForPixelFormat" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatForMasks):
  proc GetPixelFormatForMasks*(bpp: cint; Rmask: Uint32_1157628445;
                               Gmask: Uint32_1157628445; Bmask: Uint32_1157628445;
                               Amask: Uint32_1157628445): PixelFormat_1157628619 {.
      cdecl, importc: "SDL_GetPixelFormatForMasks".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatForMasks" &
        " already exists, not redeclaring")
when not declared(GetPixelFormatDetails):
  proc GetPixelFormatDetails*(format: PixelFormat_1157628619): ptr PixelFormatDetails_1157628663 {.
      cdecl, importc: "SDL_GetPixelFormatDetails".}
else:
  static :
    hint("Declaration of " & "GetPixelFormatDetails" &
        " already exists, not redeclaring")
when not declared(CreatePalette):
  proc CreatePalette*(ncolors: cint): ptr Palette_1157628659 {.cdecl,
      importc: "SDL_CreatePalette".}
else:
  static :
    hint("Declaration of " & "CreatePalette" &
        " already exists, not redeclaring")
when not declared(SetPaletteColors):
  proc SetPaletteColors*(palette: ptr Palette_1157628659; colors: ptr Color_1157628651;
                         firstcolor: cint; ncolors: cint): bool {.cdecl,
      importc: "SDL_SetPaletteColors".}
else:
  static :
    hint("Declaration of " & "SetPaletteColors" &
        " already exists, not redeclaring")
when not declared(DestroyPalette):
  proc DestroyPalette*(palette: ptr Palette_1157628659): void {.cdecl,
      importc: "SDL_DestroyPalette".}
else:
  static :
    hint("Declaration of " & "DestroyPalette" &
        " already exists, not redeclaring")
when not declared(MapRGB):
  proc MapRGB*(format: ptr PixelFormatDetails_1157628663; palette: ptr Palette_1157628659;
               r: Uint8_1157628437; g: Uint8_1157628437; b: Uint8_1157628437): Uint32_1157628445 {.
      cdecl, importc: "SDL_MapRGB".}
else:
  static :
    hint("Declaration of " & "MapRGB" & " already exists, not redeclaring")
when not declared(MapRGBA):
  proc MapRGBA*(format: ptr PixelFormatDetails_1157628663; palette: ptr Palette_1157628659;
                r: Uint8_1157628437; g: Uint8_1157628437; b: Uint8_1157628437;
                a: Uint8_1157628437): Uint32_1157628445 {.cdecl,
      importc: "SDL_MapRGBA".}
else:
  static :
    hint("Declaration of " & "MapRGBA" & " already exists, not redeclaring")
when not declared(GetRGB):
  proc GetRGB*(pixel: Uint32_1157628445; format: ptr PixelFormatDetails_1157628663;
               palette: ptr Palette_1157628659; r: ptr Uint8_1157628437;
               g: ptr Uint8_1157628437; b: ptr Uint8_1157628437): void {.cdecl,
      importc: "SDL_GetRGB".}
else:
  static :
    hint("Declaration of " & "GetRGB" & " already exists, not redeclaring")
when not declared(GetRGBA):
  proc GetRGBA*(pixel: Uint32_1157628445; format: ptr PixelFormatDetails_1157628663;
                palette: ptr Palette_1157628659; r: ptr Uint8_1157628437;
                g: ptr Uint8_1157628437; b: ptr Uint8_1157628437; a: ptr Uint8_1157628437): void {.
      cdecl, importc: "SDL_GetRGBA".}
else:
  static :
    hint("Declaration of " & "GetRGBA" & " already exists, not redeclaring")
when not declared(HasRectIntersection):
  proc HasRectIntersection*(A: ptr Rect_1157628675; B: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_HasRectIntersection".}
else:
  static :
    hint("Declaration of " & "HasRectIntersection" &
        " already exists, not redeclaring")
when not declared(GetRectIntersection):
  proc GetRectIntersection*(A: ptr Rect_1157628675; B: ptr Rect_1157628675;
                            result: ptr Rect_1157628675): bool {.cdecl,
      importc: "SDL_GetRectIntersection".}
else:
  static :
    hint("Declaration of " & "GetRectIntersection" &
        " already exists, not redeclaring")
when not declared(GetRectUnion):
  proc GetRectUnion*(A: ptr Rect_1157628675; B: ptr Rect_1157628675;
                     result: ptr Rect_1157628675): bool {.cdecl,
      importc: "SDL_GetRectUnion".}
else:
  static :
    hint("Declaration of " & "GetRectUnion" & " already exists, not redeclaring")
when not declared(GetRectEnclosingPoints):
  proc GetRectEnclosingPoints*(points: ptr Point_1157628667; count: cint;
                               clip: ptr Rect_1157628675; result: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetRectEnclosingPoints".}
else:
  static :
    hint("Declaration of " & "GetRectEnclosingPoints" &
        " already exists, not redeclaring")
when not declared(GetRectAndLineIntersection):
  proc GetRectAndLineIntersection*(rect: ptr Rect_1157628675; X1: ptr cint;
                                   Y1: ptr cint; X2: ptr cint; Y2: ptr cint): bool {.
      cdecl, importc: "SDL_GetRectAndLineIntersection".}
else:
  static :
    hint("Declaration of " & "GetRectAndLineIntersection" &
        " already exists, not redeclaring")
when not declared(HasRectIntersectionFloat):
  proc HasRectIntersectionFloat*(A: ptr FRect_1157628679; B: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_HasRectIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "HasRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectIntersectionFloat):
  proc GetRectIntersectionFloat*(A: ptr FRect_1157628679; B: ptr FRect_1157628679;
                                 result: ptr FRect_1157628679): bool {.cdecl,
      importc: "SDL_GetRectIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectUnionFloat):
  proc GetRectUnionFloat*(A: ptr FRect_1157628679; B: ptr FRect_1157628679;
                          result: ptr FRect_1157628679): bool {.cdecl,
      importc: "SDL_GetRectUnionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectUnionFloat" &
        " already exists, not redeclaring")
when not declared(GetRectEnclosingPointsFloat):
  proc GetRectEnclosingPointsFloat*(points: ptr FPoint_1157628671; count: cint;
                                    clip: ptr FRect_1157628679;
                                    result: ptr FRect_1157628679): bool {.cdecl,
      importc: "SDL_GetRectEnclosingPointsFloat".}
else:
  static :
    hint("Declaration of " & "GetRectEnclosingPointsFloat" &
        " already exists, not redeclaring")
when not declared(GetRectAndLineIntersectionFloat):
  proc GetRectAndLineIntersectionFloat*(rect: ptr FRect_1157628679;
                                        X1: ptr cfloat; Y1: ptr cfloat;
                                        X2: ptr cfloat; Y2: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetRectAndLineIntersectionFloat".}
else:
  static :
    hint("Declaration of " & "GetRectAndLineIntersectionFloat" &
        " already exists, not redeclaring")
when not declared(CreateSurface):
  proc CreateSurface*(width: cint; height: cint; format: PixelFormat_1157628619): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_CreateSurface".}
else:
  static :
    hint("Declaration of " & "CreateSurface" &
        " already exists, not redeclaring")
when not declared(CreateSurfaceFrom):
  proc CreateSurfaceFrom*(width: cint; height: cint; format: PixelFormat_1157628619;
                          pixels: pointer; pitch: cint): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_CreateSurfaceFrom".}
else:
  static :
    hint("Declaration of " & "CreateSurfaceFrom" &
        " already exists, not redeclaring")
when not declared(DestroySurface):
  proc DestroySurface*(surface: ptr Surface_1157628693): void {.cdecl,
      importc: "SDL_DestroySurface".}
else:
  static :
    hint("Declaration of " & "DestroySurface" &
        " already exists, not redeclaring")
when not declared(GetSurfaceProperties):
  proc GetSurfaceProperties*(surface: ptr Surface_1157628693): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetSurfaceProperties".}
else:
  static :
    hint("Declaration of " & "GetSurfaceProperties" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorspace):
  proc SetSurfaceColorspace*(surface: ptr Surface_1157628693;
                             colorspace: Colorspace_1157628647): bool {.cdecl,
      importc: "SDL_SetSurfaceColorspace".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorspace" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorspace):
  proc GetSurfaceColorspace*(surface: ptr Surface_1157628693): Colorspace_1157628647 {.
      cdecl, importc: "SDL_GetSurfaceColorspace".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorspace" &
        " already exists, not redeclaring")
when not declared(CreateSurfacePalette):
  proc CreateSurfacePalette*(surface: ptr Surface_1157628693): ptr Palette_1157628659 {.
      cdecl, importc: "SDL_CreateSurfacePalette".}
else:
  static :
    hint("Declaration of " & "CreateSurfacePalette" &
        " already exists, not redeclaring")
when not declared(SetSurfacePalette):
  proc SetSurfacePalette*(surface: ptr Surface_1157628693; palette: ptr Palette_1157628659): bool {.
      cdecl, importc: "SDL_SetSurfacePalette".}
else:
  static :
    hint("Declaration of " & "SetSurfacePalette" &
        " already exists, not redeclaring")
when not declared(GetSurfacePalette):
  proc GetSurfacePalette*(surface: ptr Surface_1157628693): ptr Palette_1157628659 {.
      cdecl, importc: "SDL_GetSurfacePalette".}
else:
  static :
    hint("Declaration of " & "GetSurfacePalette" &
        " already exists, not redeclaring")
when not declared(AddSurfaceAlternateImage):
  proc AddSurfaceAlternateImage*(surface: ptr Surface_1157628693;
                                 image: ptr Surface_1157628693): bool {.cdecl,
      importc: "SDL_AddSurfaceAlternateImage".}
else:
  static :
    hint("Declaration of " & "AddSurfaceAlternateImage" &
        " already exists, not redeclaring")
when not declared(SurfaceHasAlternateImages):
  proc SurfaceHasAlternateImages*(surface: ptr Surface_1157628693): bool {.
      cdecl, importc: "SDL_SurfaceHasAlternateImages".}
else:
  static :
    hint("Declaration of " & "SurfaceHasAlternateImages" &
        " already exists, not redeclaring")
when not declared(GetSurfaceImages):
  proc GetSurfaceImages*(surface: ptr Surface_1157628693; count: ptr cint): ptr ptr Surface_1157628693 {.
      cdecl, importc: "SDL_GetSurfaceImages".}
else:
  static :
    hint("Declaration of " & "GetSurfaceImages" &
        " already exists, not redeclaring")
when not declared(RemoveSurfaceAlternateImages):
  proc RemoveSurfaceAlternateImages*(surface: ptr Surface_1157628693): void {.
      cdecl, importc: "SDL_RemoveSurfaceAlternateImages".}
else:
  static :
    hint("Declaration of " & "RemoveSurfaceAlternateImages" &
        " already exists, not redeclaring")
when not declared(LockSurface):
  proc LockSurface*(surface: ptr Surface_1157628693): bool {.cdecl,
      importc: "SDL_LockSurface".}
else:
  static :
    hint("Declaration of " & "LockSurface" & " already exists, not redeclaring")
when not declared(UnlockSurface):
  proc UnlockSurface*(surface: ptr Surface_1157628693): void {.cdecl,
      importc: "SDL_UnlockSurface".}
else:
  static :
    hint("Declaration of " & "UnlockSurface" &
        " already exists, not redeclaring")
when not declared(LoadBMP_IO):
  proc LoadBMP_IO*(src: ptr IOStream_1157628569; closeio: bool): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_LoadBMP_IO".}
else:
  static :
    hint("Declaration of " & "LoadBMP_IO" & " already exists, not redeclaring")
when not declared(LoadBMP):
  proc LoadBMP*(file: cstring): ptr Surface_1157628693 {.cdecl,
      importc: "SDL_LoadBMP".}
else:
  static :
    hint("Declaration of " & "LoadBMP" & " already exists, not redeclaring")
when not declared(SaveBMP_IO):
  proc SaveBMP_IO*(surface: ptr Surface_1157628693; dst: ptr IOStream_1157628569;
                   closeio: bool): bool {.cdecl, importc: "SDL_SaveBMP_IO".}
else:
  static :
    hint("Declaration of " & "SaveBMP_IO" & " already exists, not redeclaring")
when not declared(SaveBMP):
  proc SaveBMP*(surface: ptr Surface_1157628693; file: cstring): bool {.cdecl,
      importc: "SDL_SaveBMP".}
else:
  static :
    hint("Declaration of " & "SaveBMP" & " already exists, not redeclaring")
when not declared(SetSurfaceRLE):
  proc SetSurfaceRLE*(surface: ptr Surface_1157628693; enabled: bool): bool {.
      cdecl, importc: "SDL_SetSurfaceRLE".}
else:
  static :
    hint("Declaration of " & "SetSurfaceRLE" &
        " already exists, not redeclaring")
when not declared(SurfaceHasRLE):
  proc SurfaceHasRLE*(surface: ptr Surface_1157628693): bool {.cdecl,
      importc: "SDL_SurfaceHasRLE".}
else:
  static :
    hint("Declaration of " & "SurfaceHasRLE" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorKey):
  proc SetSurfaceColorKey*(surface: ptr Surface_1157628693; enabled: bool;
                           key: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_SetSurfaceColorKey".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(SurfaceHasColorKey):
  proc SurfaceHasColorKey*(surface: ptr Surface_1157628693): bool {.cdecl,
      importc: "SDL_SurfaceHasColorKey".}
else:
  static :
    hint("Declaration of " & "SurfaceHasColorKey" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorKey):
  proc GetSurfaceColorKey*(surface: ptr Surface_1157628693; key: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_GetSurfaceColorKey".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorKey" &
        " already exists, not redeclaring")
when not declared(SetSurfaceColorMod):
  proc SetSurfaceColorMod*(surface: ptr Surface_1157628693; r: Uint8_1157628437;
                           g: Uint8_1157628437; b: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetSurfaceColorMod".}
else:
  static :
    hint("Declaration of " & "SetSurfaceColorMod" &
        " already exists, not redeclaring")
when not declared(GetSurfaceColorMod):
  proc GetSurfaceColorMod*(surface: ptr Surface_1157628693; r: ptr Uint8_1157628437;
                           g: ptr Uint8_1157628437; b: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_GetSurfaceColorMod".}
else:
  static :
    hint("Declaration of " & "GetSurfaceColorMod" &
        " already exists, not redeclaring")
when not declared(SetSurfaceAlphaMod):
  proc SetSurfaceAlphaMod*(surface: ptr Surface_1157628693; alpha: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetSurfaceAlphaMod".}
else:
  static :
    hint("Declaration of " & "SetSurfaceAlphaMod" &
        " already exists, not redeclaring")
when not declared(GetSurfaceAlphaMod):
  proc GetSurfaceAlphaMod*(surface: ptr Surface_1157628693; alpha: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_GetSurfaceAlphaMod".}
else:
  static :
    hint("Declaration of " & "GetSurfaceAlphaMod" &
        " already exists, not redeclaring")
when not declared(SetSurfaceBlendMode):
  proc SetSurfaceBlendMode*(surface: ptr Surface_1157628693;
                            blendMode: BlendMode_1157628587): bool {.cdecl,
      importc: "SDL_SetSurfaceBlendMode".}
else:
  static :
    hint("Declaration of " & "SetSurfaceBlendMode" &
        " already exists, not redeclaring")
when not declared(GetSurfaceBlendMode):
  proc GetSurfaceBlendMode*(surface: ptr Surface_1157628693;
                            blendMode: ptr BlendMode_1157628587): bool {.cdecl,
      importc: "SDL_GetSurfaceBlendMode".}
else:
  static :
    hint("Declaration of " & "GetSurfaceBlendMode" &
        " already exists, not redeclaring")
when not declared(SetSurfaceClipRect):
  proc SetSurfaceClipRect*(surface: ptr Surface_1157628693; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_SetSurfaceClipRect".}
else:
  static :
    hint("Declaration of " & "SetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(GetSurfaceClipRect):
  proc GetSurfaceClipRect*(surface: ptr Surface_1157628693; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetSurfaceClipRect".}
else:
  static :
    hint("Declaration of " & "GetSurfaceClipRect" &
        " already exists, not redeclaring")
when not declared(FlipSurface):
  proc FlipSurface*(surface: ptr Surface_1157628693; flip: FlipMode_1157628689): bool {.
      cdecl, importc: "SDL_FlipSurface".}
else:
  static :
    hint("Declaration of " & "FlipSurface" & " already exists, not redeclaring")
when not declared(DuplicateSurface):
  proc DuplicateSurface*(surface: ptr Surface_1157628693): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_DuplicateSurface".}
else:
  static :
    hint("Declaration of " & "DuplicateSurface" &
        " already exists, not redeclaring")
when not declared(ScaleSurface):
  proc ScaleSurface*(surface: ptr Surface_1157628693; width: cint; height: cint;
                     scaleMode: ScaleMode_1157628685): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_ScaleSurface".}
else:
  static :
    hint("Declaration of " & "ScaleSurface" & " already exists, not redeclaring")
when not declared(ConvertSurface):
  proc ConvertSurface*(surface: ptr Surface_1157628693; format: PixelFormat_1157628619): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_ConvertSurface".}
else:
  static :
    hint("Declaration of " & "ConvertSurface" &
        " already exists, not redeclaring")
when not declared(ConvertSurfaceAndColorspace):
  proc ConvertSurfaceAndColorspace*(surface: ptr Surface_1157628693;
                                    format: PixelFormat_1157628619;
                                    palette: ptr Palette_1157628659;
                                    colorspace: Colorspace_1157628647;
                                    props: PropertiesID_1157628517): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_ConvertSurfaceAndColorspace".}
else:
  static :
    hint("Declaration of " & "ConvertSurfaceAndColorspace" &
        " already exists, not redeclaring")
when not declared(ConvertPixels):
  proc ConvertPixels*(width: cint; height: cint; src_format: PixelFormat_1157628619;
                      src: pointer; src_pitch: cint; dst_format: PixelFormat_1157628619;
                      dst: pointer; dst_pitch: cint): bool {.cdecl,
      importc: "SDL_ConvertPixels".}
else:
  static :
    hint("Declaration of " & "ConvertPixels" &
        " already exists, not redeclaring")
when not declared(ConvertPixelsAndColorspace):
  proc ConvertPixelsAndColorspace*(width: cint; height: cint;
                                   src_format: PixelFormat_1157628619;
                                   src_colorspace: Colorspace_1157628647;
                                   src_properties: PropertiesID_1157628517;
                                   src: pointer; src_pitch: cint;
                                   dst_format: PixelFormat_1157628619;
                                   dst_colorspace: Colorspace_1157628647;
                                   dst_properties: PropertiesID_1157628517;
                                   dst: pointer; dst_pitch: cint): bool {.cdecl,
      importc: "SDL_ConvertPixelsAndColorspace".}
else:
  static :
    hint("Declaration of " & "ConvertPixelsAndColorspace" &
        " already exists, not redeclaring")
when not declared(PremultiplyAlpha):
  proc PremultiplyAlpha*(width: cint; height: cint; src_format: PixelFormat_1157628619;
                         src: pointer; src_pitch: cint; dst_format: PixelFormat_1157628619;
                         dst: pointer; dst_pitch: cint; linear: bool): bool {.
      cdecl, importc: "SDL_PremultiplyAlpha".}
else:
  static :
    hint("Declaration of " & "PremultiplyAlpha" &
        " already exists, not redeclaring")
when not declared(PremultiplySurfaceAlpha):
  proc PremultiplySurfaceAlpha*(surface: ptr Surface_1157628693; linear: bool): bool {.
      cdecl, importc: "SDL_PremultiplySurfaceAlpha".}
else:
  static :
    hint("Declaration of " & "PremultiplySurfaceAlpha" &
        " already exists, not redeclaring")
when not declared(ClearSurface):
  proc ClearSurface*(surface: ptr Surface_1157628693; r: cfloat; g: cfloat;
                     b: cfloat; a: cfloat): bool {.cdecl,
      importc: "SDL_ClearSurface".}
else:
  static :
    hint("Declaration of " & "ClearSurface" & " already exists, not redeclaring")
when not declared(FillSurfaceRect):
  proc FillSurfaceRect*(dst: ptr Surface_1157628693; rect: ptr Rect_1157628675;
                        color: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_FillSurfaceRect".}
else:
  static :
    hint("Declaration of " & "FillSurfaceRect" &
        " already exists, not redeclaring")
when not declared(FillSurfaceRects):
  proc FillSurfaceRects*(dst: ptr Surface_1157628693; rects: ptr Rect_1157628675;
                         count: cint; color: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_FillSurfaceRects".}
else:
  static :
    hint("Declaration of " & "FillSurfaceRects" &
        " already exists, not redeclaring")
when not declared(BlitSurface):
  proc BlitSurface*(src: ptr Surface_1157628693; srcrect: ptr Rect_1157628675;
                    dst: ptr Surface_1157628693; dstrect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_BlitSurface".}
else:
  static :
    hint("Declaration of " & "BlitSurface" & " already exists, not redeclaring")
when not declared(BlitSurfaceUnchecked):
  proc BlitSurfaceUnchecked*(src: ptr Surface_1157628693; srcrect: ptr Rect_1157628675;
                             dst: ptr Surface_1157628693; dstrect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_BlitSurfaceUnchecked".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceUnchecked" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceScaled):
  proc BlitSurfaceScaled*(src: ptr Surface_1157628693; srcrect: ptr Rect_1157628675;
                          dst: ptr Surface_1157628693; dstrect: ptr Rect_1157628675;
                          scaleMode: ScaleMode_1157628685): bool {.cdecl,
      importc: "SDL_BlitSurfaceScaled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceScaled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceUncheckedScaled):
  proc BlitSurfaceUncheckedScaled*(src: ptr Surface_1157628693;
                                   srcrect: ptr Rect_1157628675;
                                   dst: ptr Surface_1157628693;
                                   dstrect: ptr Rect_1157628675;
                                   scaleMode: ScaleMode_1157628685): bool {.
      cdecl, importc: "SDL_BlitSurfaceUncheckedScaled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceUncheckedScaled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceTiled):
  proc BlitSurfaceTiled*(src: ptr Surface_1157628693; srcrect: ptr Rect_1157628675;
                         dst: ptr Surface_1157628693; dstrect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_BlitSurfaceTiled".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceTiled" &
        " already exists, not redeclaring")
when not declared(BlitSurfaceTiledWithScale):
  proc BlitSurfaceTiledWithScale*(src: ptr Surface_1157628693;
                                  srcrect: ptr Rect_1157628675; scale: cfloat;
                                  scaleMode: ScaleMode_1157628685;
                                  dst: ptr Surface_1157628693; dstrect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_BlitSurfaceTiledWithScale".}
else:
  static :
    hint("Declaration of " & "BlitSurfaceTiledWithScale" &
        " already exists, not redeclaring")
when not declared(BlitSurface9Grid):
  proc BlitSurface9Grid*(src: ptr Surface_1157628693; srcrect: ptr Rect_1157628675;
                         left_width: cint; right_width: cint; top_height: cint;
                         bottom_height: cint; scale: cfloat;
                         scaleMode: ScaleMode_1157628685; dst: ptr Surface_1157628693;
                         dstrect: ptr Rect_1157628675): bool {.cdecl,
      importc: "SDL_BlitSurface9Grid".}
else:
  static :
    hint("Declaration of " & "BlitSurface9Grid" &
        " already exists, not redeclaring")
when not declared(MapSurfaceRGB):
  proc MapSurfaceRGB*(surface: ptr Surface_1157628693; r: Uint8_1157628437;
                      g: Uint8_1157628437; b: Uint8_1157628437): Uint32_1157628445 {.
      cdecl, importc: "SDL_MapSurfaceRGB".}
else:
  static :
    hint("Declaration of " & "MapSurfaceRGB" &
        " already exists, not redeclaring")
when not declared(MapSurfaceRGBA):
  proc MapSurfaceRGBA*(surface: ptr Surface_1157628693; r: Uint8_1157628437;
                       g: Uint8_1157628437; b: Uint8_1157628437; a: Uint8_1157628437): Uint32_1157628445 {.
      cdecl, importc: "SDL_MapSurfaceRGBA".}
else:
  static :
    hint("Declaration of " & "MapSurfaceRGBA" &
        " already exists, not redeclaring")
when not declared(ReadSurfacePixel):
  proc ReadSurfacePixel*(surface: ptr Surface_1157628693; x: cint; y: cint;
                         r: ptr Uint8_1157628437; g: ptr Uint8_1157628437;
                         b: ptr Uint8_1157628437; a: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_ReadSurfacePixel".}
else:
  static :
    hint("Declaration of " & "ReadSurfacePixel" &
        " already exists, not redeclaring")
when not declared(ReadSurfacePixelFloat):
  proc ReadSurfacePixelFloat*(surface: ptr Surface_1157628693; x: cint; y: cint;
                              r: ptr cfloat; g: ptr cfloat; b: ptr cfloat;
                              a: ptr cfloat): bool {.cdecl,
      importc: "SDL_ReadSurfacePixelFloat".}
else:
  static :
    hint("Declaration of " & "ReadSurfacePixelFloat" &
        " already exists, not redeclaring")
when not declared(WriteSurfacePixel):
  proc WriteSurfacePixel*(surface: ptr Surface_1157628693; x: cint; y: cint;
                          r: Uint8_1157628437; g: Uint8_1157628437; b: Uint8_1157628437;
                          a: Uint8_1157628437): bool {.cdecl,
      importc: "SDL_WriteSurfacePixel".}
else:
  static :
    hint("Declaration of " & "WriteSurfacePixel" &
        " already exists, not redeclaring")
when not declared(WriteSurfacePixelFloat):
  proc WriteSurfacePixelFloat*(surface: ptr Surface_1157628693; x: cint;
                               y: cint; r: cfloat; g: cfloat; b: cfloat;
                               a: cfloat): bool {.cdecl,
      importc: "SDL_WriteSurfacePixelFloat".}
else:
  static :
    hint("Declaration of " & "WriteSurfacePixelFloat" &
        " already exists, not redeclaring")
when not declared(GetNumCameraDrivers):
  proc GetNumCameraDrivers*(): cint {.cdecl, importc: "SDL_GetNumCameraDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumCameraDrivers" &
        " already exists, not redeclaring")
when not declared(GetCameraDriver):
  proc GetCameraDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetCameraDriver".}
else:
  static :
    hint("Declaration of " & "GetCameraDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentCameraDriver):
  proc GetCurrentCameraDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentCameraDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentCameraDriver" &
        " already exists, not redeclaring")
when not declared(GetCameras):
  proc GetCameras*(count: ptr cint): ptr CameraID_1157628695 {.cdecl,
      importc: "SDL_GetCameras".}
else:
  static :
    hint("Declaration of " & "GetCameras" & " already exists, not redeclaring")
when not declared(GetCameraSupportedFormats):
  proc GetCameraSupportedFormats*(devid: CameraID_1157628695; count: ptr cint): ptr ptr CameraSpec_1157628701 {.
      cdecl, importc: "SDL_GetCameraSupportedFormats".}
else:
  static :
    hint("Declaration of " & "GetCameraSupportedFormats" &
        " already exists, not redeclaring")
when not declared(GetCameraName):
  proc GetCameraName*(instance_id: CameraID_1157628695): cstring {.cdecl,
      importc: "SDL_GetCameraName".}
else:
  static :
    hint("Declaration of " & "GetCameraName" &
        " already exists, not redeclaring")
when not declared(GetCameraPosition):
  proc GetCameraPosition*(instance_id: CameraID_1157628695): CameraPosition_1157628705 {.
      cdecl, importc: "SDL_GetCameraPosition".}
else:
  static :
    hint("Declaration of " & "GetCameraPosition" &
        " already exists, not redeclaring")
when not declared(OpenCamera):
  proc OpenCamera*(instance_id: CameraID_1157628695; spec: ptr CameraSpec_1157628701): ptr Camera_1157628697 {.
      cdecl, importc: "SDL_OpenCamera".}
else:
  static :
    hint("Declaration of " & "OpenCamera" & " already exists, not redeclaring")
when not declared(GetCameraPermissionState):
  proc GetCameraPermissionState*(camera: ptr Camera_1157628697): cint {.cdecl,
      importc: "SDL_GetCameraPermissionState".}
else:
  static :
    hint("Declaration of " & "GetCameraPermissionState" &
        " already exists, not redeclaring")
when not declared(GetCameraID):
  proc GetCameraID*(camera: ptr Camera_1157628697): CameraID_1157628695 {.cdecl,
      importc: "SDL_GetCameraID".}
else:
  static :
    hint("Declaration of " & "GetCameraID" & " already exists, not redeclaring")
when not declared(GetCameraProperties):
  proc GetCameraProperties*(camera: ptr Camera_1157628697): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetCameraProperties".}
else:
  static :
    hint("Declaration of " & "GetCameraProperties" &
        " already exists, not redeclaring")
when not declared(GetCameraFormat):
  proc GetCameraFormat*(camera: ptr Camera_1157628697; spec: ptr CameraSpec_1157628701): bool {.
      cdecl, importc: "SDL_GetCameraFormat".}
else:
  static :
    hint("Declaration of " & "GetCameraFormat" &
        " already exists, not redeclaring")
when not declared(AcquireCameraFrame):
  proc AcquireCameraFrame*(camera: ptr Camera_1157628697;
                           timestampNS: ptr Uint64_1157628449): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_AcquireCameraFrame".}
else:
  static :
    hint("Declaration of " & "AcquireCameraFrame" &
        " already exists, not redeclaring")
when not declared(ReleaseCameraFrame):
  proc ReleaseCameraFrame*(camera: ptr Camera_1157628697; frame: ptr Surface_1157628693): void {.
      cdecl, importc: "SDL_ReleaseCameraFrame".}
else:
  static :
    hint("Declaration of " & "ReleaseCameraFrame" &
        " already exists, not redeclaring")
when not declared(CloseCamera):
  proc CloseCamera*(camera: ptr Camera_1157628697): void {.cdecl,
      importc: "SDL_CloseCamera".}
else:
  static :
    hint("Declaration of " & "CloseCamera" & " already exists, not redeclaring")
when not declared(SetClipboardText):
  proc SetClipboardText*(text: cstring): bool {.cdecl,
      importc: "SDL_SetClipboardText".}
else:
  static :
    hint("Declaration of " & "SetClipboardText" &
        " already exists, not redeclaring")
when not declared(GetClipboardText):
  proc GetClipboardText*(): cstring {.cdecl, importc: "SDL_GetClipboardText".}
else:
  static :
    hint("Declaration of " & "GetClipboardText" &
        " already exists, not redeclaring")
when not declared(HasClipboardText):
  proc HasClipboardText*(): bool {.cdecl, importc: "SDL_HasClipboardText".}
else:
  static :
    hint("Declaration of " & "HasClipboardText" &
        " already exists, not redeclaring")
when not declared(SetPrimarySelectionText):
  proc SetPrimarySelectionText*(text: cstring): bool {.cdecl,
      importc: "SDL_SetPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "SetPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(GetPrimarySelectionText):
  proc GetPrimarySelectionText*(): cstring {.cdecl,
      importc: "SDL_GetPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "GetPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(HasPrimarySelectionText):
  proc HasPrimarySelectionText*(): bool {.cdecl,
      importc: "SDL_HasPrimarySelectionText".}
else:
  static :
    hint("Declaration of " & "HasPrimarySelectionText" &
        " already exists, not redeclaring")
when not declared(SetClipboardData):
  proc SetClipboardData*(callback: ClipboardDataCallback_1157628707;
                         cleanup: ClipboardCleanupCallback_1157628709;
                         userdata: pointer; mime_types: ptr cstring;
                         num_mime_types: csize_t): bool {.cdecl,
      importc: "SDL_SetClipboardData".}
else:
  static :
    hint("Declaration of " & "SetClipboardData" &
        " already exists, not redeclaring")
when not declared(ClearClipboardData):
  proc ClearClipboardData*(): bool {.cdecl, importc: "SDL_ClearClipboardData".}
else:
  static :
    hint("Declaration of " & "ClearClipboardData" &
        " already exists, not redeclaring")
when not declared(GetClipboardData):
  proc GetClipboardData*(mime_type: cstring; size: ptr csize_t): pointer {.
      cdecl, importc: "SDL_GetClipboardData".}
else:
  static :
    hint("Declaration of " & "GetClipboardData" &
        " already exists, not redeclaring")
when not declared(HasClipboardData):
  proc HasClipboardData*(mime_type: cstring): bool {.cdecl,
      importc: "SDL_HasClipboardData".}
else:
  static :
    hint("Declaration of " & "HasClipboardData" &
        " already exists, not redeclaring")
when not declared(GetClipboardMimeTypes):
  proc GetClipboardMimeTypes*(num_mime_types: ptr csize_t): ptr cstring {.cdecl,
      importc: "SDL_GetClipboardMimeTypes".}
else:
  static :
    hint("Declaration of " & "GetClipboardMimeTypes" &
        " already exists, not redeclaring")
when not declared(GetNumLogicalCPUCores):
  proc GetNumLogicalCPUCores*(): cint {.cdecl,
                                        importc: "SDL_GetNumLogicalCPUCores".}
else:
  static :
    hint("Declaration of " & "GetNumLogicalCPUCores" &
        " already exists, not redeclaring")
when not declared(GetCPUCacheLineSize):
  proc GetCPUCacheLineSize*(): cint {.cdecl, importc: "SDL_GetCPUCacheLineSize".}
else:
  static :
    hint("Declaration of " & "GetCPUCacheLineSize" &
        " already exists, not redeclaring")
when not declared(HasAltiVec):
  proc HasAltiVec*(): bool {.cdecl, importc: "SDL_HasAltiVec".}
else:
  static :
    hint("Declaration of " & "HasAltiVec" & " already exists, not redeclaring")
when not declared(HasMMX):
  proc HasMMX*(): bool {.cdecl, importc: "SDL_HasMMX".}
else:
  static :
    hint("Declaration of " & "HasMMX" & " already exists, not redeclaring")
when not declared(HasSSE):
  proc HasSSE*(): bool {.cdecl, importc: "SDL_HasSSE".}
else:
  static :
    hint("Declaration of " & "HasSSE" & " already exists, not redeclaring")
when not declared(HasSSE2):
  proc HasSSE2*(): bool {.cdecl, importc: "SDL_HasSSE2".}
else:
  static :
    hint("Declaration of " & "HasSSE2" & " already exists, not redeclaring")
when not declared(HasSSE3):
  proc HasSSE3*(): bool {.cdecl, importc: "SDL_HasSSE3".}
else:
  static :
    hint("Declaration of " & "HasSSE3" & " already exists, not redeclaring")
when not declared(HasSSE41):
  proc HasSSE41*(): bool {.cdecl, importc: "SDL_HasSSE41".}
else:
  static :
    hint("Declaration of " & "HasSSE41" & " already exists, not redeclaring")
when not declared(HasSSE42):
  proc HasSSE42*(): bool {.cdecl, importc: "SDL_HasSSE42".}
else:
  static :
    hint("Declaration of " & "HasSSE42" & " already exists, not redeclaring")
when not declared(HasAVX):
  proc HasAVX*(): bool {.cdecl, importc: "SDL_HasAVX".}
else:
  static :
    hint("Declaration of " & "HasAVX" & " already exists, not redeclaring")
when not declared(HasAVX2):
  proc HasAVX2*(): bool {.cdecl, importc: "SDL_HasAVX2".}
else:
  static :
    hint("Declaration of " & "HasAVX2" & " already exists, not redeclaring")
when not declared(HasAVX512F):
  proc HasAVX512F*(): bool {.cdecl, importc: "SDL_HasAVX512F".}
else:
  static :
    hint("Declaration of " & "HasAVX512F" & " already exists, not redeclaring")
when not declared(HasARMSIMD):
  proc HasARMSIMD*(): bool {.cdecl, importc: "SDL_HasARMSIMD".}
else:
  static :
    hint("Declaration of " & "HasARMSIMD" & " already exists, not redeclaring")
when not declared(HasNEON):
  proc HasNEON*(): bool {.cdecl, importc: "SDL_HasNEON".}
else:
  static :
    hint("Declaration of " & "HasNEON" & " already exists, not redeclaring")
when not declared(HasLSX):
  proc HasLSX*(): bool {.cdecl, importc: "SDL_HasLSX".}
else:
  static :
    hint("Declaration of " & "HasLSX" & " already exists, not redeclaring")
when not declared(HasLASX):
  proc HasLASX*(): bool {.cdecl, importc: "SDL_HasLASX".}
else:
  static :
    hint("Declaration of " & "HasLASX" & " already exists, not redeclaring")
when not declared(GetSystemRAM):
  proc GetSystemRAM*(): cint {.cdecl, importc: "SDL_GetSystemRAM".}
else:
  static :
    hint("Declaration of " & "GetSystemRAM" & " already exists, not redeclaring")
when not declared(GetSIMDAlignment):
  proc GetSIMDAlignment*(): csize_t {.cdecl, importc: "SDL_GetSIMDAlignment".}
else:
  static :
    hint("Declaration of " & "GetSIMDAlignment" &
        " already exists, not redeclaring")
when not declared(GetNumVideoDrivers):
  proc GetNumVideoDrivers*(): cint {.cdecl, importc: "SDL_GetNumVideoDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumVideoDrivers" &
        " already exists, not redeclaring")
when not declared(GetVideoDriver):
  proc GetVideoDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetVideoDriver".}
else:
  static :
    hint("Declaration of " & "GetVideoDriver" &
        " already exists, not redeclaring")
when not declared(GetCurrentVideoDriver):
  proc GetCurrentVideoDriver*(): cstring {.cdecl,
      importc: "SDL_GetCurrentVideoDriver".}
else:
  static :
    hint("Declaration of " & "GetCurrentVideoDriver" &
        " already exists, not redeclaring")
when not declared(GetSystemTheme):
  proc GetSystemTheme*(): SystemTheme_1157628717 {.cdecl,
      importc: "SDL_GetSystemTheme".}
else:
  static :
    hint("Declaration of " & "GetSystemTheme" &
        " already exists, not redeclaring")
when not declared(GetDisplays):
  proc GetDisplays*(count: ptr cint): ptr DisplayID_1157628711 {.cdecl,
      importc: "SDL_GetDisplays".}
else:
  static :
    hint("Declaration of " & "GetDisplays" & " already exists, not redeclaring")
when not declared(GetPrimaryDisplay):
  proc GetPrimaryDisplay*(): DisplayID_1157628711 {.cdecl,
      importc: "SDL_GetPrimaryDisplay".}
else:
  static :
    hint("Declaration of " & "GetPrimaryDisplay" &
        " already exists, not redeclaring")
when not declared(GetDisplayProperties):
  proc GetDisplayProperties*(displayID: DisplayID_1157628711): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetDisplayProperties".}
else:
  static :
    hint("Declaration of " & "GetDisplayProperties" &
        " already exists, not redeclaring")
when not declared(GetDisplayName):
  proc GetDisplayName*(displayID: DisplayID_1157628711): cstring {.cdecl,
      importc: "SDL_GetDisplayName".}
else:
  static :
    hint("Declaration of " & "GetDisplayName" &
        " already exists, not redeclaring")
when not declared(GetDisplayBounds):
  proc GetDisplayBounds*(displayID: DisplayID_1157628711; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetDisplayBounds".}
else:
  static :
    hint("Declaration of " & "GetDisplayBounds" &
        " already exists, not redeclaring")
when not declared(GetDisplayUsableBounds):
  proc GetDisplayUsableBounds*(displayID: DisplayID_1157628711; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetDisplayUsableBounds".}
else:
  static :
    hint("Declaration of " & "GetDisplayUsableBounds" &
        " already exists, not redeclaring")
when not declared(GetNaturalDisplayOrientation):
  proc GetNaturalDisplayOrientation*(displayID: DisplayID_1157628711): DisplayOrientation_1157628727 {.
      cdecl, importc: "SDL_GetNaturalDisplayOrientation".}
else:
  static :
    hint("Declaration of " & "GetNaturalDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(GetCurrentDisplayOrientation):
  proc GetCurrentDisplayOrientation*(displayID: DisplayID_1157628711): DisplayOrientation_1157628727 {.
      cdecl, importc: "SDL_GetCurrentDisplayOrientation".}
else:
  static :
    hint("Declaration of " & "GetCurrentDisplayOrientation" &
        " already exists, not redeclaring")
when not declared(GetDisplayContentScale):
  proc GetDisplayContentScale*(displayID: DisplayID_1157628711): cfloat {.cdecl,
      importc: "SDL_GetDisplayContentScale".}
else:
  static :
    hint("Declaration of " & "GetDisplayContentScale" &
        " already exists, not redeclaring")
when not declared(GetFullscreenDisplayModes):
  proc GetFullscreenDisplayModes*(displayID: DisplayID_1157628711;
                                  count: ptr cint): ptr ptr DisplayMode_1157628723 {.
      cdecl, importc: "SDL_GetFullscreenDisplayModes".}
else:
  static :
    hint("Declaration of " & "GetFullscreenDisplayModes" &
        " already exists, not redeclaring")
when not declared(GetClosestFullscreenDisplayMode):
  proc GetClosestFullscreenDisplayMode*(displayID: DisplayID_1157628711;
                                        w: cint; h: cint; refresh_rate: cfloat;
                                        include_high_density_modes: bool;
                                        closest: ptr DisplayMode_1157628723): bool {.
      cdecl, importc: "SDL_GetClosestFullscreenDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetClosestFullscreenDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetDesktopDisplayMode):
  proc GetDesktopDisplayMode*(displayID: DisplayID_1157628711): ptr DisplayMode_1157628723 {.
      cdecl, importc: "SDL_GetDesktopDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetDesktopDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetCurrentDisplayMode):
  proc GetCurrentDisplayMode*(displayID: DisplayID_1157628711): ptr DisplayMode_1157628723 {.
      cdecl, importc: "SDL_GetCurrentDisplayMode".}
else:
  static :
    hint("Declaration of " & "GetCurrentDisplayMode" &
        " already exists, not redeclaring")
when not declared(GetDisplayForPoint):
  proc GetDisplayForPoint*(point: ptr Point_1157628667): DisplayID_1157628711 {.
      cdecl, importc: "SDL_GetDisplayForPoint".}
else:
  static :
    hint("Declaration of " & "GetDisplayForPoint" &
        " already exists, not redeclaring")
when not declared(GetDisplayForRect):
  proc GetDisplayForRect*(rect: ptr Rect_1157628675): DisplayID_1157628711 {.
      cdecl, importc: "SDL_GetDisplayForRect".}
else:
  static :
    hint("Declaration of " & "GetDisplayForRect" &
        " already exists, not redeclaring")
when not declared(GetDisplayForWindow):
  proc GetDisplayForWindow*(window: ptr Window_1157628729): DisplayID_1157628711 {.
      cdecl, importc: "SDL_GetDisplayForWindow".}
else:
  static :
    hint("Declaration of " & "GetDisplayForWindow" &
        " already exists, not redeclaring")
when not declared(GetWindowPixelDensity):
  proc GetWindowPixelDensity*(window: ptr Window_1157628729): cfloat {.cdecl,
      importc: "SDL_GetWindowPixelDensity".}
else:
  static :
    hint("Declaration of " & "GetWindowPixelDensity" &
        " already exists, not redeclaring")
when not declared(GetWindowDisplayScale):
  proc GetWindowDisplayScale*(window: ptr Window_1157628729): cfloat {.cdecl,
      importc: "SDL_GetWindowDisplayScale".}
else:
  static :
    hint("Declaration of " & "GetWindowDisplayScale" &
        " already exists, not redeclaring")
when not declared(SetWindowFullscreenMode):
  proc SetWindowFullscreenMode*(window: ptr Window_1157628729;
                                mode: ptr DisplayMode_1157628723): bool {.cdecl,
      importc: "SDL_SetWindowFullscreenMode".}
else:
  static :
    hint("Declaration of " & "SetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(GetWindowFullscreenMode):
  proc GetWindowFullscreenMode*(window: ptr Window_1157628729): ptr DisplayMode_1157628723 {.
      cdecl, importc: "SDL_GetWindowFullscreenMode".}
else:
  static :
    hint("Declaration of " & "GetWindowFullscreenMode" &
        " already exists, not redeclaring")
when not declared(GetWindowICCProfile):
  proc GetWindowICCProfile*(window: ptr Window_1157628729; size: ptr csize_t): pointer {.
      cdecl, importc: "SDL_GetWindowICCProfile".}
else:
  static :
    hint("Declaration of " & "GetWindowICCProfile" &
        " already exists, not redeclaring")
when not declared(GetWindowPixelFormat):
  proc GetWindowPixelFormat*(window: ptr Window_1157628729): PixelFormat_1157628619 {.
      cdecl, importc: "SDL_GetWindowPixelFormat".}
else:
  static :
    hint("Declaration of " & "GetWindowPixelFormat" &
        " already exists, not redeclaring")
when not declared(GetWindows):
  proc GetWindows*(count: ptr cint): ptr ptr Window_1157628729 {.cdecl,
      importc: "SDL_GetWindows".}
else:
  static :
    hint("Declaration of " & "GetWindows" & " already exists, not redeclaring")
when not declared(CreateWindow):
  proc CreateWindow*(title: cstring; w: cint; h: cint; flags: WindowFlags_1157628731): ptr Window_1157628729 {.
      cdecl, importc: "SDL_CreateWindow".}
else:
  static :
    hint("Declaration of " & "CreateWindow" & " already exists, not redeclaring")
when not declared(CreatePopupWindow):
  proc CreatePopupWindow*(parent: ptr Window_1157628729; offset_x: cint;
                          offset_y: cint; w: cint; h: cint; flags: WindowFlags_1157628731): ptr Window_1157628729 {.
      cdecl, importc: "SDL_CreatePopupWindow".}
else:
  static :
    hint("Declaration of " & "CreatePopupWindow" &
        " already exists, not redeclaring")
when not declared(CreateWindowWithProperties):
  proc CreateWindowWithProperties*(props: PropertiesID_1157628517): ptr Window_1157628729 {.
      cdecl, importc: "SDL_CreateWindowWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateWindowWithProperties" &
        " already exists, not redeclaring")
when not declared(GetWindowID):
  proc GetWindowID*(window: ptr Window_1157628729): WindowID_1157628713 {.cdecl,
      importc: "SDL_GetWindowID".}
else:
  static :
    hint("Declaration of " & "GetWindowID" & " already exists, not redeclaring")
when not declared(GetWindowFromID):
  proc GetWindowFromID*(id: WindowID_1157628713): ptr Window_1157628729 {.cdecl,
      importc: "SDL_GetWindowFromID".}
else:
  static :
    hint("Declaration of " & "GetWindowFromID" &
        " already exists, not redeclaring")
when not declared(GetWindowParent):
  proc GetWindowParent*(window: ptr Window_1157628729): ptr Window_1157628729 {.
      cdecl, importc: "SDL_GetWindowParent".}
else:
  static :
    hint("Declaration of " & "GetWindowParent" &
        " already exists, not redeclaring")
when not declared(GetWindowProperties):
  proc GetWindowProperties*(window: ptr Window_1157628729): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetWindowProperties".}
else:
  static :
    hint("Declaration of " & "GetWindowProperties" &
        " already exists, not redeclaring")
when not declared(GetWindowFlags):
  proc GetWindowFlags*(window: ptr Window_1157628729): WindowFlags_1157628731 {.
      cdecl, importc: "SDL_GetWindowFlags".}
else:
  static :
    hint("Declaration of " & "GetWindowFlags" &
        " already exists, not redeclaring")
when not declared(SetWindowTitle):
  proc SetWindowTitle*(window: ptr Window_1157628729; title: cstring): bool {.
      cdecl, importc: "SDL_SetWindowTitle".}
else:
  static :
    hint("Declaration of " & "SetWindowTitle" &
        " already exists, not redeclaring")
when not declared(GetWindowTitle):
  proc GetWindowTitle*(window: ptr Window_1157628729): cstring {.cdecl,
      importc: "SDL_GetWindowTitle".}
else:
  static :
    hint("Declaration of " & "GetWindowTitle" &
        " already exists, not redeclaring")
when not declared(SetWindowIcon):
  proc SetWindowIcon*(window: ptr Window_1157628729; icon: ptr Surface_1157628693): bool {.
      cdecl, importc: "SDL_SetWindowIcon".}
else:
  static :
    hint("Declaration of " & "SetWindowIcon" &
        " already exists, not redeclaring")
when not declared(SetWindowPosition):
  proc SetWindowPosition*(window: ptr Window_1157628729; x: cint; y: cint): bool {.
      cdecl, importc: "SDL_SetWindowPosition".}
else:
  static :
    hint("Declaration of " & "SetWindowPosition" &
        " already exists, not redeclaring")
when not declared(GetWindowPosition):
  proc GetWindowPosition*(window: ptr Window_1157628729; x: ptr cint;
                          y: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowPosition".}
else:
  static :
    hint("Declaration of " & "GetWindowPosition" &
        " already exists, not redeclaring")
when not declared(SetWindowSize):
  proc SetWindowSize*(window: ptr Window_1157628729; w: cint; h: cint): bool {.
      cdecl, importc: "SDL_SetWindowSize".}
else:
  static :
    hint("Declaration of " & "SetWindowSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSize):
  proc GetWindowSize*(window: ptr Window_1157628729; w: ptr cint; h: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowSize".}
else:
  static :
    hint("Declaration of " & "GetWindowSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSafeArea):
  proc GetWindowSafeArea*(window: ptr Window_1157628729; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetWindowSafeArea".}
else:
  static :
    hint("Declaration of " & "GetWindowSafeArea" &
        " already exists, not redeclaring")
when not declared(SetWindowAspectRatio):
  proc SetWindowAspectRatio*(window: ptr Window_1157628729; min_aspect: cfloat;
                             max_aspect: cfloat): bool {.cdecl,
      importc: "SDL_SetWindowAspectRatio".}
else:
  static :
    hint("Declaration of " & "SetWindowAspectRatio" &
        " already exists, not redeclaring")
when not declared(GetWindowAspectRatio):
  proc GetWindowAspectRatio*(window: ptr Window_1157628729;
                             min_aspect: ptr cfloat; max_aspect: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetWindowAspectRatio".}
else:
  static :
    hint("Declaration of " & "GetWindowAspectRatio" &
        " already exists, not redeclaring")
when not declared(GetWindowBordersSize):
  proc GetWindowBordersSize*(window: ptr Window_1157628729; top: ptr cint;
                             left: ptr cint; bottom: ptr cint; right: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowBordersSize".}
else:
  static :
    hint("Declaration of " & "GetWindowBordersSize" &
        " already exists, not redeclaring")
when not declared(GetWindowSizeInPixels):
  proc GetWindowSizeInPixels*(window: ptr Window_1157628729; w: ptr cint;
                              h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowSizeInPixels".}
else:
  static :
    hint("Declaration of " & "GetWindowSizeInPixels" &
        " already exists, not redeclaring")
when not declared(SetWindowMinimumSize):
  proc SetWindowMinimumSize*(window: ptr Window_1157628729; min_w: cint;
                             min_h: cint): bool {.cdecl,
      importc: "SDL_SetWindowMinimumSize".}
else:
  static :
    hint("Declaration of " & "SetWindowMinimumSize" &
        " already exists, not redeclaring")
when not declared(GetWindowMinimumSize):
  proc GetWindowMinimumSize*(window: ptr Window_1157628729; w: ptr cint;
                             h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowMinimumSize".}
else:
  static :
    hint("Declaration of " & "GetWindowMinimumSize" &
        " already exists, not redeclaring")
when not declared(SetWindowMaximumSize):
  proc SetWindowMaximumSize*(window: ptr Window_1157628729; max_w: cint;
                             max_h: cint): bool {.cdecl,
      importc: "SDL_SetWindowMaximumSize".}
else:
  static :
    hint("Declaration of " & "SetWindowMaximumSize" &
        " already exists, not redeclaring")
when not declared(GetWindowMaximumSize):
  proc GetWindowMaximumSize*(window: ptr Window_1157628729; w: ptr cint;
                             h: ptr cint): bool {.cdecl,
      importc: "SDL_GetWindowMaximumSize".}
else:
  static :
    hint("Declaration of " & "GetWindowMaximumSize" &
        " already exists, not redeclaring")
when not declared(SetWindowBordered):
  proc SetWindowBordered*(window: ptr Window_1157628729; bordered: bool): bool {.
      cdecl, importc: "SDL_SetWindowBordered".}
else:
  static :
    hint("Declaration of " & "SetWindowBordered" &
        " already exists, not redeclaring")
when not declared(SetWindowResizable):
  proc SetWindowResizable*(window: ptr Window_1157628729; resizable: bool): bool {.
      cdecl, importc: "SDL_SetWindowResizable".}
else:
  static :
    hint("Declaration of " & "SetWindowResizable" &
        " already exists, not redeclaring")
when not declared(SetWindowAlwaysOnTop):
  proc SetWindowAlwaysOnTop*(window: ptr Window_1157628729; on_top: bool): bool {.
      cdecl, importc: "SDL_SetWindowAlwaysOnTop".}
else:
  static :
    hint("Declaration of " & "SetWindowAlwaysOnTop" &
        " already exists, not redeclaring")
when not declared(ShowWindow):
  proc ShowWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_ShowWindow".}
else:
  static :
    hint("Declaration of " & "ShowWindow" & " already exists, not redeclaring")
when not declared(HideWindow):
  proc HideWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_HideWindow".}
else:
  static :
    hint("Declaration of " & "HideWindow" & " already exists, not redeclaring")
when not declared(RaiseWindow):
  proc RaiseWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_RaiseWindow".}
else:
  static :
    hint("Declaration of " & "RaiseWindow" & " already exists, not redeclaring")
when not declared(MaximizeWindow):
  proc MaximizeWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_MaximizeWindow".}
else:
  static :
    hint("Declaration of " & "MaximizeWindow" &
        " already exists, not redeclaring")
when not declared(MinimizeWindow):
  proc MinimizeWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_MinimizeWindow".}
else:
  static :
    hint("Declaration of " & "MinimizeWindow" &
        " already exists, not redeclaring")
when not declared(RestoreWindow):
  proc RestoreWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_RestoreWindow".}
else:
  static :
    hint("Declaration of " & "RestoreWindow" &
        " already exists, not redeclaring")
when not declared(SetWindowFullscreen):
  proc SetWindowFullscreen*(window: ptr Window_1157628729; fullscreen: bool): bool {.
      cdecl, importc: "SDL_SetWindowFullscreen".}
else:
  static :
    hint("Declaration of " & "SetWindowFullscreen" &
        " already exists, not redeclaring")
when not declared(SyncWindow):
  proc SyncWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_SyncWindow".}
else:
  static :
    hint("Declaration of " & "SyncWindow" & " already exists, not redeclaring")
when not declared(WindowHasSurface):
  proc WindowHasSurface*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_WindowHasSurface".}
else:
  static :
    hint("Declaration of " & "WindowHasSurface" &
        " already exists, not redeclaring")
when not declared(GetWindowSurface):
  proc GetWindowSurface*(window: ptr Window_1157628729): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_GetWindowSurface".}
else:
  static :
    hint("Declaration of " & "GetWindowSurface" &
        " already exists, not redeclaring")
when not declared(SetWindowSurfaceVSync):
  proc SetWindowSurfaceVSync*(window: ptr Window_1157628729; vsync: cint): bool {.
      cdecl, importc: "SDL_SetWindowSurfaceVSync".}
else:
  static :
    hint("Declaration of " & "SetWindowSurfaceVSync" &
        " already exists, not redeclaring")
when not declared(GetWindowSurfaceVSync):
  proc GetWindowSurfaceVSync*(window: ptr Window_1157628729; vsync: ptr cint): bool {.
      cdecl, importc: "SDL_GetWindowSurfaceVSync".}
else:
  static :
    hint("Declaration of " & "GetWindowSurfaceVSync" &
        " already exists, not redeclaring")
when not declared(UpdateWindowSurface):
  proc UpdateWindowSurface*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_UpdateWindowSurface".}
else:
  static :
    hint("Declaration of " & "UpdateWindowSurface" &
        " already exists, not redeclaring")
when not declared(UpdateWindowSurfaceRects):
  proc UpdateWindowSurfaceRects*(window: ptr Window_1157628729; rects: ptr Rect_1157628675;
                                 numrects: cint): bool {.cdecl,
      importc: "SDL_UpdateWindowSurfaceRects".}
else:
  static :
    hint("Declaration of " & "UpdateWindowSurfaceRects" &
        " already exists, not redeclaring")
when not declared(DestroyWindowSurface):
  proc DestroyWindowSurface*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_DestroyWindowSurface".}
else:
  static :
    hint("Declaration of " & "DestroyWindowSurface" &
        " already exists, not redeclaring")
when not declared(SetWindowKeyboardGrab):
  proc SetWindowKeyboardGrab*(window: ptr Window_1157628729; grabbed: bool): bool {.
      cdecl, importc: "SDL_SetWindowKeyboardGrab".}
else:
  static :
    hint("Declaration of " & "SetWindowKeyboardGrab" &
        " already exists, not redeclaring")
when not declared(SetWindowMouseGrab):
  proc SetWindowMouseGrab*(window: ptr Window_1157628729; grabbed: bool): bool {.
      cdecl, importc: "SDL_SetWindowMouseGrab".}
else:
  static :
    hint("Declaration of " & "SetWindowMouseGrab" &
        " already exists, not redeclaring")
when not declared(GetWindowKeyboardGrab):
  proc GetWindowKeyboardGrab*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_GetWindowKeyboardGrab".}
else:
  static :
    hint("Declaration of " & "GetWindowKeyboardGrab" &
        " already exists, not redeclaring")
when not declared(GetWindowMouseGrab):
  proc GetWindowMouseGrab*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_GetWindowMouseGrab".}
else:
  static :
    hint("Declaration of " & "GetWindowMouseGrab" &
        " already exists, not redeclaring")
when not declared(GetGrabbedWindow):
  proc GetGrabbedWindow*(): ptr Window_1157628729 {.cdecl,
      importc: "SDL_GetGrabbedWindow".}
else:
  static :
    hint("Declaration of " & "GetGrabbedWindow" &
        " already exists, not redeclaring")
when not declared(SetWindowMouseRect):
  proc SetWindowMouseRect*(window: ptr Window_1157628729; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_SetWindowMouseRect".}
else:
  static :
    hint("Declaration of " & "SetWindowMouseRect" &
        " already exists, not redeclaring")
when not declared(GetWindowMouseRect):
  proc GetWindowMouseRect*(window: ptr Window_1157628729): ptr Rect_1157628675 {.
      cdecl, importc: "SDL_GetWindowMouseRect".}
else:
  static :
    hint("Declaration of " & "GetWindowMouseRect" &
        " already exists, not redeclaring")
when not declared(SetWindowOpacity):
  proc SetWindowOpacity*(window: ptr Window_1157628729; opacity: cfloat): bool {.
      cdecl, importc: "SDL_SetWindowOpacity".}
else:
  static :
    hint("Declaration of " & "SetWindowOpacity" &
        " already exists, not redeclaring")
when not declared(GetWindowOpacity):
  proc GetWindowOpacity*(window: ptr Window_1157628729): cfloat {.cdecl,
      importc: "SDL_GetWindowOpacity".}
else:
  static :
    hint("Declaration of " & "GetWindowOpacity" &
        " already exists, not redeclaring")
when not declared(SetWindowParent):
  proc SetWindowParent*(window: ptr Window_1157628729; parent: ptr Window_1157628729): bool {.
      cdecl, importc: "SDL_SetWindowParent".}
else:
  static :
    hint("Declaration of " & "SetWindowParent" &
        " already exists, not redeclaring")
when not declared(SetWindowModal):
  proc SetWindowModal*(window: ptr Window_1157628729; modal: bool): bool {.
      cdecl, importc: "SDL_SetWindowModal".}
else:
  static :
    hint("Declaration of " & "SetWindowModal" &
        " already exists, not redeclaring")
when not declared(SetWindowFocusable):
  proc SetWindowFocusable*(window: ptr Window_1157628729; focusable: bool): bool {.
      cdecl, importc: "SDL_SetWindowFocusable".}
else:
  static :
    hint("Declaration of " & "SetWindowFocusable" &
        " already exists, not redeclaring")
when not declared(ShowWindowSystemMenu):
  proc ShowWindowSystemMenu*(window: ptr Window_1157628729; x: cint; y: cint): bool {.
      cdecl, importc: "SDL_ShowWindowSystemMenu".}
else:
  static :
    hint("Declaration of " & "ShowWindowSystemMenu" &
        " already exists, not redeclaring")
when not declared(SetWindowHitTest):
  proc SetWindowHitTest*(window: ptr Window_1157628729; callback: HitTest_1157628771;
                         callback_data: pointer): bool {.cdecl,
      importc: "SDL_SetWindowHitTest".}
else:
  static :
    hint("Declaration of " & "SetWindowHitTest" &
        " already exists, not redeclaring")
when not declared(SetWindowShape):
  proc SetWindowShape*(window: ptr Window_1157628729; shape: ptr Surface_1157628693): bool {.
      cdecl, importc: "SDL_SetWindowShape".}
else:
  static :
    hint("Declaration of " & "SetWindowShape" &
        " already exists, not redeclaring")
when not declared(FlashWindow):
  proc FlashWindow*(window: ptr Window_1157628729; operation: FlashOperation_1157628735): bool {.
      cdecl, importc: "SDL_FlashWindow".}
else:
  static :
    hint("Declaration of " & "FlashWindow" & " already exists, not redeclaring")
when not declared(DestroyWindow):
  proc DestroyWindow*(window: ptr Window_1157628729): void {.cdecl,
      importc: "SDL_DestroyWindow".}
else:
  static :
    hint("Declaration of " & "DestroyWindow" &
        " already exists, not redeclaring")
when not declared(ScreenSaverEnabled):
  proc ScreenSaverEnabled*(): bool {.cdecl, importc: "SDL_ScreenSaverEnabled".}
else:
  static :
    hint("Declaration of " & "ScreenSaverEnabled" &
        " already exists, not redeclaring")
when not declared(EnableScreenSaver):
  proc EnableScreenSaver*(): bool {.cdecl, importc: "SDL_EnableScreenSaver".}
else:
  static :
    hint("Declaration of " & "EnableScreenSaver" &
        " already exists, not redeclaring")
when not declared(DisableScreenSaver):
  proc DisableScreenSaver*(): bool {.cdecl, importc: "SDL_DisableScreenSaver".}
else:
  static :
    hint("Declaration of " & "DisableScreenSaver" &
        " already exists, not redeclaring")
when not declared(GL_LoadLibrary):
  proc GL_LoadLibrary*(path: cstring): bool {.cdecl,
      importc: "SDL_GL_LoadLibrary".}
else:
  static :
    hint("Declaration of " & "GL_LoadLibrary" &
        " already exists, not redeclaring")
when not declared(GL_GetProcAddress):
  proc GL_GetProcAddress*(proc_arg: cstring): FunctionPointer_1157628479 {.
      cdecl, importc: "SDL_GL_GetProcAddress".}
else:
  static :
    hint("Declaration of " & "GL_GetProcAddress" &
        " already exists, not redeclaring")
when not declared(EGL_GetProcAddress):
  proc EGL_GetProcAddress*(proc_arg: cstring): FunctionPointer_1157628479 {.
      cdecl, importc: "SDL_EGL_GetProcAddress".}
else:
  static :
    hint("Declaration of " & "EGL_GetProcAddress" &
        " already exists, not redeclaring")
when not declared(GL_UnloadLibrary):
  proc GL_UnloadLibrary*(): void {.cdecl, importc: "SDL_GL_UnloadLibrary".}
else:
  static :
    hint("Declaration of " & "GL_UnloadLibrary" &
        " already exists, not redeclaring")
when not declared(GL_ExtensionSupported):
  proc GL_ExtensionSupported*(extension: cstring): bool {.cdecl,
      importc: "SDL_GL_ExtensionSupported".}
else:
  static :
    hint("Declaration of " & "GL_ExtensionSupported" &
        " already exists, not redeclaring")
when not declared(GL_ResetAttributes):
  proc GL_ResetAttributes*(): void {.cdecl, importc: "SDL_GL_ResetAttributes".}
else:
  static :
    hint("Declaration of " & "GL_ResetAttributes" &
        " already exists, not redeclaring")
when not declared(GL_SetAttribute):
  proc GL_SetAttribute*(attr: GLAttr_typedef_1157628757; value: cint): bool {.
      cdecl, importc: "SDL_GL_SetAttribute".}
else:
  static :
    hint("Declaration of " & "GL_SetAttribute" &
        " already exists, not redeclaring")
when not declared(GL_GetAttribute):
  proc GL_GetAttribute*(attr: GLAttr_typedef_1157628757; value: ptr cint): bool {.
      cdecl, importc: "SDL_GL_GetAttribute".}
else:
  static :
    hint("Declaration of " & "GL_GetAttribute" &
        " already exists, not redeclaring")
when not declared(GL_CreateContext):
  proc GL_CreateContext*(window: ptr Window_1157628729): GLContext_1157628737 {.
      cdecl, importc: "SDL_GL_CreateContext".}
else:
  static :
    hint("Declaration of " & "GL_CreateContext" &
        " already exists, not redeclaring")
when not declared(GL_MakeCurrent):
  proc GL_MakeCurrent*(window: ptr Window_1157628729; context: GLContext_1157628737): bool {.
      cdecl, importc: "SDL_GL_MakeCurrent".}
else:
  static :
    hint("Declaration of " & "GL_MakeCurrent" &
        " already exists, not redeclaring")
when not declared(GL_GetCurrentWindow):
  proc GL_GetCurrentWindow*(): ptr Window_1157628729 {.cdecl,
      importc: "SDL_GL_GetCurrentWindow".}
else:
  static :
    hint("Declaration of " & "GL_GetCurrentWindow" &
        " already exists, not redeclaring")
when not declared(GL_GetCurrentContext):
  proc GL_GetCurrentContext*(): GLContext_1157628737 {.cdecl,
      importc: "SDL_GL_GetCurrentContext".}
else:
  static :
    hint("Declaration of " & "GL_GetCurrentContext" &
        " already exists, not redeclaring")
when not declared(EGL_GetCurrentDisplay):
  proc EGL_GetCurrentDisplay*(): EGLDisplay_1157628739 {.cdecl,
      importc: "SDL_EGL_GetCurrentDisplay".}
else:
  static :
    hint("Declaration of " & "EGL_GetCurrentDisplay" &
        " already exists, not redeclaring")
when not declared(EGL_GetCurrentConfig):
  proc EGL_GetCurrentConfig*(): EGLConfig_1157628741 {.cdecl,
      importc: "SDL_EGL_GetCurrentConfig".}
else:
  static :
    hint("Declaration of " & "EGL_GetCurrentConfig" &
        " already exists, not redeclaring")
when not declared(EGL_GetWindowSurface):
  proc EGL_GetWindowSurface*(window: ptr Window_1157628729): EGLSurface_1157628743 {.
      cdecl, importc: "SDL_EGL_GetWindowSurface".}
else:
  static :
    hint("Declaration of " & "EGL_GetWindowSurface" &
        " already exists, not redeclaring")
when not declared(EGL_SetAttributeCallbacks):
  proc EGL_SetAttributeCallbacks*(platformAttribCallback: EGLAttribArrayCallback_1157628751;
                                  surfaceAttribCallback: EGLIntArrayCallback_1157628753;
                                  contextAttribCallback: EGLIntArrayCallback_1157628753;
                                  userdata: pointer): void {.cdecl,
      importc: "SDL_EGL_SetAttributeCallbacks".}
else:
  static :
    hint("Declaration of " & "EGL_SetAttributeCallbacks" &
        " already exists, not redeclaring")
when not declared(GL_SetSwapInterval):
  proc GL_SetSwapInterval*(interval: cint): bool {.cdecl,
      importc: "SDL_GL_SetSwapInterval".}
else:
  static :
    hint("Declaration of " & "GL_SetSwapInterval" &
        " already exists, not redeclaring")
when not declared(GL_GetSwapInterval):
  proc GL_GetSwapInterval*(interval: ptr cint): bool {.cdecl,
      importc: "SDL_GL_GetSwapInterval".}
else:
  static :
    hint("Declaration of " & "GL_GetSwapInterval" &
        " already exists, not redeclaring")
when not declared(GL_SwapWindow):
  proc GL_SwapWindow*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_GL_SwapWindow".}
else:
  static :
    hint("Declaration of " & "GL_SwapWindow" &
        " already exists, not redeclaring")
when not declared(GL_DestroyContext):
  proc GL_DestroyContext*(context: GLContext_1157628737): bool {.cdecl,
      importc: "SDL_GL_DestroyContext".}
else:
  static :
    hint("Declaration of " & "GL_DestroyContext" &
        " already exists, not redeclaring")
when not declared(ShowOpenFileDialog):
  proc ShowOpenFileDialog*(callback: DialogFileCallback_1157628777;
                           userdata: pointer; window: ptr Window_1157628729;
                           filters: ptr DialogFileFilter_1157628775;
                           nfilters: cint; default_location: cstring;
                           allow_many: bool): void {.cdecl,
      importc: "SDL_ShowOpenFileDialog".}
else:
  static :
    hint("Declaration of " & "ShowOpenFileDialog" &
        " already exists, not redeclaring")
when not declared(ShowSaveFileDialog):
  proc ShowSaveFileDialog*(callback: DialogFileCallback_1157628777;
                           userdata: pointer; window: ptr Window_1157628729;
                           filters: ptr DialogFileFilter_1157628775;
                           nfilters: cint; default_location: cstring): void {.
      cdecl, importc: "SDL_ShowSaveFileDialog".}
else:
  static :
    hint("Declaration of " & "ShowSaveFileDialog" &
        " already exists, not redeclaring")
when not declared(ShowOpenFolderDialog):
  proc ShowOpenFolderDialog*(callback: DialogFileCallback_1157628777;
                             userdata: pointer; window: ptr Window_1157628729;
                             default_location: cstring; allow_many: bool): void {.
      cdecl, importc: "SDL_ShowOpenFolderDialog".}
else:
  static :
    hint("Declaration of " & "ShowOpenFolderDialog" &
        " already exists, not redeclaring")
when not declared(ShowFileDialogWithProperties):
  proc ShowFileDialogWithProperties*(type_arg: FileDialogType_1157628781;
                                     callback: DialogFileCallback_1157628777;
                                     userdata: pointer; props: PropertiesID_1157628517): void {.
      cdecl, importc: "SDL_ShowFileDialogWithProperties".}
else:
  static :
    hint("Declaration of " & "ShowFileDialogWithProperties" &
        " already exists, not redeclaring")
when not declared(GUIDToString):
  proc GUIDToString*(guid: GUID_1157628785; pszGUID: cstring; cbGUID: cint): void {.
      cdecl, importc: "SDL_GUIDToString".}
else:
  static :
    hint("Declaration of " & "GUIDToString" & " already exists, not redeclaring")
when not declared(StringToGUID):
  proc StringToGUID*(pchGUID: cstring): GUID_1157628785 {.cdecl,
      importc: "SDL_StringToGUID".}
else:
  static :
    hint("Declaration of " & "StringToGUID" & " already exists, not redeclaring")
when not declared(GetPowerInfo):
  proc GetPowerInfo*(seconds: ptr cint; percent: ptr cint): PowerState_1157628789 {.
      cdecl, importc: "SDL_GetPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetPowerInfo" & " already exists, not redeclaring")
when not declared(GetSensors):
  proc GetSensors*(count: ptr cint): ptr SensorID_1157628793 {.cdecl,
      importc: "SDL_GetSensors".}
else:
  static :
    hint("Declaration of " & "GetSensors" & " already exists, not redeclaring")
when not declared(GetSensorNameForID):
  proc GetSensorNameForID*(instance_id: SensorID_1157628793): cstring {.cdecl,
      importc: "SDL_GetSensorNameForID".}
else:
  static :
    hint("Declaration of " & "GetSensorNameForID" &
        " already exists, not redeclaring")
when not declared(GetSensorTypeForID):
  proc GetSensorTypeForID*(instance_id: SensorID_1157628793): SensorType_1157628797 {.
      cdecl, importc: "SDL_GetSensorTypeForID".}
else:
  static :
    hint("Declaration of " & "GetSensorTypeForID" &
        " already exists, not redeclaring")
when not declared(GetSensorNonPortableTypeForID):
  proc GetSensorNonPortableTypeForID*(instance_id: SensorID_1157628793): cint {.
      cdecl, importc: "SDL_GetSensorNonPortableTypeForID".}
else:
  static :
    hint("Declaration of " & "GetSensorNonPortableTypeForID" &
        " already exists, not redeclaring")
when not declared(OpenSensor):
  proc OpenSensor*(instance_id: SensorID_1157628793): ptr Sensor_1157628791 {.
      cdecl, importc: "SDL_OpenSensor".}
else:
  static :
    hint("Declaration of " & "OpenSensor" & " already exists, not redeclaring")
when not declared(GetSensorFromID):
  proc GetSensorFromID*(instance_id: SensorID_1157628793): ptr Sensor_1157628791 {.
      cdecl, importc: "SDL_GetSensorFromID".}
else:
  static :
    hint("Declaration of " & "GetSensorFromID" &
        " already exists, not redeclaring")
when not declared(GetSensorProperties):
  proc GetSensorProperties*(sensor: ptr Sensor_1157628791): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetSensorProperties".}
else:
  static :
    hint("Declaration of " & "GetSensorProperties" &
        " already exists, not redeclaring")
when not declared(GetSensorName):
  proc GetSensorName*(sensor: ptr Sensor_1157628791): cstring {.cdecl,
      importc: "SDL_GetSensorName".}
else:
  static :
    hint("Declaration of " & "GetSensorName" &
        " already exists, not redeclaring")
when not declared(GetSensorType):
  proc GetSensorType*(sensor: ptr Sensor_1157628791): SensorType_1157628797 {.
      cdecl, importc: "SDL_GetSensorType".}
else:
  static :
    hint("Declaration of " & "GetSensorType" &
        " already exists, not redeclaring")
when not declared(GetSensorNonPortableType):
  proc GetSensorNonPortableType*(sensor: ptr Sensor_1157628791): cint {.cdecl,
      importc: "SDL_GetSensorNonPortableType".}
else:
  static :
    hint("Declaration of " & "GetSensorNonPortableType" &
        " already exists, not redeclaring")
when not declared(GetSensorID):
  proc GetSensorID*(sensor: ptr Sensor_1157628791): SensorID_1157628793 {.cdecl,
      importc: "SDL_GetSensorID".}
else:
  static :
    hint("Declaration of " & "GetSensorID" & " already exists, not redeclaring")
when not declared(GetSensorData):
  proc GetSensorData*(sensor: ptr Sensor_1157628791; data: ptr cfloat;
                      num_values: cint): bool {.cdecl,
      importc: "SDL_GetSensorData".}
else:
  static :
    hint("Declaration of " & "GetSensorData" &
        " already exists, not redeclaring")
when not declared(CloseSensor):
  proc CloseSensor*(sensor: ptr Sensor_1157628791): void {.cdecl,
      importc: "SDL_CloseSensor".}
else:
  static :
    hint("Declaration of " & "CloseSensor" & " already exists, not redeclaring")
when not declared(UpdateSensors):
  proc UpdateSensors*(): void {.cdecl, importc: "SDL_UpdateSensors".}
else:
  static :
    hint("Declaration of " & "UpdateSensors" &
        " already exists, not redeclaring")
when not declared(LockJoysticks):
  proc LockJoysticks*(): void {.cdecl, importc: "SDL_LockJoysticks".}
else:
  static :
    hint("Declaration of " & "LockJoysticks" &
        " already exists, not redeclaring")
when not declared(UnlockJoysticks):
  proc UnlockJoysticks*(): void {.cdecl, importc: "SDL_UnlockJoysticks".}
else:
  static :
    hint("Declaration of " & "UnlockJoysticks" &
        " already exists, not redeclaring")
when not declared(HasJoystick):
  proc HasJoystick*(): bool {.cdecl, importc: "SDL_HasJoystick".}
else:
  static :
    hint("Declaration of " & "HasJoystick" & " already exists, not redeclaring")
when not declared(GetJoysticks):
  proc GetJoysticks*(count: ptr cint): ptr JoystickID_1157628801 {.cdecl,
      importc: "SDL_GetJoysticks".}
else:
  static :
    hint("Declaration of " & "GetJoysticks" & " already exists, not redeclaring")
when not declared(GetJoystickNameForID):
  proc GetJoystickNameForID*(instance_id: JoystickID_1157628801): cstring {.
      cdecl, importc: "SDL_GetJoystickNameForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickNameForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickPathForID):
  proc GetJoystickPathForID*(instance_id: JoystickID_1157628801): cstring {.
      cdecl, importc: "SDL_GetJoystickPathForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickPathForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickPlayerIndexForID):
  proc GetJoystickPlayerIndexForID*(instance_id: JoystickID_1157628801): cint {.
      cdecl, importc: "SDL_GetJoystickPlayerIndexForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickPlayerIndexForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUIDForID):
  proc GetJoystickGUIDForID*(instance_id: JoystickID_1157628801): GUID_1157628785 {.
      cdecl, importc: "SDL_GetJoystickGUIDForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUIDForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickVendorForID):
  proc GetJoystickVendorForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickVendorForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickVendorForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductForID):
  proc GetJoystickProductForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickProductForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductVersionForID):
  proc GetJoystickProductVersionForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickProductVersionForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductVersionForID" &
        " already exists, not redeclaring")
when not declared(GetJoystickTypeForID):
  proc GetJoystickTypeForID*(instance_id: JoystickID_1157628801): JoystickType_1157628805 {.
      cdecl, importc: "SDL_GetJoystickTypeForID".}
else:
  static :
    hint("Declaration of " & "GetJoystickTypeForID" &
        " already exists, not redeclaring")
when not declared(OpenJoystick):
  proc OpenJoystick*(instance_id: JoystickID_1157628801): ptr Joystick_1157628799 {.
      cdecl, importc: "SDL_OpenJoystick".}
else:
  static :
    hint("Declaration of " & "OpenJoystick" & " already exists, not redeclaring")
when not declared(GetJoystickFromID):
  proc GetJoystickFromID*(instance_id: JoystickID_1157628801): ptr Joystick_1157628799 {.
      cdecl, importc: "SDL_GetJoystickFromID".}
else:
  static :
    hint("Declaration of " & "GetJoystickFromID" &
        " already exists, not redeclaring")
when not declared(GetJoystickFromPlayerIndex):
  proc GetJoystickFromPlayerIndex*(player_index: cint): ptr Joystick_1157628799 {.
      cdecl, importc: "SDL_GetJoystickFromPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetJoystickFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(AttachVirtualJoystick):
  proc AttachVirtualJoystick*(desc: ptr VirtualJoystickDesc_1157628821): JoystickID_1157628801 {.
      cdecl, importc: "SDL_AttachVirtualJoystick".}
else:
  static :
    hint("Declaration of " & "AttachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(DetachVirtualJoystick):
  proc DetachVirtualJoystick*(instance_id: JoystickID_1157628801): bool {.cdecl,
      importc: "SDL_DetachVirtualJoystick".}
else:
  static :
    hint("Declaration of " & "DetachVirtualJoystick" &
        " already exists, not redeclaring")
when not declared(IsJoystickVirtual):
  proc IsJoystickVirtual*(instance_id: JoystickID_1157628801): bool {.cdecl,
      importc: "SDL_IsJoystickVirtual".}
else:
  static :
    hint("Declaration of " & "IsJoystickVirtual" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualAxis):
  proc SetJoystickVirtualAxis*(joystick: ptr Joystick_1157628799; axis: cint;
                               value: Sint16_1157628439): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualAxis".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualAxis" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualBall):
  proc SetJoystickVirtualBall*(joystick: ptr Joystick_1157628799; ball: cint;
                               xrel: Sint16_1157628439; yrel: Sint16_1157628439): bool {.
      cdecl, importc: "SDL_SetJoystickVirtualBall".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualBall" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualButton):
  proc SetJoystickVirtualButton*(joystick: ptr Joystick_1157628799;
                                 button: cint; down: bool): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualButton".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualButton" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualHat):
  proc SetJoystickVirtualHat*(joystick: ptr Joystick_1157628799; hat: cint;
                              value: Uint8_1157628437): bool {.cdecl,
      importc: "SDL_SetJoystickVirtualHat".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualHat" &
        " already exists, not redeclaring")
when not declared(SetJoystickVirtualTouchpad):
  proc SetJoystickVirtualTouchpad*(joystick: ptr Joystick_1157628799;
                                   touchpad: cint; finger: cint; down: bool;
                                   x: cfloat; y: cfloat; pressure: cfloat): bool {.
      cdecl, importc: "SDL_SetJoystickVirtualTouchpad".}
else:
  static :
    hint("Declaration of " & "SetJoystickVirtualTouchpad" &
        " already exists, not redeclaring")
when not declared(SendJoystickVirtualSensorData):
  proc SendJoystickVirtualSensorData*(joystick: ptr Joystick_1157628799;
                                      type_arg: SensorType_1157628797;
                                      sensor_timestamp: Uint64_1157628449;
                                      data: ptr cfloat; num_values: cint): bool {.
      cdecl, importc: "SDL_SendJoystickVirtualSensorData".}
else:
  static :
    hint("Declaration of " & "SendJoystickVirtualSensorData" &
        " already exists, not redeclaring")
when not declared(GetJoystickProperties):
  proc GetJoystickProperties*(joystick: ptr Joystick_1157628799): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetJoystickProperties".}
else:
  static :
    hint("Declaration of " & "GetJoystickProperties" &
        " already exists, not redeclaring")
when not declared(GetJoystickName):
  proc GetJoystickName*(joystick: ptr Joystick_1157628799): cstring {.cdecl,
      importc: "SDL_GetJoystickName".}
else:
  static :
    hint("Declaration of " & "GetJoystickName" &
        " already exists, not redeclaring")
when not declared(GetJoystickPath):
  proc GetJoystickPath*(joystick: ptr Joystick_1157628799): cstring {.cdecl,
      importc: "SDL_GetJoystickPath".}
else:
  static :
    hint("Declaration of " & "GetJoystickPath" &
        " already exists, not redeclaring")
when not declared(GetJoystickPlayerIndex):
  proc GetJoystickPlayerIndex*(joystick: ptr Joystick_1157628799): cint {.cdecl,
      importc: "SDL_GetJoystickPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(SetJoystickPlayerIndex):
  proc SetJoystickPlayerIndex*(joystick: ptr Joystick_1157628799;
                               player_index: cint): bool {.cdecl,
      importc: "SDL_SetJoystickPlayerIndex".}
else:
  static :
    hint("Declaration of " & "SetJoystickPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUID):
  proc GetJoystickGUID*(joystick: ptr Joystick_1157628799): GUID_1157628785 {.
      cdecl, importc: "SDL_GetJoystickGUID".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUID" &
        " already exists, not redeclaring")
when not declared(GetJoystickVendor):
  proc GetJoystickVendor*(joystick: ptr Joystick_1157628799): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickVendor".}
else:
  static :
    hint("Declaration of " & "GetJoystickVendor" &
        " already exists, not redeclaring")
when not declared(GetJoystickProduct):
  proc GetJoystickProduct*(joystick: ptr Joystick_1157628799): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickProduct".}
else:
  static :
    hint("Declaration of " & "GetJoystickProduct" &
        " already exists, not redeclaring")
when not declared(GetJoystickProductVersion):
  proc GetJoystickProductVersion*(joystick: ptr Joystick_1157628799): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickProductVersion".}
else:
  static :
    hint("Declaration of " & "GetJoystickProductVersion" &
        " already exists, not redeclaring")
when not declared(GetJoystickFirmwareVersion):
  proc GetJoystickFirmwareVersion*(joystick: ptr Joystick_1157628799): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetJoystickFirmwareVersion".}
else:
  static :
    hint("Declaration of " & "GetJoystickFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(GetJoystickSerial):
  proc GetJoystickSerial*(joystick: ptr Joystick_1157628799): cstring {.cdecl,
      importc: "SDL_GetJoystickSerial".}
else:
  static :
    hint("Declaration of " & "GetJoystickSerial" &
        " already exists, not redeclaring")
when not declared(GetJoystickType):
  proc GetJoystickType*(joystick: ptr Joystick_1157628799): JoystickType_1157628805 {.
      cdecl, importc: "SDL_GetJoystickType".}
else:
  static :
    hint("Declaration of " & "GetJoystickType" &
        " already exists, not redeclaring")
when not declared(GetJoystickGUIDInfo):
  proc GetJoystickGUIDInfo*(guid: GUID_1157628785; vendor: ptr Uint16_1157628441;
                            product: ptr Uint16_1157628441; version: ptr Uint16_1157628441;
                            crc16: ptr Uint16_1157628441): void {.cdecl,
      importc: "SDL_GetJoystickGUIDInfo".}
else:
  static :
    hint("Declaration of " & "GetJoystickGUIDInfo" &
        " already exists, not redeclaring")
when not declared(JoystickConnected):
  proc JoystickConnected*(joystick: ptr Joystick_1157628799): bool {.cdecl,
      importc: "SDL_JoystickConnected".}
else:
  static :
    hint("Declaration of " & "JoystickConnected" &
        " already exists, not redeclaring")
when not declared(GetJoystickID):
  proc GetJoystickID*(joystick: ptr Joystick_1157628799): JoystickID_1157628801 {.
      cdecl, importc: "SDL_GetJoystickID".}
else:
  static :
    hint("Declaration of " & "GetJoystickID" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickAxes):
  proc GetNumJoystickAxes*(joystick: ptr Joystick_1157628799): cint {.cdecl,
      importc: "SDL_GetNumJoystickAxes".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickAxes" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickBalls):
  proc GetNumJoystickBalls*(joystick: ptr Joystick_1157628799): cint {.cdecl,
      importc: "SDL_GetNumJoystickBalls".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickBalls" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickHats):
  proc GetNumJoystickHats*(joystick: ptr Joystick_1157628799): cint {.cdecl,
      importc: "SDL_GetNumJoystickHats".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickHats" &
        " already exists, not redeclaring")
when not declared(GetNumJoystickButtons):
  proc GetNumJoystickButtons*(joystick: ptr Joystick_1157628799): cint {.cdecl,
      importc: "SDL_GetNumJoystickButtons".}
else:
  static :
    hint("Declaration of " & "GetNumJoystickButtons" &
        " already exists, not redeclaring")
when not declared(SetJoystickEventsEnabled):
  proc SetJoystickEventsEnabled*(enabled: bool): void {.cdecl,
      importc: "SDL_SetJoystickEventsEnabled".}
else:
  static :
    hint("Declaration of " & "SetJoystickEventsEnabled" &
        " already exists, not redeclaring")
when not declared(JoystickEventsEnabled):
  proc JoystickEventsEnabled*(): bool {.cdecl,
                                        importc: "SDL_JoystickEventsEnabled".}
else:
  static :
    hint("Declaration of " & "JoystickEventsEnabled" &
        " already exists, not redeclaring")
when not declared(UpdateJoysticks):
  proc UpdateJoysticks*(): void {.cdecl, importc: "SDL_UpdateJoysticks".}
else:
  static :
    hint("Declaration of " & "UpdateJoysticks" &
        " already exists, not redeclaring")
when not declared(GetJoystickAxis):
  proc GetJoystickAxis*(joystick: ptr Joystick_1157628799; axis: cint): Sint16_1157628439 {.
      cdecl, importc: "SDL_GetJoystickAxis".}
else:
  static :
    hint("Declaration of " & "GetJoystickAxis" &
        " already exists, not redeclaring")
when not declared(GetJoystickAxisInitialState):
  proc GetJoystickAxisInitialState*(joystick: ptr Joystick_1157628799;
                                    axis: cint; state: ptr Sint16_1157628439): bool {.
      cdecl, importc: "SDL_GetJoystickAxisInitialState".}
else:
  static :
    hint("Declaration of " & "GetJoystickAxisInitialState" &
        " already exists, not redeclaring")
when not declared(GetJoystickBall):
  proc GetJoystickBall*(joystick: ptr Joystick_1157628799; ball: cint;
                        dx: ptr cint; dy: ptr cint): bool {.cdecl,
      importc: "SDL_GetJoystickBall".}
else:
  static :
    hint("Declaration of " & "GetJoystickBall" &
        " already exists, not redeclaring")
when not declared(GetJoystickHat):
  proc GetJoystickHat*(joystick: ptr Joystick_1157628799; hat: cint): Uint8_1157628437 {.
      cdecl, importc: "SDL_GetJoystickHat".}
else:
  static :
    hint("Declaration of " & "GetJoystickHat" &
        " already exists, not redeclaring")
when not declared(GetJoystickButton):
  proc GetJoystickButton*(joystick: ptr Joystick_1157628799; button: cint): bool {.
      cdecl, importc: "SDL_GetJoystickButton".}
else:
  static :
    hint("Declaration of " & "GetJoystickButton" &
        " already exists, not redeclaring")
when not declared(RumbleJoystick):
  proc RumbleJoystick*(joystick: ptr Joystick_1157628799;
                       low_frequency_rumble: Uint16_1157628441;
                       high_frequency_rumble: Uint16_1157628441;
                       duration_ms: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_RumbleJoystick".}
else:
  static :
    hint("Declaration of " & "RumbleJoystick" &
        " already exists, not redeclaring")
when not declared(RumbleJoystickTriggers):
  proc RumbleJoystickTriggers*(joystick: ptr Joystick_1157628799;
                               left_rumble: Uint16_1157628441;
                               right_rumble: Uint16_1157628441;
                               duration_ms: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_RumbleJoystickTriggers".}
else:
  static :
    hint("Declaration of " & "RumbleJoystickTriggers" &
        " already exists, not redeclaring")
when not declared(SetJoystickLED):
  proc SetJoystickLED*(joystick: ptr Joystick_1157628799; red: Uint8_1157628437;
                       green: Uint8_1157628437; blue: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetJoystickLED".}
else:
  static :
    hint("Declaration of " & "SetJoystickLED" &
        " already exists, not redeclaring")
when not declared(SendJoystickEffect):
  proc SendJoystickEffect*(joystick: ptr Joystick_1157628799; data: pointer;
                           size: cint): bool {.cdecl,
      importc: "SDL_SendJoystickEffect".}
else:
  static :
    hint("Declaration of " & "SendJoystickEffect" &
        " already exists, not redeclaring")
when not declared(CloseJoystick):
  proc CloseJoystick*(joystick: ptr Joystick_1157628799): void {.cdecl,
      importc: "SDL_CloseJoystick".}
else:
  static :
    hint("Declaration of " & "CloseJoystick" &
        " already exists, not redeclaring")
when not declared(GetJoystickConnectionState):
  proc GetJoystickConnectionState*(joystick: ptr Joystick_1157628799): JoystickConnectionState_1157628809 {.
      cdecl, importc: "SDL_GetJoystickConnectionState".}
else:
  static :
    hint("Declaration of " & "GetJoystickConnectionState" &
        " already exists, not redeclaring")
when not declared(GetJoystickPowerInfo):
  proc GetJoystickPowerInfo*(joystick: ptr Joystick_1157628799;
                             percent: ptr cint): PowerState_1157628789 {.cdecl,
      importc: "SDL_GetJoystickPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetJoystickPowerInfo" &
        " already exists, not redeclaring")
when not declared(AddGamepadMapping):
  proc AddGamepadMapping*(mapping: cstring): cint {.cdecl,
      importc: "SDL_AddGamepadMapping".}
else:
  static :
    hint("Declaration of " & "AddGamepadMapping" &
        " already exists, not redeclaring")
when not declared(AddGamepadMappingsFromIO):
  proc AddGamepadMappingsFromIO*(src: ptr IOStream_1157628569; closeio: bool): cint {.
      cdecl, importc: "SDL_AddGamepadMappingsFromIO".}
else:
  static :
    hint("Declaration of " & "AddGamepadMappingsFromIO" &
        " already exists, not redeclaring")
when not declared(AddGamepadMappingsFromFile):
  proc AddGamepadMappingsFromFile*(file: cstring): cint {.cdecl,
      importc: "SDL_AddGamepadMappingsFromFile".}
else:
  static :
    hint("Declaration of " & "AddGamepadMappingsFromFile" &
        " already exists, not redeclaring")
when not declared(ReloadGamepadMappings):
  proc ReloadGamepadMappings*(): bool {.cdecl,
                                        importc: "SDL_ReloadGamepadMappings".}
else:
  static :
    hint("Declaration of " & "ReloadGamepadMappings" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappings):
  proc GetGamepadMappings*(count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GetGamepadMappings".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappings" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappingForGUID):
  proc GetGamepadMappingForGUID*(guid: GUID_1157628785): cstring {.cdecl,
      importc: "SDL_GetGamepadMappingForGUID".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappingForGUID" &
        " already exists, not redeclaring")
when not declared(GetGamepadMapping):
  proc GetGamepadMapping*(gamepad: ptr Gamepad_1157628823): cstring {.cdecl,
      importc: "SDL_GetGamepadMapping".}
else:
  static :
    hint("Declaration of " & "GetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(SetGamepadMapping):
  proc SetGamepadMapping*(instance_id: JoystickID_1157628801; mapping: cstring): bool {.
      cdecl, importc: "SDL_SetGamepadMapping".}
else:
  static :
    hint("Declaration of " & "SetGamepadMapping" &
        " already exists, not redeclaring")
when not declared(HasGamepad):
  proc HasGamepad*(): bool {.cdecl, importc: "SDL_HasGamepad".}
else:
  static :
    hint("Declaration of " & "HasGamepad" & " already exists, not redeclaring")
when not declared(GetGamepads):
  proc GetGamepads*(count: ptr cint): ptr JoystickID_1157628801 {.cdecl,
      importc: "SDL_GetGamepads".}
else:
  static :
    hint("Declaration of " & "GetGamepads" & " already exists, not redeclaring")
when not declared(IsGamepad):
  proc IsGamepad*(instance_id: JoystickID_1157628801): bool {.cdecl,
      importc: "SDL_IsGamepad".}
else:
  static :
    hint("Declaration of " & "IsGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadNameForID):
  proc GetGamepadNameForID*(instance_id: JoystickID_1157628801): cstring {.
      cdecl, importc: "SDL_GetGamepadNameForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadNameForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadPathForID):
  proc GetGamepadPathForID*(instance_id: JoystickID_1157628801): cstring {.
      cdecl, importc: "SDL_GetGamepadPathForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadPathForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadPlayerIndexForID):
  proc GetGamepadPlayerIndexForID*(instance_id: JoystickID_1157628801): cint {.
      cdecl, importc: "SDL_GetGamepadPlayerIndexForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadPlayerIndexForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadGUIDForID):
  proc GetGamepadGUIDForID*(instance_id: JoystickID_1157628801): GUID_1157628785 {.
      cdecl, importc: "SDL_GetGamepadGUIDForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadGUIDForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadVendorForID):
  proc GetGamepadVendorForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadVendorForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadVendorForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductForID):
  proc GetGamepadProductForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadProductForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductVersionForID):
  proc GetGamepadProductVersionForID*(instance_id: JoystickID_1157628801): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadProductVersionForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductVersionForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadTypeForID):
  proc GetGamepadTypeForID*(instance_id: JoystickID_1157628801): GamepadType_1157628827 {.
      cdecl, importc: "SDL_GetGamepadTypeForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadTypeForID" &
        " already exists, not redeclaring")
when not declared(GetRealGamepadTypeForID):
  proc GetRealGamepadTypeForID*(instance_id: JoystickID_1157628801): GamepadType_1157628827 {.
      cdecl, importc: "SDL_GetRealGamepadTypeForID".}
else:
  static :
    hint("Declaration of " & "GetRealGamepadTypeForID" &
        " already exists, not redeclaring")
when not declared(GetGamepadMappingForID):
  proc GetGamepadMappingForID*(instance_id: JoystickID_1157628801): cstring {.
      cdecl, importc: "SDL_GetGamepadMappingForID".}
else:
  static :
    hint("Declaration of " & "GetGamepadMappingForID" &
        " already exists, not redeclaring")
when not declared(OpenGamepad):
  proc OpenGamepad*(instance_id: JoystickID_1157628801): ptr Gamepad_1157628823 {.
      cdecl, importc: "SDL_OpenGamepad".}
else:
  static :
    hint("Declaration of " & "OpenGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadFromID):
  proc GetGamepadFromID*(instance_id: JoystickID_1157628801): ptr Gamepad_1157628823 {.
      cdecl, importc: "SDL_GetGamepadFromID".}
else:
  static :
    hint("Declaration of " & "GetGamepadFromID" &
        " already exists, not redeclaring")
when not declared(GetGamepadFromPlayerIndex):
  proc GetGamepadFromPlayerIndex*(player_index: cint): ptr Gamepad_1157628823 {.
      cdecl, importc: "SDL_GetGamepadFromPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetGamepadFromPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetGamepadProperties):
  proc GetGamepadProperties*(gamepad: ptr Gamepad_1157628823): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetGamepadProperties".}
else:
  static :
    hint("Declaration of " & "GetGamepadProperties" &
        " already exists, not redeclaring")
when not declared(GetGamepadID):
  proc GetGamepadID*(gamepad: ptr Gamepad_1157628823): JoystickID_1157628801 {.
      cdecl, importc: "SDL_GetGamepadID".}
else:
  static :
    hint("Declaration of " & "GetGamepadID" & " already exists, not redeclaring")
when not declared(GetGamepadName):
  proc GetGamepadName*(gamepad: ptr Gamepad_1157628823): cstring {.cdecl,
      importc: "SDL_GetGamepadName".}
else:
  static :
    hint("Declaration of " & "GetGamepadName" &
        " already exists, not redeclaring")
when not declared(GetGamepadPath):
  proc GetGamepadPath*(gamepad: ptr Gamepad_1157628823): cstring {.cdecl,
      importc: "SDL_GetGamepadPath".}
else:
  static :
    hint("Declaration of " & "GetGamepadPath" &
        " already exists, not redeclaring")
when not declared(GetGamepadType):
  proc GetGamepadType*(gamepad: ptr Gamepad_1157628823): GamepadType_1157628827 {.
      cdecl, importc: "SDL_GetGamepadType".}
else:
  static :
    hint("Declaration of " & "GetGamepadType" &
        " already exists, not redeclaring")
when not declared(GetRealGamepadType):
  proc GetRealGamepadType*(gamepad: ptr Gamepad_1157628823): GamepadType_1157628827 {.
      cdecl, importc: "SDL_GetRealGamepadType".}
else:
  static :
    hint("Declaration of " & "GetRealGamepadType" &
        " already exists, not redeclaring")
when not declared(GetGamepadPlayerIndex):
  proc GetGamepadPlayerIndex*(gamepad: ptr Gamepad_1157628823): cint {.cdecl,
      importc: "SDL_GetGamepadPlayerIndex".}
else:
  static :
    hint("Declaration of " & "GetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(SetGamepadPlayerIndex):
  proc SetGamepadPlayerIndex*(gamepad: ptr Gamepad_1157628823;
                              player_index: cint): bool {.cdecl,
      importc: "SDL_SetGamepadPlayerIndex".}
else:
  static :
    hint("Declaration of " & "SetGamepadPlayerIndex" &
        " already exists, not redeclaring")
when not declared(GetGamepadVendor):
  proc GetGamepadVendor*(gamepad: ptr Gamepad_1157628823): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadVendor".}
else:
  static :
    hint("Declaration of " & "GetGamepadVendor" &
        " already exists, not redeclaring")
when not declared(GetGamepadProduct):
  proc GetGamepadProduct*(gamepad: ptr Gamepad_1157628823): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadProduct".}
else:
  static :
    hint("Declaration of " & "GetGamepadProduct" &
        " already exists, not redeclaring")
when not declared(GetGamepadProductVersion):
  proc GetGamepadProductVersion*(gamepad: ptr Gamepad_1157628823): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadProductVersion".}
else:
  static :
    hint("Declaration of " & "GetGamepadProductVersion" &
        " already exists, not redeclaring")
when not declared(GetGamepadFirmwareVersion):
  proc GetGamepadFirmwareVersion*(gamepad: ptr Gamepad_1157628823): Uint16_1157628441 {.
      cdecl, importc: "SDL_GetGamepadFirmwareVersion".}
else:
  static :
    hint("Declaration of " & "GetGamepadFirmwareVersion" &
        " already exists, not redeclaring")
when not declared(GetGamepadSerial):
  proc GetGamepadSerial*(gamepad: ptr Gamepad_1157628823): cstring {.cdecl,
      importc: "SDL_GetGamepadSerial".}
else:
  static :
    hint("Declaration of " & "GetGamepadSerial" &
        " already exists, not redeclaring")
when not declared(GetGamepadSteamHandle):
  proc GetGamepadSteamHandle*(gamepad: ptr Gamepad_1157628823): Uint64_1157628449 {.
      cdecl, importc: "SDL_GetGamepadSteamHandle".}
else:
  static :
    hint("Declaration of " & "GetGamepadSteamHandle" &
        " already exists, not redeclaring")
when not declared(GetGamepadConnectionState):
  proc GetGamepadConnectionState*(gamepad: ptr Gamepad_1157628823): JoystickConnectionState_1157628809 {.
      cdecl, importc: "SDL_GetGamepadConnectionState".}
else:
  static :
    hint("Declaration of " & "GetGamepadConnectionState" &
        " already exists, not redeclaring")
when not declared(GetGamepadPowerInfo):
  proc GetGamepadPowerInfo*(gamepad: ptr Gamepad_1157628823; percent: ptr cint): PowerState_1157628789 {.
      cdecl, importc: "SDL_GetGamepadPowerInfo".}
else:
  static :
    hint("Declaration of " & "GetGamepadPowerInfo" &
        " already exists, not redeclaring")
when not declared(GamepadConnected):
  proc GamepadConnected*(gamepad: ptr Gamepad_1157628823): bool {.cdecl,
      importc: "SDL_GamepadConnected".}
else:
  static :
    hint("Declaration of " & "GamepadConnected" &
        " already exists, not redeclaring")
when not declared(GetGamepadJoystick):
  proc GetGamepadJoystick*(gamepad: ptr Gamepad_1157628823): ptr Joystick_1157628799 {.
      cdecl, importc: "SDL_GetGamepadJoystick".}
else:
  static :
    hint("Declaration of " & "GetGamepadJoystick" &
        " already exists, not redeclaring")
when not declared(SetGamepadEventsEnabled):
  proc SetGamepadEventsEnabled*(enabled: bool): void {.cdecl,
      importc: "SDL_SetGamepadEventsEnabled".}
else:
  static :
    hint("Declaration of " & "SetGamepadEventsEnabled" &
        " already exists, not redeclaring")
when not declared(GamepadEventsEnabled):
  proc GamepadEventsEnabled*(): bool {.cdecl,
                                       importc: "SDL_GamepadEventsEnabled".}
else:
  static :
    hint("Declaration of " & "GamepadEventsEnabled" &
        " already exists, not redeclaring")
when not declared(GetGamepadBindings):
  proc GetGamepadBindings*(gamepad: ptr Gamepad_1157628823; count: ptr cint): ptr ptr GamepadBinding_1157628847 {.
      cdecl, importc: "SDL_GetGamepadBindings".}
else:
  static :
    hint("Declaration of " & "GetGamepadBindings" &
        " already exists, not redeclaring")
when not declared(UpdateGamepads):
  proc UpdateGamepads*(): void {.cdecl, importc: "SDL_UpdateGamepads".}
else:
  static :
    hint("Declaration of " & "UpdateGamepads" &
        " already exists, not redeclaring")
when not declared(GetGamepadTypeFromString):
  proc GetGamepadTypeFromString*(str: cstring): GamepadType_1157628827 {.cdecl,
      importc: "SDL_GetGamepadTypeFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadTypeFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForType):
  proc GetGamepadStringForType*(type_arg: GamepadType_1157628827): cstring {.
      cdecl, importc: "SDL_GetGamepadStringForType".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForType" &
        " already exists, not redeclaring")
when not declared(GetGamepadAxisFromString):
  proc GetGamepadAxisFromString*(str: cstring): GamepadAxis_1157628839 {.cdecl,
      importc: "SDL_GetGamepadAxisFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadAxisFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForAxis):
  proc GetGamepadStringForAxis*(axis: GamepadAxis_1157628839): cstring {.cdecl,
      importc: "SDL_GetGamepadStringForAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForAxis" &
        " already exists, not redeclaring")
when not declared(GamepadHasAxis):
  proc GamepadHasAxis*(gamepad: ptr Gamepad_1157628823; axis: GamepadAxis_1157628839): bool {.
      cdecl, importc: "SDL_GamepadHasAxis".}
else:
  static :
    hint("Declaration of " & "GamepadHasAxis" &
        " already exists, not redeclaring")
when not declared(GetGamepadAxis):
  proc GetGamepadAxis*(gamepad: ptr Gamepad_1157628823; axis: GamepadAxis_1157628839): Sint16_1157628439 {.
      cdecl, importc: "SDL_GetGamepadAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadAxis" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonFromString):
  proc GetGamepadButtonFromString*(str: cstring): GamepadButton_1157628831 {.
      cdecl, importc: "SDL_GetGamepadButtonFromString".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonFromString" &
        " already exists, not redeclaring")
when not declared(GetGamepadStringForButton):
  proc GetGamepadStringForButton*(button: GamepadButton_1157628831): cstring {.
      cdecl, importc: "SDL_GetGamepadStringForButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadStringForButton" &
        " already exists, not redeclaring")
when not declared(GamepadHasButton):
  proc GamepadHasButton*(gamepad: ptr Gamepad_1157628823; button: GamepadButton_1157628831): bool {.
      cdecl, importc: "SDL_GamepadHasButton".}
else:
  static :
    hint("Declaration of " & "GamepadHasButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadButton):
  proc GetGamepadButton*(gamepad: ptr Gamepad_1157628823; button: GamepadButton_1157628831): bool {.
      cdecl, importc: "SDL_GetGamepadButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonLabelForType):
  proc GetGamepadButtonLabelForType*(type_arg: GamepadType_1157628827;
                                     button: GamepadButton_1157628831): GamepadButtonLabel_1157628835 {.
      cdecl, importc: "SDL_GetGamepadButtonLabelForType".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonLabelForType" &
        " already exists, not redeclaring")
when not declared(GetGamepadButtonLabel):
  proc GetGamepadButtonLabel*(gamepad: ptr Gamepad_1157628823;
                              button: GamepadButton_1157628831): GamepadButtonLabel_1157628835 {.
      cdecl, importc: "SDL_GetGamepadButtonLabel".}
else:
  static :
    hint("Declaration of " & "GetGamepadButtonLabel" &
        " already exists, not redeclaring")
when not declared(GetNumGamepadTouchpads):
  proc GetNumGamepadTouchpads*(gamepad: ptr Gamepad_1157628823): cint {.cdecl,
      importc: "SDL_GetNumGamepadTouchpads".}
else:
  static :
    hint("Declaration of " & "GetNumGamepadTouchpads" &
        " already exists, not redeclaring")
when not declared(GetNumGamepadTouchpadFingers):
  proc GetNumGamepadTouchpadFingers*(gamepad: ptr Gamepad_1157628823;
                                     touchpad: cint): cint {.cdecl,
      importc: "SDL_GetNumGamepadTouchpadFingers".}
else:
  static :
    hint("Declaration of " & "GetNumGamepadTouchpadFingers" &
        " already exists, not redeclaring")
when not declared(GetGamepadTouchpadFinger):
  proc GetGamepadTouchpadFinger*(gamepad: ptr Gamepad_1157628823;
                                 touchpad: cint; finger: cint; down: ptr bool;
                                 x: ptr cfloat; y: ptr cfloat;
                                 pressure: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetGamepadTouchpadFinger".}
else:
  static :
    hint("Declaration of " & "GetGamepadTouchpadFinger" &
        " already exists, not redeclaring")
when not declared(GamepadHasSensor):
  proc GamepadHasSensor*(gamepad: ptr Gamepad_1157628823; type_arg: SensorType_1157628797): bool {.
      cdecl, importc: "SDL_GamepadHasSensor".}
else:
  static :
    hint("Declaration of " & "GamepadHasSensor" &
        " already exists, not redeclaring")
when not declared(SetGamepadSensorEnabled):
  proc SetGamepadSensorEnabled*(gamepad: ptr Gamepad_1157628823;
                                type_arg: SensorType_1157628797; enabled: bool): bool {.
      cdecl, importc: "SDL_SetGamepadSensorEnabled".}
else:
  static :
    hint("Declaration of " & "SetGamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(GamepadSensorEnabled):
  proc GamepadSensorEnabled*(gamepad: ptr Gamepad_1157628823;
                             type_arg: SensorType_1157628797): bool {.cdecl,
      importc: "SDL_GamepadSensorEnabled".}
else:
  static :
    hint("Declaration of " & "GamepadSensorEnabled" &
        " already exists, not redeclaring")
when not declared(GetGamepadSensorDataRate):
  proc GetGamepadSensorDataRate*(gamepad: ptr Gamepad_1157628823;
                                 type_arg: SensorType_1157628797): cfloat {.
      cdecl, importc: "SDL_GetGamepadSensorDataRate".}
else:
  static :
    hint("Declaration of " & "GetGamepadSensorDataRate" &
        " already exists, not redeclaring")
when not declared(GetGamepadSensorData):
  proc GetGamepadSensorData*(gamepad: ptr Gamepad_1157628823;
                             type_arg: SensorType_1157628797; data: ptr cfloat;
                             num_values: cint): bool {.cdecl,
      importc: "SDL_GetGamepadSensorData".}
else:
  static :
    hint("Declaration of " & "GetGamepadSensorData" &
        " already exists, not redeclaring")
when not declared(RumbleGamepad):
  proc RumbleGamepad*(gamepad: ptr Gamepad_1157628823;
                      low_frequency_rumble: Uint16_1157628441;
                      high_frequency_rumble: Uint16_1157628441;
                      duration_ms: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_RumbleGamepad".}
else:
  static :
    hint("Declaration of " & "RumbleGamepad" &
        " already exists, not redeclaring")
when not declared(RumbleGamepadTriggers):
  proc RumbleGamepadTriggers*(gamepad: ptr Gamepad_1157628823;
                              left_rumble: Uint16_1157628441;
                              right_rumble: Uint16_1157628441;
                              duration_ms: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_RumbleGamepadTriggers".}
else:
  static :
    hint("Declaration of " & "RumbleGamepadTriggers" &
        " already exists, not redeclaring")
when not declared(SetGamepadLED):
  proc SetGamepadLED*(gamepad: ptr Gamepad_1157628823; red: Uint8_1157628437;
                      green: Uint8_1157628437; blue: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetGamepadLED".}
else:
  static :
    hint("Declaration of " & "SetGamepadLED" &
        " already exists, not redeclaring")
when not declared(SendGamepadEffect):
  proc SendGamepadEffect*(gamepad: ptr Gamepad_1157628823; data: pointer;
                          size: cint): bool {.cdecl,
      importc: "SDL_SendGamepadEffect".}
else:
  static :
    hint("Declaration of " & "SendGamepadEffect" &
        " already exists, not redeclaring")
when not declared(CloseGamepad):
  proc CloseGamepad*(gamepad: ptr Gamepad_1157628823): void {.cdecl,
      importc: "SDL_CloseGamepad".}
else:
  static :
    hint("Declaration of " & "CloseGamepad" & " already exists, not redeclaring")
when not declared(GetGamepadAppleSFSymbolsNameForButton):
  proc GetGamepadAppleSFSymbolsNameForButton*(gamepad: ptr Gamepad_1157628823;
      button: GamepadButton_1157628831): cstring {.cdecl,
      importc: "SDL_GetGamepadAppleSFSymbolsNameForButton".}
else:
  static :
    hint("Declaration of " & "GetGamepadAppleSFSymbolsNameForButton" &
        " already exists, not redeclaring")
when not declared(GetGamepadAppleSFSymbolsNameForAxis):
  proc GetGamepadAppleSFSymbolsNameForAxis*(gamepad: ptr Gamepad_1157628823;
      axis: GamepadAxis_1157628839): cstring {.cdecl,
      importc: "SDL_GetGamepadAppleSFSymbolsNameForAxis".}
else:
  static :
    hint("Declaration of " & "GetGamepadAppleSFSymbolsNameForAxis" &
        " already exists, not redeclaring")
when not declared(HasKeyboard):
  proc HasKeyboard*(): bool {.cdecl, importc: "SDL_HasKeyboard".}
else:
  static :
    hint("Declaration of " & "HasKeyboard" & " already exists, not redeclaring")
when not declared(GetKeyboards):
  proc GetKeyboards*(count: ptr cint): ptr KeyboardID_1157628857 {.cdecl,
      importc: "SDL_GetKeyboards".}
else:
  static :
    hint("Declaration of " & "GetKeyboards" & " already exists, not redeclaring")
when not declared(GetKeyboardNameForID):
  proc GetKeyboardNameForID*(instance_id: KeyboardID_1157628857): cstring {.
      cdecl, importc: "SDL_GetKeyboardNameForID".}
else:
  static :
    hint("Declaration of " & "GetKeyboardNameForID" &
        " already exists, not redeclaring")
when not declared(GetKeyboardFocus):
  proc GetKeyboardFocus*(): ptr Window_1157628729 {.cdecl,
      importc: "SDL_GetKeyboardFocus".}
else:
  static :
    hint("Declaration of " & "GetKeyboardFocus" &
        " already exists, not redeclaring")
when not declared(GetKeyboardState):
  proc GetKeyboardState*(numkeys: ptr cint): ptr bool {.cdecl,
      importc: "SDL_GetKeyboardState".}
else:
  static :
    hint("Declaration of " & "GetKeyboardState" &
        " already exists, not redeclaring")
when not declared(ResetKeyboard):
  proc ResetKeyboard*(): void {.cdecl, importc: "SDL_ResetKeyboard".}
else:
  static :
    hint("Declaration of " & "ResetKeyboard" &
        " already exists, not redeclaring")
when not declared(GetModState):
  proc GetModState*(): Keymod_1157628855 {.cdecl, importc: "SDL_GetModState".}
else:
  static :
    hint("Declaration of " & "GetModState" & " already exists, not redeclaring")
when not declared(SetModState):
  proc SetModState*(modstate: Keymod_1157628855): void {.cdecl,
      importc: "SDL_SetModState".}
else:
  static :
    hint("Declaration of " & "SetModState" & " already exists, not redeclaring")
when not declared(GetKeyFromScancode):
  proc GetKeyFromScancode*(scancode: Scancode_1157628851; modstate: Keymod_1157628855;
                           key_event: bool): Keycode_1157628853 {.cdecl,
      importc: "SDL_GetKeyFromScancode".}
else:
  static :
    hint("Declaration of " & "GetKeyFromScancode" &
        " already exists, not redeclaring")
when not declared(GetScancodeFromKey):
  proc GetScancodeFromKey*(key: Keycode_1157628853; modstate: ptr Keymod_1157628855): Scancode_1157628851 {.
      cdecl, importc: "SDL_GetScancodeFromKey".}
else:
  static :
    hint("Declaration of " & "GetScancodeFromKey" &
        " already exists, not redeclaring")
when not declared(SetScancodeName):
  proc SetScancodeName*(scancode: Scancode_1157628851; name: cstring): bool {.
      cdecl, importc: "SDL_SetScancodeName".}
else:
  static :
    hint("Declaration of " & "SetScancodeName" &
        " already exists, not redeclaring")
when not declared(GetScancodeName):
  proc GetScancodeName*(scancode: Scancode_1157628851): cstring {.cdecl,
      importc: "SDL_GetScancodeName".}
else:
  static :
    hint("Declaration of " & "GetScancodeName" &
        " already exists, not redeclaring")
when not declared(GetScancodeFromName):
  proc GetScancodeFromName*(name: cstring): Scancode_1157628851 {.cdecl,
      importc: "SDL_GetScancodeFromName".}
else:
  static :
    hint("Declaration of " & "GetScancodeFromName" &
        " already exists, not redeclaring")
when not declared(GetKeyName):
  proc GetKeyName*(key: Keycode_1157628853): cstring {.cdecl,
      importc: "SDL_GetKeyName".}
else:
  static :
    hint("Declaration of " & "GetKeyName" & " already exists, not redeclaring")
when not declared(GetKeyFromName):
  proc GetKeyFromName*(name: cstring): Keycode_1157628853 {.cdecl,
      importc: "SDL_GetKeyFromName".}
else:
  static :
    hint("Declaration of " & "GetKeyFromName" &
        " already exists, not redeclaring")
when not declared(StartTextInput):
  proc StartTextInput*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_StartTextInput".}
else:
  static :
    hint("Declaration of " & "StartTextInput" &
        " already exists, not redeclaring")
when not declared(StartTextInputWithProperties):
  proc StartTextInputWithProperties*(window: ptr Window_1157628729;
                                     props: PropertiesID_1157628517): bool {.
      cdecl, importc: "SDL_StartTextInputWithProperties".}
else:
  static :
    hint("Declaration of " & "StartTextInputWithProperties" &
        " already exists, not redeclaring")
when not declared(TextInputActive):
  proc TextInputActive*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_TextInputActive".}
else:
  static :
    hint("Declaration of " & "TextInputActive" &
        " already exists, not redeclaring")
when not declared(StopTextInput):
  proc StopTextInput*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_StopTextInput".}
else:
  static :
    hint("Declaration of " & "StopTextInput" &
        " already exists, not redeclaring")
when not declared(ClearComposition):
  proc ClearComposition*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_ClearComposition".}
else:
  static :
    hint("Declaration of " & "ClearComposition" &
        " already exists, not redeclaring")
when not declared(SetTextInputArea):
  proc SetTextInputArea*(window: ptr Window_1157628729; rect: ptr Rect_1157628675;
                         cursor: cint): bool {.cdecl,
      importc: "SDL_SetTextInputArea".}
else:
  static :
    hint("Declaration of " & "SetTextInputArea" &
        " already exists, not redeclaring")
when not declared(GetTextInputArea):
  proc GetTextInputArea*(window: ptr Window_1157628729; rect: ptr Rect_1157628675;
                         cursor: ptr cint): bool {.cdecl,
      importc: "SDL_GetTextInputArea".}
else:
  static :
    hint("Declaration of " & "GetTextInputArea" &
        " already exists, not redeclaring")
when not declared(HasScreenKeyboardSupport):
  proc HasScreenKeyboardSupport*(): bool {.cdecl,
      importc: "SDL_HasScreenKeyboardSupport".}
else:
  static :
    hint("Declaration of " & "HasScreenKeyboardSupport" &
        " already exists, not redeclaring")
when not declared(ScreenKeyboardShown):
  proc ScreenKeyboardShown*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_ScreenKeyboardShown".}
else:
  static :
    hint("Declaration of " & "ScreenKeyboardShown" &
        " already exists, not redeclaring")
when not declared(HasMouse):
  proc HasMouse*(): bool {.cdecl, importc: "SDL_HasMouse".}
else:
  static :
    hint("Declaration of " & "HasMouse" & " already exists, not redeclaring")
when not declared(GetMice):
  proc GetMice*(count: ptr cint): ptr MouseID_1157628867 {.cdecl,
      importc: "SDL_GetMice".}
else:
  static :
    hint("Declaration of " & "GetMice" & " already exists, not redeclaring")
when not declared(GetMouseNameForID):
  proc GetMouseNameForID*(instance_id: MouseID_1157628867): cstring {.cdecl,
      importc: "SDL_GetMouseNameForID".}
else:
  static :
    hint("Declaration of " & "GetMouseNameForID" &
        " already exists, not redeclaring")
when not declared(GetMouseFocus):
  proc GetMouseFocus*(): ptr Window_1157628729 {.cdecl,
      importc: "SDL_GetMouseFocus".}
else:
  static :
    hint("Declaration of " & "GetMouseFocus" &
        " already exists, not redeclaring")
when not declared(GetMouseState):
  proc GetMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_1157628879 {.
      cdecl, importc: "SDL_GetMouseState".}
else:
  static :
    hint("Declaration of " & "GetMouseState" &
        " already exists, not redeclaring")
when not declared(GetGlobalMouseState):
  proc GetGlobalMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_1157628879 {.
      cdecl, importc: "SDL_GetGlobalMouseState".}
else:
  static :
    hint("Declaration of " & "GetGlobalMouseState" &
        " already exists, not redeclaring")
when not declared(GetRelativeMouseState):
  proc GetRelativeMouseState*(x: ptr cfloat; y: ptr cfloat): MouseButtonFlags_1157628879 {.
      cdecl, importc: "SDL_GetRelativeMouseState".}
else:
  static :
    hint("Declaration of " & "GetRelativeMouseState" &
        " already exists, not redeclaring")
when not declared(WarpMouseInWindow):
  proc WarpMouseInWindow*(window: ptr Window_1157628729; x: cfloat; y: cfloat): void {.
      cdecl, importc: "SDL_WarpMouseInWindow".}
else:
  static :
    hint("Declaration of " & "WarpMouseInWindow" &
        " already exists, not redeclaring")
when not declared(WarpMouseGlobal):
  proc WarpMouseGlobal*(x: cfloat; y: cfloat): bool {.cdecl,
      importc: "SDL_WarpMouseGlobal".}
else:
  static :
    hint("Declaration of " & "WarpMouseGlobal" &
        " already exists, not redeclaring")
when not declared(SetWindowRelativeMouseMode):
  proc SetWindowRelativeMouseMode*(window: ptr Window_1157628729; enabled: bool): bool {.
      cdecl, importc: "SDL_SetWindowRelativeMouseMode".}
else:
  static :
    hint("Declaration of " & "SetWindowRelativeMouseMode" &
        " already exists, not redeclaring")
when not declared(GetWindowRelativeMouseMode):
  proc GetWindowRelativeMouseMode*(window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_GetWindowRelativeMouseMode".}
else:
  static :
    hint("Declaration of " & "GetWindowRelativeMouseMode" &
        " already exists, not redeclaring")
when not declared(CaptureMouse):
  proc CaptureMouse*(enabled: bool): bool {.cdecl, importc: "SDL_CaptureMouse".}
else:
  static :
    hint("Declaration of " & "CaptureMouse" & " already exists, not redeclaring")
when not declared(CreateCursor):
  proc CreateCursor*(data: ptr Uint8_1157628437; mask: ptr Uint8_1157628437;
                     w: cint; h: cint; hot_x: cint; hot_y: cint): ptr Cursor_1157628869 {.
      cdecl, importc: "SDL_CreateCursor".}
else:
  static :
    hint("Declaration of " & "CreateCursor" & " already exists, not redeclaring")
when not declared(CreateColorCursor):
  proc CreateColorCursor*(surface: ptr Surface_1157628693; hot_x: cint;
                          hot_y: cint): ptr Cursor_1157628869 {.cdecl,
      importc: "SDL_CreateColorCursor".}
else:
  static :
    hint("Declaration of " & "CreateColorCursor" &
        " already exists, not redeclaring")
when not declared(CreateSystemCursor):
  proc CreateSystemCursor*(id: SystemCursor_1157628873): ptr Cursor_1157628869 {.
      cdecl, importc: "SDL_CreateSystemCursor".}
else:
  static :
    hint("Declaration of " & "CreateSystemCursor" &
        " already exists, not redeclaring")
when not declared(SetCursor):
  proc SetCursor*(cursor: ptr Cursor_1157628869): bool {.cdecl,
      importc: "SDL_SetCursor".}
else:
  static :
    hint("Declaration of " & "SetCursor" & " already exists, not redeclaring")
when not declared(GetCursor):
  proc GetCursor*(): ptr Cursor_1157628869 {.cdecl, importc: "SDL_GetCursor".}
else:
  static :
    hint("Declaration of " & "GetCursor" & " already exists, not redeclaring")
when not declared(GetDefaultCursor):
  proc GetDefaultCursor*(): ptr Cursor_1157628869 {.cdecl,
      importc: "SDL_GetDefaultCursor".}
else:
  static :
    hint("Declaration of " & "GetDefaultCursor" &
        " already exists, not redeclaring")
when not declared(DestroyCursor):
  proc DestroyCursor*(cursor: ptr Cursor_1157628869): void {.cdecl,
      importc: "SDL_DestroyCursor".}
else:
  static :
    hint("Declaration of " & "DestroyCursor" &
        " already exists, not redeclaring")
when not declared(ShowCursor):
  proc ShowCursor*(): bool {.cdecl, importc: "SDL_ShowCursor".}
else:
  static :
    hint("Declaration of " & "ShowCursor" & " already exists, not redeclaring")
when not declared(HideCursor):
  proc HideCursor*(): bool {.cdecl, importc: "SDL_HideCursor".}
else:
  static :
    hint("Declaration of " & "HideCursor" & " already exists, not redeclaring")
when not declared(CursorVisible):
  proc CursorVisible*(): bool {.cdecl, importc: "SDL_CursorVisible".}
else:
  static :
    hint("Declaration of " & "CursorVisible" &
        " already exists, not redeclaring")
when not declared(GetTouchDevices):
  proc GetTouchDevices*(count: ptr cint): ptr TouchID_1157628889 {.cdecl,
      importc: "SDL_GetTouchDevices".}
else:
  static :
    hint("Declaration of " & "GetTouchDevices" &
        " already exists, not redeclaring")
when not declared(GetTouchDeviceName):
  proc GetTouchDeviceName*(touchID: TouchID_1157628889): cstring {.cdecl,
      importc: "SDL_GetTouchDeviceName".}
else:
  static :
    hint("Declaration of " & "GetTouchDeviceName" &
        " already exists, not redeclaring")
when not declared(GetTouchDeviceType):
  proc GetTouchDeviceType*(touchID: TouchID_1157628889): TouchDeviceType_1157628895 {.
      cdecl, importc: "SDL_GetTouchDeviceType".}
else:
  static :
    hint("Declaration of " & "GetTouchDeviceType" &
        " already exists, not redeclaring")
when not declared(GetTouchFingers):
  proc GetTouchFingers*(touchID: TouchID_1157628889; count: ptr cint): ptr ptr Finger_1157628899 {.
      cdecl, importc: "SDL_GetTouchFingers".}
else:
  static :
    hint("Declaration of " & "GetTouchFingers" &
        " already exists, not redeclaring")
when not declared(PumpEvents):
  proc PumpEvents*(): void {.cdecl, importc: "SDL_PumpEvents".}
else:
  static :
    hint("Declaration of " & "PumpEvents" & " already exists, not redeclaring")
when not declared(PeepEvents):
  proc PeepEvents*(events: ptr Event_1157629055; numevents: cint;
                   action: EventAction_1157629059; minType: Uint32_1157628445;
                   maxType: Uint32_1157628445): cint {.cdecl,
      importc: "SDL_PeepEvents".}
else:
  static :
    hint("Declaration of " & "PeepEvents" & " already exists, not redeclaring")
when not declared(HasEvent):
  proc HasEvent*(type_arg: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_HasEvent".}
else:
  static :
    hint("Declaration of " & "HasEvent" & " already exists, not redeclaring")
when not declared(HasEvents):
  proc HasEvents*(minType: Uint32_1157628445; maxType: Uint32_1157628445): bool {.
      cdecl, importc: "SDL_HasEvents".}
else:
  static :
    hint("Declaration of " & "HasEvents" & " already exists, not redeclaring")
when not declared(FlushEvent):
  proc FlushEvent*(type_arg: Uint32_1157628445): void {.cdecl,
      importc: "SDL_FlushEvent".}
else:
  static :
    hint("Declaration of " & "FlushEvent" & " already exists, not redeclaring")
when not declared(FlushEvents):
  proc FlushEvents*(minType: Uint32_1157628445; maxType: Uint32_1157628445): void {.
      cdecl, importc: "SDL_FlushEvents".}
else:
  static :
    hint("Declaration of " & "FlushEvents" & " already exists, not redeclaring")
when not declared(PollEvent):
  proc PollEvent*(event: ptr Event_1157629055): bool {.cdecl,
      importc: "SDL_PollEvent".}
else:
  static :
    hint("Declaration of " & "PollEvent" & " already exists, not redeclaring")
when not declared(WaitEvent):
  proc WaitEvent*(event: ptr Event_1157629055): bool {.cdecl,
      importc: "SDL_WaitEvent".}
else:
  static :
    hint("Declaration of " & "WaitEvent" & " already exists, not redeclaring")
when not declared(WaitEventTimeout):
  proc WaitEventTimeout*(event: ptr Event_1157629055; timeoutMS: Sint32_1157628443): bool {.
      cdecl, importc: "SDL_WaitEventTimeout".}
else:
  static :
    hint("Declaration of " & "WaitEventTimeout" &
        " already exists, not redeclaring")
when not declared(PushEvent):
  proc PushEvent*(event: ptr Event_1157629055): bool {.cdecl,
      importc: "SDL_PushEvent".}
else:
  static :
    hint("Declaration of " & "PushEvent" & " already exists, not redeclaring")
when not declared(SetEventFilter):
  proc SetEventFilter*(filter: EventFilter_1157629061; userdata: pointer): void {.
      cdecl, importc: "SDL_SetEventFilter".}
else:
  static :
    hint("Declaration of " & "SetEventFilter" &
        " already exists, not redeclaring")
when not declared(GetEventFilter):
  proc GetEventFilter*(filter: EventFilter_1157629061; userdata: ptr pointer): bool {.
      cdecl, importc: "SDL_GetEventFilter".}
else:
  static :
    hint("Declaration of " & "GetEventFilter" &
        " already exists, not redeclaring")
when not declared(AddEventWatch):
  proc AddEventWatch*(filter: EventFilter_1157629061; userdata: pointer): bool {.
      cdecl, importc: "SDL_AddEventWatch".}
else:
  static :
    hint("Declaration of " & "AddEventWatch" &
        " already exists, not redeclaring")
when not declared(RemoveEventWatch):
  proc RemoveEventWatch*(filter: EventFilter_1157629061; userdata: pointer): void {.
      cdecl, importc: "SDL_RemoveEventWatch".}
else:
  static :
    hint("Declaration of " & "RemoveEventWatch" &
        " already exists, not redeclaring")
when not declared(FilterEvents):
  proc FilterEvents*(filter: EventFilter_1157629061; userdata: pointer): void {.
      cdecl, importc: "SDL_FilterEvents".}
else:
  static :
    hint("Declaration of " & "FilterEvents" & " already exists, not redeclaring")
when not declared(SetEventEnabled):
  proc SetEventEnabled*(type_arg: Uint32_1157628445; enabled: bool): void {.
      cdecl, importc: "SDL_SetEventEnabled".}
else:
  static :
    hint("Declaration of " & "SetEventEnabled" &
        " already exists, not redeclaring")
when not declared(EventEnabled):
  proc EventEnabled*(type_arg: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_EventEnabled".}
else:
  static :
    hint("Declaration of " & "EventEnabled" & " already exists, not redeclaring")
when not declared(RegisterEvents):
  proc RegisterEvents*(numevents: cint): Uint32_1157628445 {.cdecl,
      importc: "SDL_RegisterEvents".}
else:
  static :
    hint("Declaration of " & "RegisterEvents" &
        " already exists, not redeclaring")
when not declared(GetWindowFromEvent):
  proc GetWindowFromEvent*(event: ptr Event_1157629055): ptr Window_1157628729 {.
      cdecl, importc: "SDL_GetWindowFromEvent".}
else:
  static :
    hint("Declaration of " & "GetWindowFromEvent" &
        " already exists, not redeclaring")
when not declared(GetBasePath):
  proc GetBasePath*(): cstring {.cdecl, importc: "SDL_GetBasePath".}
else:
  static :
    hint("Declaration of " & "GetBasePath" & " already exists, not redeclaring")
when not declared(GetPrefPath):
  proc GetPrefPath*(org: cstring; app: cstring): cstring {.cdecl,
      importc: "SDL_GetPrefPath".}
else:
  static :
    hint("Declaration of " & "GetPrefPath" & " already exists, not redeclaring")
when not declared(GetUserFolder):
  proc GetUserFolder*(folder: Folder_1157629065): cstring {.cdecl,
      importc: "SDL_GetUserFolder".}
else:
  static :
    hint("Declaration of " & "GetUserFolder" &
        " already exists, not redeclaring")
when not declared(CreateDirectory):
  proc CreateDirectory*(path: cstring): bool {.cdecl,
      importc: "SDL_CreateDirectory".}
else:
  static :
    hint("Declaration of " & "CreateDirectory" &
        " already exists, not redeclaring")
when not declared(EnumerateDirectory):
  proc EnumerateDirectory*(path: cstring; callback: EnumerateDirectoryCallback_1157629081;
                           userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateDirectory".}
else:
  static :
    hint("Declaration of " & "EnumerateDirectory" &
        " already exists, not redeclaring")
when not declared(RemovePath):
  proc RemovePath*(path: cstring): bool {.cdecl, importc: "SDL_RemovePath".}
else:
  static :
    hint("Declaration of " & "RemovePath" & " already exists, not redeclaring")
when not declared(RenamePath):
  proc RenamePath*(oldpath: cstring; newpath: cstring): bool {.cdecl,
      importc: "SDL_RenamePath".}
else:
  static :
    hint("Declaration of " & "RenamePath" & " already exists, not redeclaring")
when not declared(CopyFile):
  proc CopyFile*(oldpath: cstring; newpath: cstring): bool {.cdecl,
      importc: "SDL_CopyFile".}
else:
  static :
    hint("Declaration of " & "CopyFile" & " already exists, not redeclaring")
when not declared(GetPathInfo):
  proc GetPathInfo*(path: cstring; info: ptr PathInfo_1157629073): bool {.cdecl,
      importc: "SDL_GetPathInfo".}
else:
  static :
    hint("Declaration of " & "GetPathInfo" & " already exists, not redeclaring")
when not declared(GlobDirectory):
  proc GlobDirectory*(path: cstring; pattern: cstring; flags: GlobFlags_1157629075;
                      count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GlobDirectory".}
else:
  static :
    hint("Declaration of " & "GlobDirectory" &
        " already exists, not redeclaring")
when not declared(GetCurrentDirectory):
  proc GetCurrentDirectory*(): cstring {.cdecl,
      importc: "SDL_GetCurrentDirectory".}
else:
  static :
    hint("Declaration of " & "GetCurrentDirectory" &
        " already exists, not redeclaring")
when not declared(GPUSupportsShaderFormats):
  proc GPUSupportsShaderFormats*(format_flags: GPUShaderFormat_1157629153;
                                 name: cstring): bool {.cdecl,
      importc: "SDL_GPUSupportsShaderFormats".}
else:
  static :
    hint("Declaration of " & "GPUSupportsShaderFormats" &
        " already exists, not redeclaring")
when not declared(GPUSupportsProperties):
  proc GPUSupportsProperties*(props: PropertiesID_1157628517): bool {.cdecl,
      importc: "SDL_GPUSupportsProperties".}
else:
  static :
    hint("Declaration of " & "GPUSupportsProperties" &
        " already exists, not redeclaring")
when not declared(CreateGPUDevice):
  proc CreateGPUDevice*(format_flags: GPUShaderFormat_1157629153;
                        debug_mode: bool; name: cstring): ptr GPUDevice_1157629083 {.
      cdecl, importc: "SDL_CreateGPUDevice".}
else:
  static :
    hint("Declaration of " & "CreateGPUDevice" &
        " already exists, not redeclaring")
when not declared(CreateGPUDeviceWithProperties):
  proc CreateGPUDeviceWithProperties*(props: PropertiesID_1157628517): ptr GPUDevice_1157629083 {.
      cdecl, importc: "SDL_CreateGPUDeviceWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateGPUDeviceWithProperties" &
        " already exists, not redeclaring")
when not declared(DestroyGPUDevice):
  proc DestroyGPUDevice*(device: ptr GPUDevice_1157629083): void {.cdecl,
      importc: "SDL_DestroyGPUDevice".}
else:
  static :
    hint("Declaration of " & "DestroyGPUDevice" &
        " already exists, not redeclaring")
when not declared(GetNumGPUDrivers):
  proc GetNumGPUDrivers*(): cint {.cdecl, importc: "SDL_GetNumGPUDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumGPUDrivers" &
        " already exists, not redeclaring")
when not declared(GetGPUDriver):
  proc GetGPUDriver*(index: cint): cstring {.cdecl, importc: "SDL_GetGPUDriver".}
else:
  static :
    hint("Declaration of " & "GetGPUDriver" & " already exists, not redeclaring")
when not declared(GetGPUDeviceDriver):
  proc GetGPUDeviceDriver*(device: ptr GPUDevice_1157629083): cstring {.cdecl,
      importc: "SDL_GetGPUDeviceDriver".}
else:
  static :
    hint("Declaration of " & "GetGPUDeviceDriver" &
        " already exists, not redeclaring")
when not declared(GetGPUShaderFormats):
  proc GetGPUShaderFormats*(device: ptr GPUDevice_1157629083): GPUShaderFormat_1157629153 {.
      cdecl, importc: "SDL_GetGPUShaderFormats".}
else:
  static :
    hint("Declaration of " & "GetGPUShaderFormats" &
        " already exists, not redeclaring")
when not declared(CreateGPUComputePipeline):
  proc CreateGPUComputePipeline*(device: ptr GPUDevice_1157629083;
                                 createinfo: ptr GPUComputePipelineCreateInfo_1157629323): ptr GPUComputePipeline_1157629095 {.
      cdecl, importc: "SDL_CreateGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "CreateGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(CreateGPUGraphicsPipeline):
  proc CreateGPUGraphicsPipeline*(device: ptr GPUDevice_1157629083;
                                  createinfo: ptr GPUGraphicsPipelineCreateInfo_1157629319): ptr GPUGraphicsPipeline_1157629097 {.
      cdecl, importc: "SDL_CreateGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "CreateGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(CreateGPUSampler):
  proc CreateGPUSampler*(device: ptr GPUDevice_1157629083;
                         createinfo: ptr GPUSamplerCreateInfo_1157629259): ptr GPUSampler_1157629091 {.
      cdecl, importc: "SDL_CreateGPUSampler".}
else:
  static :
    hint("Declaration of " & "CreateGPUSampler" &
        " already exists, not redeclaring")
when not declared(CreateGPUShader):
  proc CreateGPUShader*(device: ptr GPUDevice_1157629083;
                        createinfo: ptr GPUShaderCreateInfo_1157629283): ptr GPUShader_1157629093 {.
      cdecl, importc: "SDL_CreateGPUShader".}
else:
  static :
    hint("Declaration of " & "CreateGPUShader" &
        " already exists, not redeclaring")
when not declared(CreateGPUTexture):
  proc CreateGPUTexture*(device: ptr GPUDevice_1157629083;
                         createinfo: ptr GPUTextureCreateInfo_1157629287): ptr GPUTexture_1157629089 {.
      cdecl, importc: "SDL_CreateGPUTexture".}
else:
  static :
    hint("Declaration of " & "CreateGPUTexture" &
        " already exists, not redeclaring")
when not declared(CreateGPUBuffer):
  proc CreateGPUBuffer*(device: ptr GPUDevice_1157629083;
                        createinfo: ptr GPUBufferCreateInfo_1157629291): ptr GPUBuffer_1157629085 {.
      cdecl, importc: "SDL_CreateGPUBuffer".}
else:
  static :
    hint("Declaration of " & "CreateGPUBuffer" &
        " already exists, not redeclaring")
when not declared(CreateGPUTransferBuffer):
  proc CreateGPUTransferBuffer*(device: ptr GPUDevice_1157629083;
                                createinfo: ptr GPUTransferBufferCreateInfo_1157629295): ptr GPUTransferBuffer_1157629087 {.
      cdecl, importc: "SDL_CreateGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "CreateGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(SetGPUBufferName):
  proc SetGPUBufferName*(device: ptr GPUDevice_1157629083;
                         buffer: ptr GPUBuffer_1157629085; text: cstring): void {.
      cdecl, importc: "SDL_SetGPUBufferName".}
else:
  static :
    hint("Declaration of " & "SetGPUBufferName" &
        " already exists, not redeclaring")
when not declared(SetGPUTextureName):
  proc SetGPUTextureName*(device: ptr GPUDevice_1157629083;
                          texture: ptr GPUTexture_1157629089; text: cstring): void {.
      cdecl, importc: "SDL_SetGPUTextureName".}
else:
  static :
    hint("Declaration of " & "SetGPUTextureName" &
        " already exists, not redeclaring")
when not declared(InsertGPUDebugLabel):
  proc InsertGPUDebugLabel*(command_buffer: ptr GPUCommandBuffer_1157629099;
                            text: cstring): void {.cdecl,
      importc: "SDL_InsertGPUDebugLabel".}
else:
  static :
    hint("Declaration of " & "InsertGPUDebugLabel" &
        " already exists, not redeclaring")
when not declared(PushGPUDebugGroup):
  proc PushGPUDebugGroup*(command_buffer: ptr GPUCommandBuffer_1157629099;
                          name: cstring): void {.cdecl,
      importc: "SDL_PushGPUDebugGroup".}
else:
  static :
    hint("Declaration of " & "PushGPUDebugGroup" &
        " already exists, not redeclaring")
when not declared(PopGPUDebugGroup):
  proc PopGPUDebugGroup*(command_buffer: ptr GPUCommandBuffer_1157629099): void {.
      cdecl, importc: "SDL_PopGPUDebugGroup".}
else:
  static :
    hint("Declaration of " & "PopGPUDebugGroup" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUTexture):
  proc ReleaseGPUTexture*(device: ptr GPUDevice_1157629083;
                          texture: ptr GPUTexture_1157629089): void {.cdecl,
      importc: "SDL_ReleaseGPUTexture".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUTexture" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUSampler):
  proc ReleaseGPUSampler*(device: ptr GPUDevice_1157629083;
                          sampler: ptr GPUSampler_1157629091): void {.cdecl,
      importc: "SDL_ReleaseGPUSampler".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUSampler" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUBuffer):
  proc ReleaseGPUBuffer*(device: ptr GPUDevice_1157629083; buffer: ptr GPUBuffer_1157629085): void {.
      cdecl, importc: "SDL_ReleaseGPUBuffer".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUBuffer" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUTransferBuffer):
  proc ReleaseGPUTransferBuffer*(device: ptr GPUDevice_1157629083;
                                 transfer_buffer: ptr GPUTransferBuffer_1157629087): void {.
      cdecl, importc: "SDL_ReleaseGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUComputePipeline):
  proc ReleaseGPUComputePipeline*(device: ptr GPUDevice_1157629083;
                                  compute_pipeline: ptr GPUComputePipeline_1157629095): void {.
      cdecl, importc: "SDL_ReleaseGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUShader):
  proc ReleaseGPUShader*(device: ptr GPUDevice_1157629083; shader: ptr GPUShader_1157629093): void {.
      cdecl, importc: "SDL_ReleaseGPUShader".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUShader" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUGraphicsPipeline):
  proc ReleaseGPUGraphicsPipeline*(device: ptr GPUDevice_1157629083;
                                   graphics_pipeline: ptr GPUGraphicsPipeline_1157629097): void {.
      cdecl, importc: "SDL_ReleaseGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(AcquireGPUCommandBuffer):
  proc AcquireGPUCommandBuffer*(device: ptr GPUDevice_1157629083): ptr GPUCommandBuffer_1157629099 {.
      cdecl, importc: "SDL_AcquireGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "AcquireGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(PushGPUVertexUniformData):
  proc PushGPUVertexUniformData*(command_buffer: ptr GPUCommandBuffer_1157629099;
                                 slot_index: Uint32_1157628445; data: pointer;
                                 length: Uint32_1157628445): void {.cdecl,
      importc: "SDL_PushGPUVertexUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUVertexUniformData" &
        " already exists, not redeclaring")
when not declared(PushGPUFragmentUniformData):
  proc PushGPUFragmentUniformData*(command_buffer: ptr GPUCommandBuffer_1157629099;
                                   slot_index: Uint32_1157628445; data: pointer;
                                   length: Uint32_1157628445): void {.cdecl,
      importc: "SDL_PushGPUFragmentUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUFragmentUniformData" &
        " already exists, not redeclaring")
when not declared(PushGPUComputeUniformData):
  proc PushGPUComputeUniformData*(command_buffer: ptr GPUCommandBuffer_1157629099;
                                  slot_index: Uint32_1157628445; data: pointer;
                                  length: Uint32_1157628445): void {.cdecl,
      importc: "SDL_PushGPUComputeUniformData".}
else:
  static :
    hint("Declaration of " & "PushGPUComputeUniformData" &
        " already exists, not redeclaring")
when not declared(BeginGPURenderPass):
  proc BeginGPURenderPass*(command_buffer: ptr GPUCommandBuffer_1157629099;
                           color_target_infos: ptr GPUColorTargetInfo_1157629327;
                           num_color_targets: Uint32_1157628445;
      depth_stencil_target_info: ptr GPUDepthStencilTargetInfo_1157629331): ptr GPURenderPass_1157629101 {.
      cdecl, importc: "SDL_BeginGPURenderPass".}
else:
  static :
    hint("Declaration of " & "BeginGPURenderPass" &
        " already exists, not redeclaring")
when not declared(BindGPUGraphicsPipeline):
  proc BindGPUGraphicsPipeline*(render_pass: ptr GPURenderPass_1157629101;
                                graphics_pipeline: ptr GPUGraphicsPipeline_1157629097): void {.
      cdecl, importc: "SDL_BindGPUGraphicsPipeline".}
else:
  static :
    hint("Declaration of " & "BindGPUGraphicsPipeline" &
        " already exists, not redeclaring")
when not declared(SetGPUViewport):
  proc SetGPUViewport*(render_pass: ptr GPURenderPass_1157629101;
                       viewport: ptr GPUViewport_1157629215): void {.cdecl,
      importc: "SDL_SetGPUViewport".}
else:
  static :
    hint("Declaration of " & "SetGPUViewport" &
        " already exists, not redeclaring")
when not declared(SetGPUScissor):
  proc SetGPUScissor*(render_pass: ptr GPURenderPass_1157629101;
                      scissor: ptr Rect_1157628675): void {.cdecl,
      importc: "SDL_SetGPUScissor".}
else:
  static :
    hint("Declaration of " & "SetGPUScissor" &
        " already exists, not redeclaring")
when not declared(SetGPUBlendConstants):
  proc SetGPUBlendConstants*(render_pass: ptr GPURenderPass_1157629101;
                             blend_constants: FColor_1157628655): void {.cdecl,
      importc: "SDL_SetGPUBlendConstants".}
else:
  static :
    hint("Declaration of " & "SetGPUBlendConstants" &
        " already exists, not redeclaring")
when not declared(SetGPUStencilReference):
  proc SetGPUStencilReference*(render_pass: ptr GPURenderPass_1157629101;
                               reference: Uint8_1157628437): void {.cdecl,
      importc: "SDL_SetGPUStencilReference".}
else:
  static :
    hint("Declaration of " & "SetGPUStencilReference" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexBuffers):
  proc BindGPUVertexBuffers*(render_pass: ptr GPURenderPass_1157629101;
                             first_slot: Uint32_1157628445;
                             bindings: ptr GPUBufferBinding_1157629339;
                             num_bindings: Uint32_1157628445): void {.cdecl,
      importc: "SDL_BindGPUVertexBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexBuffers" &
        " already exists, not redeclaring")
when not declared(BindGPUIndexBuffer):
  proc BindGPUIndexBuffer*(render_pass: ptr GPURenderPass_1157629101;
                           binding: ptr GPUBufferBinding_1157629339;
                           index_element_size: GPUIndexElementSize_1157629123): void {.
      cdecl, importc: "SDL_BindGPUIndexBuffer".}
else:
  static :
    hint("Declaration of " & "BindGPUIndexBuffer" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexSamplers):
  proc BindGPUVertexSamplers*(render_pass: ptr GPURenderPass_1157629101;
                              first_slot: Uint32_1157628445;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_1157629343;
                              num_bindings: Uint32_1157628445): void {.cdecl,
      importc: "SDL_BindGPUVertexSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexStorageTextures):
  proc BindGPUVertexStorageTextures*(render_pass: ptr GPURenderPass_1157629101;
                                     first_slot: Uint32_1157628445;
                                     storage_textures: ptr ptr GPUTexture_1157629089;
                                     num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUVertexStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUVertexStorageBuffers):
  proc BindGPUVertexStorageBuffers*(render_pass: ptr GPURenderPass_1157629101;
                                    first_slot: Uint32_1157628445;
                                    storage_buffers: ptr ptr GPUBuffer_1157629085;
                                    num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUVertexStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUVertexStorageBuffers" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentSamplers):
  proc BindGPUFragmentSamplers*(render_pass: ptr GPURenderPass_1157629101;
                                first_slot: Uint32_1157628445;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_1157629343;
                                num_bindings: Uint32_1157628445): void {.cdecl,
      importc: "SDL_BindGPUFragmentSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentStorageTextures):
  proc BindGPUFragmentStorageTextures*(render_pass: ptr GPURenderPass_1157629101;
                                       first_slot: Uint32_1157628445;
                                       storage_textures: ptr ptr GPUTexture_1157629089;
                                       num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUFragmentStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUFragmentStorageBuffers):
  proc BindGPUFragmentStorageBuffers*(render_pass: ptr GPURenderPass_1157629101;
                                      first_slot: Uint32_1157628445;
                                      storage_buffers: ptr ptr GPUBuffer_1157629085;
                                      num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUFragmentStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUFragmentStorageBuffers" &
        " already exists, not redeclaring")
when not declared(DrawGPUIndexedPrimitives):
  proc DrawGPUIndexedPrimitives*(render_pass: ptr GPURenderPass_1157629101;
                                 num_indices: Uint32_1157628445;
                                 num_instances: Uint32_1157628445;
                                 first_index: Uint32_1157628445;
                                 vertex_offset: Sint32_1157628443;
                                 first_instance: Uint32_1157628445): void {.
      cdecl, importc: "SDL_DrawGPUIndexedPrimitives".}
else:
  static :
    hint("Declaration of " & "DrawGPUIndexedPrimitives" &
        " already exists, not redeclaring")
when not declared(DrawGPUPrimitives):
  proc DrawGPUPrimitives*(render_pass: ptr GPURenderPass_1157629101;
                          num_vertices: Uint32_1157628445;
                          num_instances: Uint32_1157628445;
                          first_vertex: Uint32_1157628445;
                          first_instance: Uint32_1157628445): void {.cdecl,
      importc: "SDL_DrawGPUPrimitives".}
else:
  static :
    hint("Declaration of " & "DrawGPUPrimitives" &
        " already exists, not redeclaring")
when not declared(DrawGPUPrimitivesIndirect):
  proc DrawGPUPrimitivesIndirect*(render_pass: ptr GPURenderPass_1157629101;
                                  buffer: ptr GPUBuffer_1157629085;
                                  offset: Uint32_1157628445; draw_count: Uint32_1157628445): void {.
      cdecl, importc: "SDL_DrawGPUPrimitivesIndirect".}
else:
  static :
    hint("Declaration of " & "DrawGPUPrimitivesIndirect" &
        " already exists, not redeclaring")
when not declared(DrawGPUIndexedPrimitivesIndirect):
  proc DrawGPUIndexedPrimitivesIndirect*(render_pass: ptr GPURenderPass_1157629101;
      buffer: ptr GPUBuffer_1157629085; offset: Uint32_1157628445;
      draw_count: Uint32_1157628445): void {.cdecl,
      importc: "SDL_DrawGPUIndexedPrimitivesIndirect".}
else:
  static :
    hint("Declaration of " & "DrawGPUIndexedPrimitivesIndirect" &
        " already exists, not redeclaring")
when not declared(EndGPURenderPass):
  proc EndGPURenderPass*(render_pass: ptr GPURenderPass_1157629101): void {.
      cdecl, importc: "SDL_EndGPURenderPass".}
else:
  static :
    hint("Declaration of " & "EndGPURenderPass" &
        " already exists, not redeclaring")
when not declared(BeginGPUComputePass):
  proc BeginGPUComputePass*(command_buffer: ptr GPUCommandBuffer_1157629099;
      storage_texture_bindings: ptr GPUStorageTextureReadWriteBinding_1157629351;
                            num_storage_texture_bindings: Uint32_1157628445;
      storage_buffer_bindings: ptr GPUStorageBufferReadWriteBinding_1157629347;
                            num_storage_buffer_bindings: Uint32_1157628445): ptr GPUComputePass_1157629103 {.
      cdecl, importc: "SDL_BeginGPUComputePass".}
else:
  static :
    hint("Declaration of " & "BeginGPUComputePass" &
        " already exists, not redeclaring")
when not declared(BindGPUComputePipeline):
  proc BindGPUComputePipeline*(compute_pass: ptr GPUComputePass_1157629103;
                               compute_pipeline: ptr GPUComputePipeline_1157629095): void {.
      cdecl, importc: "SDL_BindGPUComputePipeline".}
else:
  static :
    hint("Declaration of " & "BindGPUComputePipeline" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeSamplers):
  proc BindGPUComputeSamplers*(compute_pass: ptr GPUComputePass_1157629103;
                               first_slot: Uint32_1157628445;
      texture_sampler_bindings: ptr GPUTextureSamplerBinding_1157629343;
                               num_bindings: Uint32_1157628445): void {.cdecl,
      importc: "SDL_BindGPUComputeSamplers".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeSamplers" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeStorageTextures):
  proc BindGPUComputeStorageTextures*(compute_pass: ptr GPUComputePass_1157629103;
                                      first_slot: Uint32_1157628445;
                                      storage_textures: ptr ptr GPUTexture_1157629089;
                                      num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUComputeStorageTextures".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeStorageTextures" &
        " already exists, not redeclaring")
when not declared(BindGPUComputeStorageBuffers):
  proc BindGPUComputeStorageBuffers*(compute_pass: ptr GPUComputePass_1157629103;
                                     first_slot: Uint32_1157628445;
                                     storage_buffers: ptr ptr GPUBuffer_1157629085;
                                     num_bindings: Uint32_1157628445): void {.
      cdecl, importc: "SDL_BindGPUComputeStorageBuffers".}
else:
  static :
    hint("Declaration of " & "BindGPUComputeStorageBuffers" &
        " already exists, not redeclaring")
when not declared(DispatchGPUCompute):
  proc DispatchGPUCompute*(compute_pass: ptr GPUComputePass_1157629103;
                           groupcount_x: Uint32_1157628445;
                           groupcount_y: Uint32_1157628445; groupcount_z: Uint32_1157628445): void {.
      cdecl, importc: "SDL_DispatchGPUCompute".}
else:
  static :
    hint("Declaration of " & "DispatchGPUCompute" &
        " already exists, not redeclaring")
when not declared(DispatchGPUComputeIndirect):
  proc DispatchGPUComputeIndirect*(compute_pass: ptr GPUComputePass_1157629103;
                                   buffer: ptr GPUBuffer_1157629085;
                                   offset: Uint32_1157628445): void {.cdecl,
      importc: "SDL_DispatchGPUComputeIndirect".}
else:
  static :
    hint("Declaration of " & "DispatchGPUComputeIndirect" &
        " already exists, not redeclaring")
when not declared(EndGPUComputePass):
  proc EndGPUComputePass*(compute_pass: ptr GPUComputePass_1157629103): void {.
      cdecl, importc: "SDL_EndGPUComputePass".}
else:
  static :
    hint("Declaration of " & "EndGPUComputePass" &
        " already exists, not redeclaring")
when not declared(MapGPUTransferBuffer):
  proc MapGPUTransferBuffer*(device: ptr GPUDevice_1157629083;
                             transfer_buffer: ptr GPUTransferBuffer_1157629087;
                             cycle: bool): pointer {.cdecl,
      importc: "SDL_MapGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "MapGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(UnmapGPUTransferBuffer):
  proc UnmapGPUTransferBuffer*(device: ptr GPUDevice_1157629083;
                               transfer_buffer: ptr GPUTransferBuffer_1157629087): void {.
      cdecl, importc: "SDL_UnmapGPUTransferBuffer".}
else:
  static :
    hint("Declaration of " & "UnmapGPUTransferBuffer" &
        " already exists, not redeclaring")
when not declared(BeginGPUCopyPass):
  proc BeginGPUCopyPass*(command_buffer: ptr GPUCommandBuffer_1157629099): ptr GPUCopyPass_1157629105 {.
      cdecl, importc: "SDL_BeginGPUCopyPass".}
else:
  static :
    hint("Declaration of " & "BeginGPUCopyPass" &
        " already exists, not redeclaring")
when not declared(UploadToGPUTexture):
  proc UploadToGPUTexture*(copy_pass: ptr GPUCopyPass_1157629105;
                           source: ptr GPUTextureTransferInfo_1157629219;
                           destination: ptr GPUTextureRegion_1157629231;
                           cycle: bool): void {.cdecl,
      importc: "SDL_UploadToGPUTexture".}
else:
  static :
    hint("Declaration of " & "UploadToGPUTexture" &
        " already exists, not redeclaring")
when not declared(UploadToGPUBuffer):
  proc UploadToGPUBuffer*(copy_pass: ptr GPUCopyPass_1157629105;
                          source: ptr GPUTransferBufferLocation_1157629223;
                          destination: ptr GPUBufferRegion_1157629243;
                          cycle: bool): void {.cdecl,
      importc: "SDL_UploadToGPUBuffer".}
else:
  static :
    hint("Declaration of " & "UploadToGPUBuffer" &
        " already exists, not redeclaring")
when not declared(CopyGPUTextureToTexture):
  proc CopyGPUTextureToTexture*(copy_pass: ptr GPUCopyPass_1157629105;
                                source: ptr GPUTextureLocation_1157629227;
                                destination: ptr GPUTextureLocation_1157629227;
                                w: Uint32_1157628445; h: Uint32_1157628445;
                                d: Uint32_1157628445; cycle: bool): void {.
      cdecl, importc: "SDL_CopyGPUTextureToTexture".}
else:
  static :
    hint("Declaration of " & "CopyGPUTextureToTexture" &
        " already exists, not redeclaring")
when not declared(CopyGPUBufferToBuffer):
  proc CopyGPUBufferToBuffer*(copy_pass: ptr GPUCopyPass_1157629105;
                              source: ptr GPUBufferLocation_1157629239;
                              destination: ptr GPUBufferLocation_1157629239;
                              size: Uint32_1157628445; cycle: bool): void {.
      cdecl, importc: "SDL_CopyGPUBufferToBuffer".}
else:
  static :
    hint("Declaration of " & "CopyGPUBufferToBuffer" &
        " already exists, not redeclaring")
when not declared(DownloadFromGPUTexture):
  proc DownloadFromGPUTexture*(copy_pass: ptr GPUCopyPass_1157629105;
                               source: ptr GPUTextureRegion_1157629231;
                               destination: ptr GPUTextureTransferInfo_1157629219): void {.
      cdecl, importc: "SDL_DownloadFromGPUTexture".}
else:
  static :
    hint("Declaration of " & "DownloadFromGPUTexture" &
        " already exists, not redeclaring")
when not declared(DownloadFromGPUBuffer):
  proc DownloadFromGPUBuffer*(copy_pass: ptr GPUCopyPass_1157629105;
                              source: ptr GPUBufferRegion_1157629243;
                              destination: ptr GPUTransferBufferLocation_1157629223): void {.
      cdecl, importc: "SDL_DownloadFromGPUBuffer".}
else:
  static :
    hint("Declaration of " & "DownloadFromGPUBuffer" &
        " already exists, not redeclaring")
when not declared(EndGPUCopyPass):
  proc EndGPUCopyPass*(copy_pass: ptr GPUCopyPass_1157629105): void {.cdecl,
      importc: "SDL_EndGPUCopyPass".}
else:
  static :
    hint("Declaration of " & "EndGPUCopyPass" &
        " already exists, not redeclaring")
when not declared(GenerateMipmapsForGPUTexture):
  proc GenerateMipmapsForGPUTexture*(command_buffer: ptr GPUCommandBuffer_1157629099;
                                     texture: ptr GPUTexture_1157629089): void {.
      cdecl, importc: "SDL_GenerateMipmapsForGPUTexture".}
else:
  static :
    hint("Declaration of " & "GenerateMipmapsForGPUTexture" &
        " already exists, not redeclaring")
when not declared(BlitGPUTexture):
  proc BlitGPUTexture*(command_buffer: ptr GPUCommandBuffer_1157629099;
                       info: ptr GPUBlitInfo_1157629335): void {.cdecl,
      importc: "SDL_BlitGPUTexture".}
else:
  static :
    hint("Declaration of " & "BlitGPUTexture" &
        " already exists, not redeclaring")
when not declared(WindowSupportsGPUSwapchainComposition):
  proc WindowSupportsGPUSwapchainComposition*(device: ptr GPUDevice_1157629083;
      window: ptr Window_1157628729;
      swapchain_composition: GPUSwapchainComposition_1157629211): bool {.cdecl,
      importc: "SDL_WindowSupportsGPUSwapchainComposition".}
else:
  static :
    hint("Declaration of " & "WindowSupportsGPUSwapchainComposition" &
        " already exists, not redeclaring")
when not declared(WindowSupportsGPUPresentMode):
  proc WindowSupportsGPUPresentMode*(device: ptr GPUDevice_1157629083;
                                     window: ptr Window_1157628729;
                                     present_mode: GPUPresentMode_1157629207): bool {.
      cdecl, importc: "SDL_WindowSupportsGPUPresentMode".}
else:
  static :
    hint("Declaration of " & "WindowSupportsGPUPresentMode" &
        " already exists, not redeclaring")
when not declared(ClaimWindowForGPUDevice):
  proc ClaimWindowForGPUDevice*(device: ptr GPUDevice_1157629083;
                                window: ptr Window_1157628729): bool {.cdecl,
      importc: "SDL_ClaimWindowForGPUDevice".}
else:
  static :
    hint("Declaration of " & "ClaimWindowForGPUDevice" &
        " already exists, not redeclaring")
when not declared(ReleaseWindowFromGPUDevice):
  proc ReleaseWindowFromGPUDevice*(device: ptr GPUDevice_1157629083;
                                   window: ptr Window_1157628729): void {.cdecl,
      importc: "SDL_ReleaseWindowFromGPUDevice".}
else:
  static :
    hint("Declaration of " & "ReleaseWindowFromGPUDevice" &
        " already exists, not redeclaring")
when not declared(SetGPUSwapchainParameters):
  proc SetGPUSwapchainParameters*(device: ptr GPUDevice_1157629083;
                                  window: ptr Window_1157628729;
      swapchain_composition: GPUSwapchainComposition_1157629211;
                                  present_mode: GPUPresentMode_1157629207): bool {.
      cdecl, importc: "SDL_SetGPUSwapchainParameters".}
else:
  static :
    hint("Declaration of " & "SetGPUSwapchainParameters" &
        " already exists, not redeclaring")
when not declared(SetGPUAllowedFramesInFlight):
  proc SetGPUAllowedFramesInFlight*(device: ptr GPUDevice_1157629083;
                                    allowed_frames_in_flight: Uint32_1157628445): bool {.
      cdecl, importc: "SDL_SetGPUAllowedFramesInFlight".}
else:
  static :
    hint("Declaration of " & "SetGPUAllowedFramesInFlight" &
        " already exists, not redeclaring")
when not declared(GetGPUSwapchainTextureFormat):
  proc GetGPUSwapchainTextureFormat*(device: ptr GPUDevice_1157629083;
                                     window: ptr Window_1157628729): GPUTextureFormat_1157629127 {.
      cdecl, importc: "SDL_GetGPUSwapchainTextureFormat".}
else:
  static :
    hint("Declaration of " & "GetGPUSwapchainTextureFormat" &
        " already exists, not redeclaring")
when not declared(AcquireGPUSwapchainTexture):
  proc AcquireGPUSwapchainTexture*(command_buffer: ptr GPUCommandBuffer_1157629099;
                                   window: ptr Window_1157628729;
                                   swapchain_texture: ptr ptr GPUTexture_1157629089;
                                   swapchain_texture_width: ptr Uint32_1157628445;
                                   swapchain_texture_height: ptr Uint32_1157628445): bool {.
      cdecl, importc: "SDL_AcquireGPUSwapchainTexture".}
else:
  static :
    hint("Declaration of " & "AcquireGPUSwapchainTexture" &
        " already exists, not redeclaring")
when not declared(WaitForGPUSwapchain):
  proc WaitForGPUSwapchain*(device: ptr GPUDevice_1157629083; window: ptr Window_1157628729): bool {.
      cdecl, importc: "SDL_WaitForGPUSwapchain".}
else:
  static :
    hint("Declaration of " & "WaitForGPUSwapchain" &
        " already exists, not redeclaring")
when not declared(WaitAndAcquireGPUSwapchainTexture):
  proc WaitAndAcquireGPUSwapchainTexture*(command_buffer: ptr GPUCommandBuffer_1157629099;
      window: ptr Window_1157628729; swapchain_texture: ptr ptr GPUTexture_1157629089;
      swapchain_texture_width: ptr Uint32_1157628445;
      swapchain_texture_height: ptr Uint32_1157628445): bool {.cdecl,
      importc: "SDL_WaitAndAcquireGPUSwapchainTexture".}
else:
  static :
    hint("Declaration of " & "WaitAndAcquireGPUSwapchainTexture" &
        " already exists, not redeclaring")
when not declared(SubmitGPUCommandBuffer):
  proc SubmitGPUCommandBuffer*(command_buffer: ptr GPUCommandBuffer_1157629099): bool {.
      cdecl, importc: "SDL_SubmitGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "SubmitGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(SubmitGPUCommandBufferAndAcquireFence):
  proc SubmitGPUCommandBufferAndAcquireFence*(
      command_buffer: ptr GPUCommandBuffer_1157629099): ptr GPUFence_1157629107 {.
      cdecl, importc: "SDL_SubmitGPUCommandBufferAndAcquireFence".}
else:
  static :
    hint("Declaration of " & "SubmitGPUCommandBufferAndAcquireFence" &
        " already exists, not redeclaring")
when not declared(CancelGPUCommandBuffer):
  proc CancelGPUCommandBuffer*(command_buffer: ptr GPUCommandBuffer_1157629099): bool {.
      cdecl, importc: "SDL_CancelGPUCommandBuffer".}
else:
  static :
    hint("Declaration of " & "CancelGPUCommandBuffer" &
        " already exists, not redeclaring")
when not declared(WaitForGPUIdle):
  proc WaitForGPUIdle*(device: ptr GPUDevice_1157629083): bool {.cdecl,
      importc: "SDL_WaitForGPUIdle".}
else:
  static :
    hint("Declaration of " & "WaitForGPUIdle" &
        " already exists, not redeclaring")
when not declared(WaitForGPUFences):
  proc WaitForGPUFences*(device: ptr GPUDevice_1157629083; wait_all: bool;
                         fences: ptr ptr GPUFence_1157629107; num_fences: Uint32_1157628445): bool {.
      cdecl, importc: "SDL_WaitForGPUFences".}
else:
  static :
    hint("Declaration of " & "WaitForGPUFences" &
        " already exists, not redeclaring")
when not declared(QueryGPUFence):
  proc QueryGPUFence*(device: ptr GPUDevice_1157629083; fence: ptr GPUFence_1157629107): bool {.
      cdecl, importc: "SDL_QueryGPUFence".}
else:
  static :
    hint("Declaration of " & "QueryGPUFence" &
        " already exists, not redeclaring")
when not declared(ReleaseGPUFence):
  proc ReleaseGPUFence*(device: ptr GPUDevice_1157629083; fence: ptr GPUFence_1157629107): void {.
      cdecl, importc: "SDL_ReleaseGPUFence".}
else:
  static :
    hint("Declaration of " & "ReleaseGPUFence" &
        " already exists, not redeclaring")
when not declared(GPUTextureFormatTexelBlockSize):
  proc GPUTextureFormatTexelBlockSize*(format: GPUTextureFormat_1157629127): Uint32_1157628445 {.
      cdecl, importc: "SDL_GPUTextureFormatTexelBlockSize".}
else:
  static :
    hint("Declaration of " & "GPUTextureFormatTexelBlockSize" &
        " already exists, not redeclaring")
when not declared(GPUTextureSupportsFormat):
  proc GPUTextureSupportsFormat*(device: ptr GPUDevice_1157629083;
                                 format: GPUTextureFormat_1157629127;
                                 type_arg: GPUTextureType_1157629133;
                                 usage: GPUTextureUsageFlags_1157629129): bool {.
      cdecl, importc: "SDL_GPUTextureSupportsFormat".}
else:
  static :
    hint("Declaration of " & "GPUTextureSupportsFormat" &
        " already exists, not redeclaring")
when not declared(GPUTextureSupportsSampleCount):
  proc GPUTextureSupportsSampleCount*(device: ptr GPUDevice_1157629083;
                                      format: GPUTextureFormat_1157629127;
                                      sample_count: GPUSampleCount_1157629137): bool {.
      cdecl, importc: "SDL_GPUTextureSupportsSampleCount".}
else:
  static :
    hint("Declaration of " & "GPUTextureSupportsSampleCount" &
        " already exists, not redeclaring")
when not declared(CalculateGPUTextureFormatSize):
  proc CalculateGPUTextureFormatSize*(format: GPUTextureFormat_1157629127;
                                      width: Uint32_1157628445; height: Uint32_1157628445;
                                      depth_or_layer_count: Uint32_1157628445): Uint32_1157628445 {.
      cdecl, importc: "SDL_CalculateGPUTextureFormatSize".}
else:
  static :
    hint("Declaration of " & "CalculateGPUTextureFormatSize" &
        " already exists, not redeclaring")
when not declared(GetHaptics):
  proc GetHaptics*(count: ptr cint): ptr HapticID_1157629387 {.cdecl,
      importc: "SDL_GetHaptics".}
else:
  static :
    hint("Declaration of " & "GetHaptics" & " already exists, not redeclaring")
when not declared(GetHapticNameForID):
  proc GetHapticNameForID*(instance_id: HapticID_1157629387): cstring {.cdecl,
      importc: "SDL_GetHapticNameForID".}
else:
  static :
    hint("Declaration of " & "GetHapticNameForID" &
        " already exists, not redeclaring")
when not declared(OpenHaptic):
  proc OpenHaptic*(instance_id: HapticID_1157629387): ptr Haptic_1157629353 {.
      cdecl, importc: "SDL_OpenHaptic".}
else:
  static :
    hint("Declaration of " & "OpenHaptic" & " already exists, not redeclaring")
when not declared(GetHapticFromID):
  proc GetHapticFromID*(instance_id: HapticID_1157629387): ptr Haptic_1157629353 {.
      cdecl, importc: "SDL_GetHapticFromID".}
else:
  static :
    hint("Declaration of " & "GetHapticFromID" &
        " already exists, not redeclaring")
when not declared(GetHapticID):
  proc GetHapticID*(haptic: ptr Haptic_1157629353): HapticID_1157629387 {.cdecl,
      importc: "SDL_GetHapticID".}
else:
  static :
    hint("Declaration of " & "GetHapticID" & " already exists, not redeclaring")
when not declared(GetHapticName):
  proc GetHapticName*(haptic: ptr Haptic_1157629353): cstring {.cdecl,
      importc: "SDL_GetHapticName".}
else:
  static :
    hint("Declaration of " & "GetHapticName" &
        " already exists, not redeclaring")
when not declared(IsMouseHaptic):
  proc IsMouseHaptic*(): bool {.cdecl, importc: "SDL_IsMouseHaptic".}
else:
  static :
    hint("Declaration of " & "IsMouseHaptic" &
        " already exists, not redeclaring")
when not declared(OpenHapticFromMouse):
  proc OpenHapticFromMouse*(): ptr Haptic_1157629353 {.cdecl,
      importc: "SDL_OpenHapticFromMouse".}
else:
  static :
    hint("Declaration of " & "OpenHapticFromMouse" &
        " already exists, not redeclaring")
when not declared(IsJoystickHaptic):
  proc IsJoystickHaptic*(joystick: ptr Joystick_1157628799): bool {.cdecl,
      importc: "SDL_IsJoystickHaptic".}
else:
  static :
    hint("Declaration of " & "IsJoystickHaptic" &
        " already exists, not redeclaring")
when not declared(OpenHapticFromJoystick):
  proc OpenHapticFromJoystick*(joystick: ptr Joystick_1157628799): ptr Haptic_1157629353 {.
      cdecl, importc: "SDL_OpenHapticFromJoystick".}
else:
  static :
    hint("Declaration of " & "OpenHapticFromJoystick" &
        " already exists, not redeclaring")
when not declared(CloseHaptic):
  proc CloseHaptic*(haptic: ptr Haptic_1157629353): void {.cdecl,
      importc: "SDL_CloseHaptic".}
else:
  static :
    hint("Declaration of " & "CloseHaptic" & " already exists, not redeclaring")
when not declared(GetMaxHapticEffects):
  proc GetMaxHapticEffects*(haptic: ptr Haptic_1157629353): cint {.cdecl,
      importc: "SDL_GetMaxHapticEffects".}
else:
  static :
    hint("Declaration of " & "GetMaxHapticEffects" &
        " already exists, not redeclaring")
when not declared(GetMaxHapticEffectsPlaying):
  proc GetMaxHapticEffectsPlaying*(haptic: ptr Haptic_1157629353): cint {.cdecl,
      importc: "SDL_GetMaxHapticEffectsPlaying".}
else:
  static :
    hint("Declaration of " & "GetMaxHapticEffectsPlaying" &
        " already exists, not redeclaring")
when not declared(GetHapticFeatures):
  proc GetHapticFeatures*(haptic: ptr Haptic_1157629353): Uint32_1157628445 {.
      cdecl, importc: "SDL_GetHapticFeatures".}
else:
  static :
    hint("Declaration of " & "GetHapticFeatures" &
        " already exists, not redeclaring")
when not declared(GetNumHapticAxes):
  proc GetNumHapticAxes*(haptic: ptr Haptic_1157629353): cint {.cdecl,
      importc: "SDL_GetNumHapticAxes".}
else:
  static :
    hint("Declaration of " & "GetNumHapticAxes" &
        " already exists, not redeclaring")
when not declared(HapticEffectSupported):
  proc HapticEffectSupported*(haptic: ptr Haptic_1157629353;
                              effect: ptr HapticEffect_1157629385): bool {.
      cdecl, importc: "SDL_HapticEffectSupported".}
else:
  static :
    hint("Declaration of " & "HapticEffectSupported" &
        " already exists, not redeclaring")
when not declared(CreateHapticEffect):
  proc CreateHapticEffect*(haptic: ptr Haptic_1157629353;
                           effect: ptr HapticEffect_1157629385): cint {.cdecl,
      importc: "SDL_CreateHapticEffect".}
else:
  static :
    hint("Declaration of " & "CreateHapticEffect" &
        " already exists, not redeclaring")
when not declared(UpdateHapticEffect):
  proc UpdateHapticEffect*(haptic: ptr Haptic_1157629353; effect: cint;
                           data: ptr HapticEffect_1157629385): bool {.cdecl,
      importc: "SDL_UpdateHapticEffect".}
else:
  static :
    hint("Declaration of " & "UpdateHapticEffect" &
        " already exists, not redeclaring")
when not declared(RunHapticEffect):
  proc RunHapticEffect*(haptic: ptr Haptic_1157629353; effect: cint;
                        iterations: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_RunHapticEffect".}
else:
  static :
    hint("Declaration of " & "RunHapticEffect" &
        " already exists, not redeclaring")
when not declared(StopHapticEffect):
  proc StopHapticEffect*(haptic: ptr Haptic_1157629353; effect: cint): bool {.
      cdecl, importc: "SDL_StopHapticEffect".}
else:
  static :
    hint("Declaration of " & "StopHapticEffect" &
        " already exists, not redeclaring")
when not declared(DestroyHapticEffect):
  proc DestroyHapticEffect*(haptic: ptr Haptic_1157629353; effect: cint): void {.
      cdecl, importc: "SDL_DestroyHapticEffect".}
else:
  static :
    hint("Declaration of " & "DestroyHapticEffect" &
        " already exists, not redeclaring")
when not declared(GetHapticEffectStatus):
  proc GetHapticEffectStatus*(haptic: ptr Haptic_1157629353; effect: cint): bool {.
      cdecl, importc: "SDL_GetHapticEffectStatus".}
else:
  static :
    hint("Declaration of " & "GetHapticEffectStatus" &
        " already exists, not redeclaring")
when not declared(SetHapticGain):
  proc SetHapticGain*(haptic: ptr Haptic_1157629353; gain: cint): bool {.cdecl,
      importc: "SDL_SetHapticGain".}
else:
  static :
    hint("Declaration of " & "SetHapticGain" &
        " already exists, not redeclaring")
when not declared(SetHapticAutocenter):
  proc SetHapticAutocenter*(haptic: ptr Haptic_1157629353; autocenter: cint): bool {.
      cdecl, importc: "SDL_SetHapticAutocenter".}
else:
  static :
    hint("Declaration of " & "SetHapticAutocenter" &
        " already exists, not redeclaring")
when not declared(PauseHaptic):
  proc PauseHaptic*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_PauseHaptic".}
else:
  static :
    hint("Declaration of " & "PauseHaptic" & " already exists, not redeclaring")
when not declared(ResumeHaptic):
  proc ResumeHaptic*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_ResumeHaptic".}
else:
  static :
    hint("Declaration of " & "ResumeHaptic" & " already exists, not redeclaring")
when not declared(StopHapticEffects):
  proc StopHapticEffects*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_StopHapticEffects".}
else:
  static :
    hint("Declaration of " & "StopHapticEffects" &
        " already exists, not redeclaring")
when not declared(HapticRumbleSupported):
  proc HapticRumbleSupported*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_HapticRumbleSupported".}
else:
  static :
    hint("Declaration of " & "HapticRumbleSupported" &
        " already exists, not redeclaring")
when not declared(InitHapticRumble):
  proc InitHapticRumble*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_InitHapticRumble".}
else:
  static :
    hint("Declaration of " & "InitHapticRumble" &
        " already exists, not redeclaring")
when not declared(PlayHapticRumble):
  proc PlayHapticRumble*(haptic: ptr Haptic_1157629353; strength: cfloat;
                         length: Uint32_1157628445): bool {.cdecl,
      importc: "SDL_PlayHapticRumble".}
else:
  static :
    hint("Declaration of " & "PlayHapticRumble" &
        " already exists, not redeclaring")
when not declared(StopHapticRumble):
  proc StopHapticRumble*(haptic: ptr Haptic_1157629353): bool {.cdecl,
      importc: "SDL_StopHapticRumble".}
else:
  static :
    hint("Declaration of " & "StopHapticRumble" &
        " already exists, not redeclaring")
when not declared(hid_init):
  proc hid_init*(): cint {.cdecl, importc: "SDL_hid_init".}
else:
  static :
    hint("Declaration of " & "hid_init" & " already exists, not redeclaring")
when not declared(hid_exit):
  proc hid_exit*(): cint {.cdecl, importc: "SDL_hid_exit".}
else:
  static :
    hint("Declaration of " & "hid_exit" & " already exists, not redeclaring")
when not declared(hid_device_change_count):
  proc hid_device_change_count*(): Uint32_1157628445 {.cdecl,
      importc: "SDL_hid_device_change_count".}
else:
  static :
    hint("Declaration of " & "hid_device_change_count" &
        " already exists, not redeclaring")
when not declared(hid_enumerate):
  proc hid_enumerate*(vendor_id: cushort; product_id: cushort): ptr hid_device_info_1157629397 {.
      cdecl, importc: "SDL_hid_enumerate".}
else:
  static :
    hint("Declaration of " & "hid_enumerate" &
        " already exists, not redeclaring")
when not declared(hid_free_enumeration):
  proc hid_free_enumeration*(devs: ptr hid_device_info_1157629397): void {.
      cdecl, importc: "SDL_hid_free_enumeration".}
else:
  static :
    hint("Declaration of " & "hid_free_enumeration" &
        " already exists, not redeclaring")
when not declared(hid_open):
  proc hid_open*(vendor_id: cushort; product_id: cushort;
                 serial_number: ptr wchar_t_1157628475): ptr hid_device_1157629389 {.
      cdecl, importc: "SDL_hid_open".}
else:
  static :
    hint("Declaration of " & "hid_open" & " already exists, not redeclaring")
when not declared(hid_open_path):
  proc hid_open_path*(path: cstring): ptr hid_device_1157629389 {.cdecl,
      importc: "SDL_hid_open_path".}
else:
  static :
    hint("Declaration of " & "hid_open_path" &
        " already exists, not redeclaring")
when not declared(hid_write):
  proc hid_write*(dev: ptr hid_device_1157629389; data: ptr uint8;
                  length: csize_t): cint {.cdecl, importc: "SDL_hid_write".}
else:
  static :
    hint("Declaration of " & "hid_write" & " already exists, not redeclaring")
when not declared(hid_read_timeout):
  proc hid_read_timeout*(dev: ptr hid_device_1157629389; data: ptr uint8;
                         length: csize_t; milliseconds: cint): cint {.cdecl,
      importc: "SDL_hid_read_timeout".}
else:
  static :
    hint("Declaration of " & "hid_read_timeout" &
        " already exists, not redeclaring")
when not declared(hid_read):
  proc hid_read*(dev: ptr hid_device_1157629389; data: ptr uint8;
                 length: csize_t): cint {.cdecl, importc: "SDL_hid_read".}
else:
  static :
    hint("Declaration of " & "hid_read" & " already exists, not redeclaring")
when not declared(hid_set_nonblocking):
  proc hid_set_nonblocking*(dev: ptr hid_device_1157629389; nonblock: cint): cint {.
      cdecl, importc: "SDL_hid_set_nonblocking".}
else:
  static :
    hint("Declaration of " & "hid_set_nonblocking" &
        " already exists, not redeclaring")
when not declared(hid_send_feature_report):
  proc hid_send_feature_report*(dev: ptr hid_device_1157629389; data: ptr uint8;
                                length: csize_t): cint {.cdecl,
      importc: "SDL_hid_send_feature_report".}
else:
  static :
    hint("Declaration of " & "hid_send_feature_report" &
        " already exists, not redeclaring")
when not declared(hid_get_feature_report):
  proc hid_get_feature_report*(dev: ptr hid_device_1157629389; data: ptr uint8;
                               length: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_feature_report".}
else:
  static :
    hint("Declaration of " & "hid_get_feature_report" &
        " already exists, not redeclaring")
when not declared(hid_get_input_report):
  proc hid_get_input_report*(dev: ptr hid_device_1157629389; data: ptr uint8;
                             length: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_input_report".}
else:
  static :
    hint("Declaration of " & "hid_get_input_report" &
        " already exists, not redeclaring")
when not declared(hid_close):
  proc hid_close*(dev: ptr hid_device_1157629389): cint {.cdecl,
      importc: "SDL_hid_close".}
else:
  static :
    hint("Declaration of " & "hid_close" & " already exists, not redeclaring")
when not declared(hid_get_manufacturer_string):
  proc hid_get_manufacturer_string*(dev: ptr hid_device_1157629389;
                                    string_arg: ptr wchar_t_1157628475;
                                    maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_manufacturer_string".}
else:
  static :
    hint("Declaration of " & "hid_get_manufacturer_string" &
        " already exists, not redeclaring")
when not declared(hid_get_product_string):
  proc hid_get_product_string*(dev: ptr hid_device_1157629389;
                               string_arg: ptr wchar_t_1157628475;
                               maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_product_string".}
else:
  static :
    hint("Declaration of " & "hid_get_product_string" &
        " already exists, not redeclaring")
when not declared(hid_get_serial_number_string):
  proc hid_get_serial_number_string*(dev: ptr hid_device_1157629389;
                                     string_arg: ptr wchar_t_1157628475;
                                     maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_serial_number_string".}
else:
  static :
    hint("Declaration of " & "hid_get_serial_number_string" &
        " already exists, not redeclaring")
when not declared(hid_get_indexed_string):
  proc hid_get_indexed_string*(dev: ptr hid_device_1157629389;
                               string_index: cint; string_arg: ptr wchar_t_1157628475;
                               maxlen: csize_t): cint {.cdecl,
      importc: "SDL_hid_get_indexed_string".}
else:
  static :
    hint("Declaration of " & "hid_get_indexed_string" &
        " already exists, not redeclaring")
when not declared(hid_get_device_info):
  proc hid_get_device_info*(dev: ptr hid_device_1157629389): ptr hid_device_info_1157629397 {.
      cdecl, importc: "SDL_hid_get_device_info".}
else:
  static :
    hint("Declaration of " & "hid_get_device_info" &
        " already exists, not redeclaring")
when not declared(hid_get_report_descriptor):
  proc hid_get_report_descriptor*(dev: ptr hid_device_1157629389;
                                  buf: ptr uint8; buf_size: csize_t): cint {.
      cdecl, importc: "SDL_hid_get_report_descriptor".}
else:
  static :
    hint("Declaration of " & "hid_get_report_descriptor" &
        " already exists, not redeclaring")
when not declared(hid_ble_scan):
  proc hid_ble_scan*(active: bool): void {.cdecl, importc: "SDL_hid_ble_scan".}
else:
  static :
    hint("Declaration of " & "hid_ble_scan" & " already exists, not redeclaring")
when not declared(SetHintWithPriority):
  proc SetHintWithPriority*(name: cstring; value: cstring;
                            priority: HintPriority_1157629401): bool {.cdecl,
      importc: "SDL_SetHintWithPriority".}
else:
  static :
    hint("Declaration of " & "SetHintWithPriority" &
        " already exists, not redeclaring")
when not declared(SetHint):
  proc SetHint*(name: cstring; value: cstring): bool {.cdecl,
      importc: "SDL_SetHint".}
else:
  static :
    hint("Declaration of " & "SetHint" & " already exists, not redeclaring")
when not declared(ResetHint):
  proc ResetHint*(name: cstring): bool {.cdecl, importc: "SDL_ResetHint".}
else:
  static :
    hint("Declaration of " & "ResetHint" & " already exists, not redeclaring")
when not declared(ResetHints):
  proc ResetHints*(): void {.cdecl, importc: "SDL_ResetHints".}
else:
  static :
    hint("Declaration of " & "ResetHints" & " already exists, not redeclaring")
when not declared(GetHint):
  proc GetHint*(name: cstring): cstring {.cdecl, importc: "SDL_GetHint".}
else:
  static :
    hint("Declaration of " & "GetHint" & " already exists, not redeclaring")
when not declared(GetHintBoolean):
  proc GetHintBoolean*(name: cstring; default_value: bool): bool {.cdecl,
      importc: "SDL_GetHintBoolean".}
else:
  static :
    hint("Declaration of " & "GetHintBoolean" &
        " already exists, not redeclaring")
when not declared(AddHintCallback):
  proc AddHintCallback*(name: cstring; callback: HintCallback_1157629403;
                        userdata: pointer): bool {.cdecl,
      importc: "SDL_AddHintCallback".}
else:
  static :
    hint("Declaration of " & "AddHintCallback" &
        " already exists, not redeclaring")
when not declared(RemoveHintCallback):
  proc RemoveHintCallback*(name: cstring; callback: HintCallback_1157629403;
                           userdata: pointer): void {.cdecl,
      importc: "SDL_RemoveHintCallback".}
else:
  static :
    hint("Declaration of " & "RemoveHintCallback" &
        " already exists, not redeclaring")
when not declared(Init):
  proc Init*(flags: InitFlags_1157629405): bool {.cdecl, importc: "SDL_Init".}
else:
  static :
    hint("Declaration of " & "Init" & " already exists, not redeclaring")
when not declared(InitSubSystem):
  proc InitSubSystem*(flags: InitFlags_1157629405): bool {.cdecl,
      importc: "SDL_InitSubSystem".}
else:
  static :
    hint("Declaration of " & "InitSubSystem" &
        " already exists, not redeclaring")
when not declared(QuitSubSystem):
  proc QuitSubSystem*(flags: InitFlags_1157629405): void {.cdecl,
      importc: "SDL_QuitSubSystem".}
else:
  static :
    hint("Declaration of " & "QuitSubSystem" &
        " already exists, not redeclaring")
when not declared(WasInit):
  proc WasInit*(flags: InitFlags_1157629405): InitFlags_1157629405 {.cdecl,
      importc: "SDL_WasInit".}
else:
  static :
    hint("Declaration of " & "WasInit" & " already exists, not redeclaring")
when not declared(Quit_proc):
  proc Quit_proc*(): void {.cdecl, importc: "SDL_Quit".}
else:
  static :
    hint("Declaration of " & "Quit_proc" & " already exists, not redeclaring")
when not declared(IsMainThread):
  proc IsMainThread*(): bool {.cdecl, importc: "SDL_IsMainThread".}
else:
  static :
    hint("Declaration of " & "IsMainThread" & " already exists, not redeclaring")
when not declared(RunOnMainThread):
  proc RunOnMainThread*(callback: MainThreadCallback_1157629419;
                        userdata: pointer; wait_complete: bool): bool {.cdecl,
      importc: "SDL_RunOnMainThread".}
else:
  static :
    hint("Declaration of " & "RunOnMainThread" &
        " already exists, not redeclaring")
when not declared(SetAppMetadata):
  proc SetAppMetadata*(appname: cstring; appversion: cstring;
                       appidentifier: cstring): bool {.cdecl,
      importc: "SDL_SetAppMetadata".}
else:
  static :
    hint("Declaration of " & "SetAppMetadata" &
        " already exists, not redeclaring")
when not declared(SetAppMetadataProperty):
  proc SetAppMetadataProperty*(name: cstring; value: cstring): bool {.cdecl,
      importc: "SDL_SetAppMetadataProperty".}
else:
  static :
    hint("Declaration of " & "SetAppMetadataProperty" &
        " already exists, not redeclaring")
when not declared(GetAppMetadataProperty):
  proc GetAppMetadataProperty*(name: cstring): cstring {.cdecl,
      importc: "SDL_GetAppMetadataProperty".}
else:
  static :
    hint("Declaration of " & "GetAppMetadataProperty" &
        " already exists, not redeclaring")
when not declared(LoadObject):
  proc LoadObject*(sofile: cstring): ptr SharedObject_1157629421 {.cdecl,
      importc: "SDL_LoadObject".}
else:
  static :
    hint("Declaration of " & "LoadObject" & " already exists, not redeclaring")
when not declared(LoadFunction):
  proc LoadFunction*(handle: ptr SharedObject_1157629421; name: cstring): FunctionPointer_1157628479 {.
      cdecl, importc: "SDL_LoadFunction".}
else:
  static :
    hint("Declaration of " & "LoadFunction" & " already exists, not redeclaring")
when not declared(UnloadObject):
  proc UnloadObject*(handle: ptr SharedObject_1157629421): void {.cdecl,
      importc: "SDL_UnloadObject".}
else:
  static :
    hint("Declaration of " & "UnloadObject" & " already exists, not redeclaring")
when not declared(GetPreferredLocales):
  proc GetPreferredLocales*(count: ptr cint): ptr ptr Locale_1157629425 {.cdecl,
      importc: "SDL_GetPreferredLocales".}
else:
  static :
    hint("Declaration of " & "GetPreferredLocales" &
        " already exists, not redeclaring")
when not declared(SetLogPriorities):
  proc SetLogPriorities*(priority: LogPriority_1157629433): void {.cdecl,
      importc: "SDL_SetLogPriorities".}
else:
  static :
    hint("Declaration of " & "SetLogPriorities" &
        " already exists, not redeclaring")
when not declared(SetLogPriority):
  proc SetLogPriority*(category: cint; priority: LogPriority_1157629433): void {.
      cdecl, importc: "SDL_SetLogPriority".}
else:
  static :
    hint("Declaration of " & "SetLogPriority" &
        " already exists, not redeclaring")
when not declared(GetLogPriority):
  proc GetLogPriority*(category: cint): LogPriority_1157629433 {.cdecl,
      importc: "SDL_GetLogPriority".}
else:
  static :
    hint("Declaration of " & "GetLogPriority" &
        " already exists, not redeclaring")
when not declared(ResetLogPriorities):
  proc ResetLogPriorities*(): void {.cdecl, importc: "SDL_ResetLogPriorities".}
else:
  static :
    hint("Declaration of " & "ResetLogPriorities" &
        " already exists, not redeclaring")
when not declared(SetLogPriorityPrefix):
  proc SetLogPriorityPrefix*(priority: LogPriority_1157629433; prefix: cstring): bool {.
      cdecl, importc: "SDL_SetLogPriorityPrefix".}
else:
  static :
    hint("Declaration of " & "SetLogPriorityPrefix" &
        " already exists, not redeclaring")
when not declared(Log):
  proc Log*(fmt: cstring): void {.cdecl, varargs, importc: "SDL_Log".}
else:
  static :
    hint("Declaration of " & "Log" & " already exists, not redeclaring")
when not declared(LogTrace):
  proc LogTrace*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogTrace".}
else:
  static :
    hint("Declaration of " & "LogTrace" & " already exists, not redeclaring")
when not declared(LogVerbose):
  proc LogVerbose*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogVerbose".}
else:
  static :
    hint("Declaration of " & "LogVerbose" & " already exists, not redeclaring")
when not declared(LogDebug):
  proc LogDebug*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogDebug".}
else:
  static :
    hint("Declaration of " & "LogDebug" & " already exists, not redeclaring")
when not declared(LogInfo):
  proc LogInfo*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogInfo".}
else:
  static :
    hint("Declaration of " & "LogInfo" & " already exists, not redeclaring")
when not declared(LogWarn):
  proc LogWarn*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogWarn".}
else:
  static :
    hint("Declaration of " & "LogWarn" & " already exists, not redeclaring")
when not declared(LogError):
  proc LogError*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogError".}
else:
  static :
    hint("Declaration of " & "LogError" & " already exists, not redeclaring")
when not declared(LogCritical):
  proc LogCritical*(category: cint; fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogCritical".}
else:
  static :
    hint("Declaration of " & "LogCritical" & " already exists, not redeclaring")
when not declared(LogMessage):
  proc LogMessage*(category: cint; priority: LogPriority_1157629433;
                   fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogMessage".}
else:
  static :
    hint("Declaration of " & "LogMessage" & " already exists, not redeclaring")
when not declared(LogMessageV):
  proc LogMessageV*(category: cint; priority: LogPriority_1157629433;
                    fmt: cstring): void {.cdecl, varargs,
      importc: "SDL_LogMessageV".}
else:
  static :
    hint("Declaration of " & "LogMessageV" & " already exists, not redeclaring")
when not declared(GetDefaultLogOutputFunction):
  proc GetDefaultLogOutputFunction*(): LogOutputFunction_1157629435 {.cdecl,
      importc: "SDL_GetDefaultLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "GetDefaultLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(GetLogOutputFunction):
  proc GetLogOutputFunction*(callback: LogOutputFunction_1157629435;
                             userdata: ptr pointer): void {.cdecl,
      importc: "SDL_GetLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "GetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(SetLogOutputFunction):
  proc SetLogOutputFunction*(callback: LogOutputFunction_1157629435;
                             userdata: pointer): void {.cdecl,
      importc: "SDL_SetLogOutputFunction".}
else:
  static :
    hint("Declaration of " & "SetLogOutputFunction" &
        " already exists, not redeclaring")
when not declared(ShowMessageBox):
  proc ShowMessageBox*(messageboxdata: ptr MessageBoxData_1157629459;
                       buttonid: ptr cint): bool {.cdecl,
      importc: "SDL_ShowMessageBox".}
else:
  static :
    hint("Declaration of " & "ShowMessageBox" &
        " already exists, not redeclaring")
when not declared(ShowSimpleMessageBox):
  proc ShowSimpleMessageBox*(flags: MessageBoxFlags_1157629437; title: cstring;
                             message: cstring; window: ptr Window_1157628729): bool {.
      cdecl, importc: "SDL_ShowSimpleMessageBox".}
else:
  static :
    hint("Declaration of " & "ShowSimpleMessageBox" &
        " already exists, not redeclaring")
when not declared(Metal_CreateView):
  proc Metal_CreateView*(window: ptr Window_1157628729): MetalView_1157629461 {.
      cdecl, importc: "SDL_Metal_CreateView".}
else:
  static :
    hint("Declaration of " & "Metal_CreateView" &
        " already exists, not redeclaring")
when not declared(Metal_DestroyView):
  proc Metal_DestroyView*(view: MetalView_1157629461): void {.cdecl,
      importc: "SDL_Metal_DestroyView".}
else:
  static :
    hint("Declaration of " & "Metal_DestroyView" &
        " already exists, not redeclaring")
when not declared(Metal_GetLayer):
  proc Metal_GetLayer*(view: MetalView_1157629461): pointer {.cdecl,
      importc: "SDL_Metal_GetLayer".}
else:
  static :
    hint("Declaration of " & "Metal_GetLayer" &
        " already exists, not redeclaring")
when not declared(OpenURL):
  proc OpenURL*(url: cstring): bool {.cdecl, importc: "SDL_OpenURL".}
else:
  static :
    hint("Declaration of " & "OpenURL" & " already exists, not redeclaring")
when not declared(GetPlatform):
  proc GetPlatform*(): cstring {.cdecl, importc: "SDL_GetPlatform".}
else:
  static :
    hint("Declaration of " & "GetPlatform" & " already exists, not redeclaring")
when not declared(CreateProcess):
  proc CreateProcess*(args: ptr cstring; pipe_stdio: bool): ptr Process_1157629463 {.
      cdecl, importc: "SDL_CreateProcess".}
else:
  static :
    hint("Declaration of " & "CreateProcess" &
        " already exists, not redeclaring")
when not declared(CreateProcessWithProperties):
  proc CreateProcessWithProperties*(props: PropertiesID_1157628517): ptr Process_1157629463 {.
      cdecl, importc: "SDL_CreateProcessWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateProcessWithProperties" &
        " already exists, not redeclaring")
when not declared(GetProcessProperties):
  proc GetProcessProperties*(process: ptr Process_1157629463): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetProcessProperties".}
else:
  static :
    hint("Declaration of " & "GetProcessProperties" &
        " already exists, not redeclaring")
when not declared(ReadProcess):
  proc ReadProcess*(process: ptr Process_1157629463; datasize: ptr csize_t;
                    exitcode: ptr cint): pointer {.cdecl,
      importc: "SDL_ReadProcess".}
else:
  static :
    hint("Declaration of " & "ReadProcess" & " already exists, not redeclaring")
when not declared(GetProcessInput):
  proc GetProcessInput*(process: ptr Process_1157629463): ptr IOStream_1157628569 {.
      cdecl, importc: "SDL_GetProcessInput".}
else:
  static :
    hint("Declaration of " & "GetProcessInput" &
        " already exists, not redeclaring")
when not declared(GetProcessOutput):
  proc GetProcessOutput*(process: ptr Process_1157629463): ptr IOStream_1157628569 {.
      cdecl, importc: "SDL_GetProcessOutput".}
else:
  static :
    hint("Declaration of " & "GetProcessOutput" &
        " already exists, not redeclaring")
when not declared(KillProcess):
  proc KillProcess*(process: ptr Process_1157629463; force: bool): bool {.cdecl,
      importc: "SDL_KillProcess".}
else:
  static :
    hint("Declaration of " & "KillProcess" & " already exists, not redeclaring")
when not declared(WaitProcess):
  proc WaitProcess*(process: ptr Process_1157629463; block_arg: bool;
                    exitcode: ptr cint): bool {.cdecl,
      importc: "SDL_WaitProcess".}
else:
  static :
    hint("Declaration of " & "WaitProcess" & " already exists, not redeclaring")
when not declared(DestroyProcess):
  proc DestroyProcess*(process: ptr Process_1157629463): void {.cdecl,
      importc: "SDL_DestroyProcess".}
else:
  static :
    hint("Declaration of " & "DestroyProcess" &
        " already exists, not redeclaring")
when not declared(GetNumRenderDrivers):
  proc GetNumRenderDrivers*(): cint {.cdecl, importc: "SDL_GetNumRenderDrivers".}
else:
  static :
    hint("Declaration of " & "GetNumRenderDrivers" &
        " already exists, not redeclaring")
when not declared(GetRenderDriver):
  proc GetRenderDriver*(index: cint): cstring {.cdecl,
      importc: "SDL_GetRenderDriver".}
else:
  static :
    hint("Declaration of " & "GetRenderDriver" &
        " already exists, not redeclaring")
when not declared(CreateWindowAndRenderer):
  proc CreateWindowAndRenderer*(title: cstring; width: cint; height: cint;
                                window_flags: WindowFlags_1157628731;
                                window: ptr ptr Window_1157628729;
                                renderer: ptr ptr Renderer_1157629481): bool {.
      cdecl, importc: "SDL_CreateWindowAndRenderer".}
else:
  static :
    hint("Declaration of " & "CreateWindowAndRenderer" &
        " already exists, not redeclaring")
when not declared(CreateRenderer):
  proc CreateRenderer*(window: ptr Window_1157628729; name: cstring): ptr Renderer_1157629481 {.
      cdecl, importc: "SDL_CreateRenderer".}
else:
  static :
    hint("Declaration of " & "CreateRenderer" &
        " already exists, not redeclaring")
when not declared(CreateRendererWithProperties):
  proc CreateRendererWithProperties*(props: PropertiesID_1157628517): ptr Renderer_1157629481 {.
      cdecl, importc: "SDL_CreateRendererWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateRendererWithProperties" &
        " already exists, not redeclaring")
when not declared(CreateSoftwareRenderer):
  proc CreateSoftwareRenderer*(surface: ptr Surface_1157628693): ptr Renderer_1157629481 {.
      cdecl, importc: "SDL_CreateSoftwareRenderer".}
else:
  static :
    hint("Declaration of " & "CreateSoftwareRenderer" &
        " already exists, not redeclaring")
when not declared(GetRenderer):
  proc GetRenderer*(window: ptr Window_1157628729): ptr Renderer_1157629481 {.
      cdecl, importc: "SDL_GetRenderer".}
else:
  static :
    hint("Declaration of " & "GetRenderer" & " already exists, not redeclaring")
when not declared(GetRenderWindow):
  proc GetRenderWindow*(renderer: ptr Renderer_1157629481): ptr Window_1157628729 {.
      cdecl, importc: "SDL_GetRenderWindow".}
else:
  static :
    hint("Declaration of " & "GetRenderWindow" &
        " already exists, not redeclaring")
when not declared(GetRendererName):
  proc GetRendererName*(renderer: ptr Renderer_1157629481): cstring {.cdecl,
      importc: "SDL_GetRendererName".}
else:
  static :
    hint("Declaration of " & "GetRendererName" &
        " already exists, not redeclaring")
when not declared(GetRendererProperties):
  proc GetRendererProperties*(renderer: ptr Renderer_1157629481): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetRendererProperties".}
else:
  static :
    hint("Declaration of " & "GetRendererProperties" &
        " already exists, not redeclaring")
when not declared(GetRenderOutputSize):
  proc GetRenderOutputSize*(renderer: ptr Renderer_1157629481; w: ptr cint;
                            h: ptr cint): bool {.cdecl,
      importc: "SDL_GetRenderOutputSize".}
else:
  static :
    hint("Declaration of " & "GetRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(GetCurrentRenderOutputSize):
  proc GetCurrentRenderOutputSize*(renderer: ptr Renderer_1157629481;
                                   w: ptr cint; h: ptr cint): bool {.cdecl,
      importc: "SDL_GetCurrentRenderOutputSize".}
else:
  static :
    hint("Declaration of " & "GetCurrentRenderOutputSize" &
        " already exists, not redeclaring")
when not declared(CreateTexture):
  proc CreateTexture*(renderer: ptr Renderer_1157629481; format: PixelFormat_1157628619;
                      access: TextureAccess_1157629475; w: cint; h: cint): ptr Texture_1157629485 {.
      cdecl, importc: "SDL_CreateTexture".}
else:
  static :
    hint("Declaration of " & "CreateTexture" &
        " already exists, not redeclaring")
when not declared(CreateTextureFromSurface):
  proc CreateTextureFromSurface*(renderer: ptr Renderer_1157629481;
                                 surface: ptr Surface_1157628693): ptr Texture_1157629485 {.
      cdecl, importc: "SDL_CreateTextureFromSurface".}
else:
  static :
    hint("Declaration of " & "CreateTextureFromSurface" &
        " already exists, not redeclaring")
when not declared(CreateTextureWithProperties):
  proc CreateTextureWithProperties*(renderer: ptr Renderer_1157629481;
                                    props: PropertiesID_1157628517): ptr Texture_1157629485 {.
      cdecl, importc: "SDL_CreateTextureWithProperties".}
else:
  static :
    hint("Declaration of " & "CreateTextureWithProperties" &
        " already exists, not redeclaring")
when not declared(GetTextureProperties):
  proc GetTextureProperties*(texture: ptr Texture_1157629485): PropertiesID_1157628517 {.
      cdecl, importc: "SDL_GetTextureProperties".}
else:
  static :
    hint("Declaration of " & "GetTextureProperties" &
        " already exists, not redeclaring")
when not declared(GetRendererFromTexture):
  proc GetRendererFromTexture*(texture: ptr Texture_1157629485): ptr Renderer_1157629481 {.
      cdecl, importc: "SDL_GetRendererFromTexture".}
else:
  static :
    hint("Declaration of " & "GetRendererFromTexture" &
        " already exists, not redeclaring")
when not declared(GetTextureSize):
  proc GetTextureSize*(texture: ptr Texture_1157629485; w: ptr cfloat;
                       h: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureSize".}
else:
  static :
    hint("Declaration of " & "GetTextureSize" &
        " already exists, not redeclaring")
when not declared(SetTextureColorMod):
  proc SetTextureColorMod*(texture: ptr Texture_1157629485; r: Uint8_1157628437;
                           g: Uint8_1157628437; b: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetTextureColorMod".}
else:
  static :
    hint("Declaration of " & "SetTextureColorMod" &
        " already exists, not redeclaring")
when not declared(SetTextureColorModFloat):
  proc SetTextureColorModFloat*(texture: ptr Texture_1157629485; r: cfloat;
                                g: cfloat; b: cfloat): bool {.cdecl,
      importc: "SDL_SetTextureColorModFloat".}
else:
  static :
    hint("Declaration of " & "SetTextureColorModFloat" &
        " already exists, not redeclaring")
when not declared(GetTextureColorMod):
  proc GetTextureColorMod*(texture: ptr Texture_1157629485; r: ptr Uint8_1157628437;
                           g: ptr Uint8_1157628437; b: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_GetTextureColorMod".}
else:
  static :
    hint("Declaration of " & "GetTextureColorMod" &
        " already exists, not redeclaring")
when not declared(GetTextureColorModFloat):
  proc GetTextureColorModFloat*(texture: ptr Texture_1157629485; r: ptr cfloat;
                                g: ptr cfloat; b: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureColorModFloat".}
else:
  static :
    hint("Declaration of " & "GetTextureColorModFloat" &
        " already exists, not redeclaring")
when not declared(SetTextureAlphaMod):
  proc SetTextureAlphaMod*(texture: ptr Texture_1157629485; alpha: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetTextureAlphaMod".}
else:
  static :
    hint("Declaration of " & "SetTextureAlphaMod" &
        " already exists, not redeclaring")
when not declared(SetTextureAlphaModFloat):
  proc SetTextureAlphaModFloat*(texture: ptr Texture_1157629485; alpha: cfloat): bool {.
      cdecl, importc: "SDL_SetTextureAlphaModFloat".}
else:
  static :
    hint("Declaration of " & "SetTextureAlphaModFloat" &
        " already exists, not redeclaring")
when not declared(GetTextureAlphaMod):
  proc GetTextureAlphaMod*(texture: ptr Texture_1157629485; alpha: ptr Uint8_1157628437): bool {.
      cdecl, importc: "SDL_GetTextureAlphaMod".}
else:
  static :
    hint("Declaration of " & "GetTextureAlphaMod" &
        " already exists, not redeclaring")
when not declared(GetTextureAlphaModFloat):
  proc GetTextureAlphaModFloat*(texture: ptr Texture_1157629485;
                                alpha: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetTextureAlphaModFloat".}
else:
  static :
    hint("Declaration of " & "GetTextureAlphaModFloat" &
        " already exists, not redeclaring")
when not declared(SetTextureBlendMode):
  proc SetTextureBlendMode*(texture: ptr Texture_1157629485;
                            blendMode: BlendMode_1157628587): bool {.cdecl,
      importc: "SDL_SetTextureBlendMode".}
else:
  static :
    hint("Declaration of " & "SetTextureBlendMode" &
        " already exists, not redeclaring")
when not declared(GetTextureBlendMode):
  proc GetTextureBlendMode*(texture: ptr Texture_1157629485;
                            blendMode: ptr BlendMode_1157628587): bool {.cdecl,
      importc: "SDL_GetTextureBlendMode".}
else:
  static :
    hint("Declaration of " & "GetTextureBlendMode" &
        " already exists, not redeclaring")
when not declared(SetTextureScaleMode):
  proc SetTextureScaleMode*(texture: ptr Texture_1157629485;
                            scaleMode: ScaleMode_1157628685): bool {.cdecl,
      importc: "SDL_SetTextureScaleMode".}
else:
  static :
    hint("Declaration of " & "SetTextureScaleMode" &
        " already exists, not redeclaring")
when not declared(GetTextureScaleMode):
  proc GetTextureScaleMode*(texture: ptr Texture_1157629485;
                            scaleMode: ptr ScaleMode_1157628685): bool {.cdecl,
      importc: "SDL_GetTextureScaleMode".}
else:
  static :
    hint("Declaration of " & "GetTextureScaleMode" &
        " already exists, not redeclaring")
when not declared(UpdateTexture):
  proc UpdateTexture*(texture: ptr Texture_1157629485; rect: ptr Rect_1157628675;
                      pixels: pointer; pitch: cint): bool {.cdecl,
      importc: "SDL_UpdateTexture".}
else:
  static :
    hint("Declaration of " & "UpdateTexture" &
        " already exists, not redeclaring")
when not declared(UpdateYUVTexture):
  proc UpdateYUVTexture*(texture: ptr Texture_1157629485; rect: ptr Rect_1157628675;
                         Yplane: ptr Uint8_1157628437; Ypitch: cint;
                         Uplane: ptr Uint8_1157628437; Upitch: cint;
                         Vplane: ptr Uint8_1157628437; Vpitch: cint): bool {.
      cdecl, importc: "SDL_UpdateYUVTexture".}
else:
  static :
    hint("Declaration of " & "UpdateYUVTexture" &
        " already exists, not redeclaring")
when not declared(UpdateNVTexture):
  proc UpdateNVTexture*(texture: ptr Texture_1157629485; rect: ptr Rect_1157628675;
                        Yplane: ptr Uint8_1157628437; Ypitch: cint;
                        UVplane: ptr Uint8_1157628437; UVpitch: cint): bool {.
      cdecl, importc: "SDL_UpdateNVTexture".}
else:
  static :
    hint("Declaration of " & "UpdateNVTexture" &
        " already exists, not redeclaring")
when not declared(LockTexture):
  proc LockTexture*(texture: ptr Texture_1157629485; rect: ptr Rect_1157628675;
                    pixels: ptr pointer; pitch: ptr cint): bool {.cdecl,
      importc: "SDL_LockTexture".}
else:
  static :
    hint("Declaration of " & "LockTexture" & " already exists, not redeclaring")
when not declared(LockTextureToSurface):
  proc LockTextureToSurface*(texture: ptr Texture_1157629485; rect: ptr Rect_1157628675;
                             surface: ptr ptr Surface_1157628693): bool {.cdecl,
      importc: "SDL_LockTextureToSurface".}
else:
  static :
    hint("Declaration of " & "LockTextureToSurface" &
        " already exists, not redeclaring")
when not declared(UnlockTexture):
  proc UnlockTexture*(texture: ptr Texture_1157629485): void {.cdecl,
      importc: "SDL_UnlockTexture".}
else:
  static :
    hint("Declaration of " & "UnlockTexture" &
        " already exists, not redeclaring")
when not declared(SetRenderTarget):
  proc SetRenderTarget*(renderer: ptr Renderer_1157629481; texture: ptr Texture_1157629485): bool {.
      cdecl, importc: "SDL_SetRenderTarget".}
else:
  static :
    hint("Declaration of " & "SetRenderTarget" &
        " already exists, not redeclaring")
when not declared(GetRenderTarget):
  proc GetRenderTarget*(renderer: ptr Renderer_1157629481): ptr Texture_1157629485 {.
      cdecl, importc: "SDL_GetRenderTarget".}
else:
  static :
    hint("Declaration of " & "GetRenderTarget" &
        " already exists, not redeclaring")
when not declared(SetRenderLogicalPresentation):
  proc SetRenderLogicalPresentation*(renderer: ptr Renderer_1157629481; w: cint;
                                     h: cint; mode: RendererLogicalPresentation_1157629479): bool {.
      cdecl, importc: "SDL_SetRenderLogicalPresentation".}
else:
  static :
    hint("Declaration of " & "SetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(GetRenderLogicalPresentation):
  proc GetRenderLogicalPresentation*(renderer: ptr Renderer_1157629481;
                                     w: ptr cint; h: ptr cint;
                                     mode: ptr RendererLogicalPresentation_1157629479): bool {.
      cdecl, importc: "SDL_GetRenderLogicalPresentation".}
else:
  static :
    hint("Declaration of " & "GetRenderLogicalPresentation" &
        " already exists, not redeclaring")
when not declared(GetRenderLogicalPresentationRect):
  proc GetRenderLogicalPresentationRect*(renderer: ptr Renderer_1157629481;
      rect: ptr FRect_1157628679): bool {.cdecl,
      importc: "SDL_GetRenderLogicalPresentationRect".}
else:
  static :
    hint("Declaration of " & "GetRenderLogicalPresentationRect" &
        " already exists, not redeclaring")
when not declared(RenderCoordinatesFromWindow):
  proc RenderCoordinatesFromWindow*(renderer: ptr Renderer_1157629481;
                                    window_x: cfloat; window_y: cfloat;
                                    x: ptr cfloat; y: ptr cfloat): bool {.cdecl,
      importc: "SDL_RenderCoordinatesFromWindow".}
else:
  static :
    hint("Declaration of " & "RenderCoordinatesFromWindow" &
        " already exists, not redeclaring")
when not declared(RenderCoordinatesToWindow):
  proc RenderCoordinatesToWindow*(renderer: ptr Renderer_1157629481; x: cfloat;
                                  y: cfloat; window_x: ptr cfloat;
                                  window_y: ptr cfloat): bool {.cdecl,
      importc: "SDL_RenderCoordinatesToWindow".}
else:
  static :
    hint("Declaration of " & "RenderCoordinatesToWindow" &
        " already exists, not redeclaring")
when not declared(ConvertEventToRenderCoordinates):
  proc ConvertEventToRenderCoordinates*(renderer: ptr Renderer_1157629481;
                                        event: ptr Event_1157629055): bool {.
      cdecl, importc: "SDL_ConvertEventToRenderCoordinates".}
else:
  static :
    hint("Declaration of " & "ConvertEventToRenderCoordinates" &
        " already exists, not redeclaring")
when not declared(SetRenderViewport):
  proc SetRenderViewport*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_SetRenderViewport".}
else:
  static :
    hint("Declaration of " & "SetRenderViewport" &
        " already exists, not redeclaring")
when not declared(GetRenderViewport):
  proc GetRenderViewport*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetRenderViewport".}
else:
  static :
    hint("Declaration of " & "GetRenderViewport" &
        " already exists, not redeclaring")
when not declared(RenderViewportSet):
  proc RenderViewportSet*(renderer: ptr Renderer_1157629481): bool {.cdecl,
      importc: "SDL_RenderViewportSet".}
else:
  static :
    hint("Declaration of " & "RenderViewportSet" &
        " already exists, not redeclaring")
when not declared(GetRenderSafeArea):
  proc GetRenderSafeArea*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetRenderSafeArea".}
else:
  static :
    hint("Declaration of " & "GetRenderSafeArea" &
        " already exists, not redeclaring")
when not declared(SetRenderClipRect):
  proc SetRenderClipRect*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_SetRenderClipRect".}
else:
  static :
    hint("Declaration of " & "SetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(GetRenderClipRect):
  proc GetRenderClipRect*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): bool {.
      cdecl, importc: "SDL_GetRenderClipRect".}
else:
  static :
    hint("Declaration of " & "GetRenderClipRect" &
        " already exists, not redeclaring")
when not declared(RenderClipEnabled):
  proc RenderClipEnabled*(renderer: ptr Renderer_1157629481): bool {.cdecl,
      importc: "SDL_RenderClipEnabled".}
else:
  static :
    hint("Declaration of " & "RenderClipEnabled" &
        " already exists, not redeclaring")
when not declared(SetRenderScale):
  proc SetRenderScale*(renderer: ptr Renderer_1157629481; scaleX: cfloat;
                       scaleY: cfloat): bool {.cdecl,
      importc: "SDL_SetRenderScale".}
else:
  static :
    hint("Declaration of " & "SetRenderScale" &
        " already exists, not redeclaring")
when not declared(GetRenderScale):
  proc GetRenderScale*(renderer: ptr Renderer_1157629481; scaleX: ptr cfloat;
                       scaleY: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetRenderScale".}
else:
  static :
    hint("Declaration of " & "GetRenderScale" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawColor):
  proc SetRenderDrawColor*(renderer: ptr Renderer_1157629481; r: Uint8_1157628437;
                           g: Uint8_1157628437; b: Uint8_1157628437; a: Uint8_1157628437): bool {.
      cdecl, importc: "SDL_SetRenderDrawColor".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawColor" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawColorFloat):
  proc SetRenderDrawColorFloat*(renderer: ptr Renderer_1157629481; r: cfloat;
                                g: cfloat; b: cfloat; a: cfloat): bool {.cdecl,
      importc: "SDL_SetRenderDrawColorFloat".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawColorFloat" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawColor):
  proc GetRenderDrawColor*(renderer: ptr Renderer_1157629481; r: ptr Uint8_1157628437;
                           g: ptr Uint8_1157628437; b: ptr Uint8_1157628437;
                           a: ptr Uint8_1157628437): bool {.cdecl,
      importc: "SDL_GetRenderDrawColor".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawColor" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawColorFloat):
  proc GetRenderDrawColorFloat*(renderer: ptr Renderer_1157629481;
                                r: ptr cfloat; g: ptr cfloat; b: ptr cfloat;
                                a: ptr cfloat): bool {.cdecl,
      importc: "SDL_GetRenderDrawColorFloat".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawColorFloat" &
        " already exists, not redeclaring")
when not declared(SetRenderColorScale):
  proc SetRenderColorScale*(renderer: ptr Renderer_1157629481; scale: cfloat): bool {.
      cdecl, importc: "SDL_SetRenderColorScale".}
else:
  static :
    hint("Declaration of " & "SetRenderColorScale" &
        " already exists, not redeclaring")
when not declared(GetRenderColorScale):
  proc GetRenderColorScale*(renderer: ptr Renderer_1157629481; scale: ptr cfloat): bool {.
      cdecl, importc: "SDL_GetRenderColorScale".}
else:
  static :
    hint("Declaration of " & "GetRenderColorScale" &
        " already exists, not redeclaring")
when not declared(SetRenderDrawBlendMode):
  proc SetRenderDrawBlendMode*(renderer: ptr Renderer_1157629481;
                               blendMode: BlendMode_1157628587): bool {.cdecl,
      importc: "SDL_SetRenderDrawBlendMode".}
else:
  static :
    hint("Declaration of " & "SetRenderDrawBlendMode" &
        " already exists, not redeclaring")
when not declared(GetRenderDrawBlendMode):
  proc GetRenderDrawBlendMode*(renderer: ptr Renderer_1157629481;
                               blendMode: ptr BlendMode_1157628587): bool {.
      cdecl, importc: "SDL_GetRenderDrawBlendMode".}
else:
  static :
    hint("Declaration of " & "GetRenderDrawBlendMode" &
        " already exists, not redeclaring")
when not declared(RenderClear):
  proc RenderClear*(renderer: ptr Renderer_1157629481): bool {.cdecl,
      importc: "SDL_RenderClear".}
else:
  static :
    hint("Declaration of " & "RenderClear" & " already exists, not redeclaring")
when not declared(RenderPoint):
  proc RenderPoint*(renderer: ptr Renderer_1157629481; x: cfloat; y: cfloat): bool {.
      cdecl, importc: "SDL_RenderPoint".}
else:
  static :
    hint("Declaration of " & "RenderPoint" & " already exists, not redeclaring")
when not declared(RenderPoints):
  proc RenderPoints*(renderer: ptr Renderer_1157629481; points: ptr FPoint_1157628671;
                     count: cint): bool {.cdecl, importc: "SDL_RenderPoints".}
else:
  static :
    hint("Declaration of " & "RenderPoints" & " already exists, not redeclaring")
when not declared(RenderLine):
  proc RenderLine*(renderer: ptr Renderer_1157629481; x1: cfloat; y1: cfloat;
                   x2: cfloat; y2: cfloat): bool {.cdecl,
      importc: "SDL_RenderLine".}
else:
  static :
    hint("Declaration of " & "RenderLine" & " already exists, not redeclaring")
when not declared(RenderLines):
  proc RenderLines*(renderer: ptr Renderer_1157629481; points: ptr FPoint_1157628671;
                    count: cint): bool {.cdecl, importc: "SDL_RenderLines".}
else:
  static :
    hint("Declaration of " & "RenderLines" & " already exists, not redeclaring")
when not declared(RenderRect):
  proc RenderRect*(renderer: ptr Renderer_1157629481; rect: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_RenderRect".}
else:
  static :
    hint("Declaration of " & "RenderRect" & " already exists, not redeclaring")
when not declared(RenderRects):
  proc RenderRects*(renderer: ptr Renderer_1157629481; rects: ptr FRect_1157628679;
                    count: cint): bool {.cdecl, importc: "SDL_RenderRects".}
else:
  static :
    hint("Declaration of " & "RenderRects" & " already exists, not redeclaring")
when not declared(RenderFillRect):
  proc RenderFillRect*(renderer: ptr Renderer_1157629481; rect: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_RenderFillRect".}
else:
  static :
    hint("Declaration of " & "RenderFillRect" &
        " already exists, not redeclaring")
when not declared(RenderFillRects):
  proc RenderFillRects*(renderer: ptr Renderer_1157629481; rects: ptr FRect_1157628679;
                        count: cint): bool {.cdecl,
      importc: "SDL_RenderFillRects".}
else:
  static :
    hint("Declaration of " & "RenderFillRects" &
        " already exists, not redeclaring")
when not declared(RenderTexture):
  proc RenderTexture*(renderer: ptr Renderer_1157629481; texture: ptr Texture_1157629485;
                      srcrect: ptr FRect_1157628679; dstrect: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_RenderTexture".}
else:
  static :
    hint("Declaration of " & "RenderTexture" &
        " already exists, not redeclaring")
when not declared(RenderTextureRotated):
  proc RenderTextureRotated*(renderer: ptr Renderer_1157629481;
                             texture: ptr Texture_1157629485;
                             srcrect: ptr FRect_1157628679; dstrect: ptr FRect_1157628679;
                             angle: cdouble; center: ptr FPoint_1157628671;
                             flip: FlipMode_1157628689): bool {.cdecl,
      importc: "SDL_RenderTextureRotated".}
else:
  static :
    hint("Declaration of " & "RenderTextureRotated" &
        " already exists, not redeclaring")
when not declared(RenderTextureAffine):
  proc RenderTextureAffine*(renderer: ptr Renderer_1157629481;
                            texture: ptr Texture_1157629485; srcrect: ptr FRect_1157628679;
                            origin: ptr FPoint_1157628671; right: ptr FPoint_1157628671;
                            down: ptr FPoint_1157628671): bool {.cdecl,
      importc: "SDL_RenderTextureAffine".}
else:
  static :
    hint("Declaration of " & "RenderTextureAffine" &
        " already exists, not redeclaring")
when not declared(RenderTextureTiled):
  proc RenderTextureTiled*(renderer: ptr Renderer_1157629481;
                           texture: ptr Texture_1157629485; srcrect: ptr FRect_1157628679;
                           scale: cfloat; dstrect: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_RenderTextureTiled".}
else:
  static :
    hint("Declaration of " & "RenderTextureTiled" &
        " already exists, not redeclaring")
when not declared(RenderTexture9Grid):
  proc RenderTexture9Grid*(renderer: ptr Renderer_1157629481;
                           texture: ptr Texture_1157629485; srcrect: ptr FRect_1157628679;
                           left_width: cfloat; right_width: cfloat;
                           top_height: cfloat; bottom_height: cfloat;
                           scale: cfloat; dstrect: ptr FRect_1157628679): bool {.
      cdecl, importc: "SDL_RenderTexture9Grid".}
else:
  static :
    hint("Declaration of " & "RenderTexture9Grid" &
        " already exists, not redeclaring")
when not declared(RenderGeometry):
  proc RenderGeometry*(renderer: ptr Renderer_1157629481; texture: ptr Texture_1157629485;
                       vertices: ptr Vertex_1157629471; num_vertices: cint;
                       indices: ptr cint; num_indices: cint): bool {.cdecl,
      importc: "SDL_RenderGeometry".}
else:
  static :
    hint("Declaration of " & "RenderGeometry" &
        " already exists, not redeclaring")
when not declared(RenderGeometryRaw):
  proc RenderGeometryRaw*(renderer: ptr Renderer_1157629481;
                          texture: ptr Texture_1157629485; xy: ptr cfloat;
                          xy_stride: cint; color: ptr FColor_1157628655;
                          color_stride: cint; uv: ptr cfloat; uv_stride: cint;
                          num_vertices: cint; indices: pointer;
                          num_indices: cint; size_indices: cint): bool {.cdecl,
      importc: "SDL_RenderGeometryRaw".}
else:
  static :
    hint("Declaration of " & "RenderGeometryRaw" &
        " already exists, not redeclaring")
when not declared(RenderReadPixels):
  proc RenderReadPixels*(renderer: ptr Renderer_1157629481; rect: ptr Rect_1157628675): ptr Surface_1157628693 {.
      cdecl, importc: "SDL_RenderReadPixels".}
else:
  static :
    hint("Declaration of " & "RenderReadPixels" &
        " already exists, not redeclaring")
when not declared(RenderPresent):
  proc RenderPresent*(renderer: ptr Renderer_1157629481): bool {.cdecl,
      importc: "SDL_RenderPresent".}
else:
  static :
    hint("Declaration of " & "RenderPresent" &
        " already exists, not redeclaring")
when not declared(DestroyTexture):
  proc DestroyTexture*(texture: ptr Texture_1157629485): void {.cdecl,
      importc: "SDL_DestroyTexture".}
else:
  static :
    hint("Declaration of " & "DestroyTexture" &
        " already exists, not redeclaring")
when not declared(DestroyRenderer):
  proc DestroyRenderer*(renderer: ptr Renderer_1157629481): void {.cdecl,
      importc: "SDL_DestroyRenderer".}
else:
  static :
    hint("Declaration of " & "DestroyRenderer" &
        " already exists, not redeclaring")
when not declared(FlushRenderer):
  proc FlushRenderer*(renderer: ptr Renderer_1157629481): bool {.cdecl,
      importc: "SDL_FlushRenderer".}
else:
  static :
    hint("Declaration of " & "FlushRenderer" &
        " already exists, not redeclaring")
when not declared(GetRenderMetalLayer):
  proc GetRenderMetalLayer*(renderer: ptr Renderer_1157629481): pointer {.cdecl,
      importc: "SDL_GetRenderMetalLayer".}
else:
  static :
    hint("Declaration of " & "GetRenderMetalLayer" &
        " already exists, not redeclaring")
when not declared(GetRenderMetalCommandEncoder):
  proc GetRenderMetalCommandEncoder*(renderer: ptr Renderer_1157629481): pointer {.
      cdecl, importc: "SDL_GetRenderMetalCommandEncoder".}
else:
  static :
    hint("Declaration of " & "GetRenderMetalCommandEncoder" &
        " already exists, not redeclaring")
when not declared(AddVulkanRenderSemaphores):
  proc AddVulkanRenderSemaphores*(renderer: ptr Renderer_1157629481;
                                  wait_stage_mask: Uint32_1157628445;
                                  wait_semaphore: Sint64_1157628447;
                                  signal_semaphore: Sint64_1157628447): bool {.
      cdecl, importc: "SDL_AddVulkanRenderSemaphores".}
else:
  static :
    hint("Declaration of " & "AddVulkanRenderSemaphores" &
        " already exists, not redeclaring")
when not declared(SetRenderVSync):
  proc SetRenderVSync*(renderer: ptr Renderer_1157629481; vsync: cint): bool {.
      cdecl, importc: "SDL_SetRenderVSync".}
else:
  static :
    hint("Declaration of " & "SetRenderVSync" &
        " already exists, not redeclaring")
when not declared(GetRenderVSync):
  proc GetRenderVSync*(renderer: ptr Renderer_1157629481; vsync: ptr cint): bool {.
      cdecl, importc: "SDL_GetRenderVSync".}
else:
  static :
    hint("Declaration of " & "GetRenderVSync" &
        " already exists, not redeclaring")
when not declared(RenderDebugText):
  proc RenderDebugText*(renderer: ptr Renderer_1157629481; x: cfloat; y: cfloat;
                        str: cstring): bool {.cdecl,
      importc: "SDL_RenderDebugText".}
else:
  static :
    hint("Declaration of " & "RenderDebugText" &
        " already exists, not redeclaring")
when not declared(OpenTitleStorage):
  proc OpenTitleStorage*(override: cstring; props: PropertiesID_1157628517): ptr Storage_1157629491 {.
      cdecl, importc: "SDL_OpenTitleStorage".}
else:
  static :
    hint("Declaration of " & "OpenTitleStorage" &
        " already exists, not redeclaring")
when not declared(OpenUserStorage):
  proc OpenUserStorage*(org: cstring; app: cstring; props: PropertiesID_1157628517): ptr Storage_1157629491 {.
      cdecl, importc: "SDL_OpenUserStorage".}
else:
  static :
    hint("Declaration of " & "OpenUserStorage" &
        " already exists, not redeclaring")
when not declared(OpenFileStorage):
  proc OpenFileStorage*(path: cstring): ptr Storage_1157629491 {.cdecl,
      importc: "SDL_OpenFileStorage".}
else:
  static :
    hint("Declaration of " & "OpenFileStorage" &
        " already exists, not redeclaring")
when not declared(OpenStorage):
  proc OpenStorage*(iface: ptr StorageInterface_1157629489; userdata: pointer): ptr Storage_1157629491 {.
      cdecl, importc: "SDL_OpenStorage".}
else:
  static :
    hint("Declaration of " & "OpenStorage" & " already exists, not redeclaring")
when not declared(CloseStorage):
  proc CloseStorage*(storage: ptr Storage_1157629491): bool {.cdecl,
      importc: "SDL_CloseStorage".}
else:
  static :
    hint("Declaration of " & "CloseStorage" & " already exists, not redeclaring")
when not declared(StorageReady):
  proc StorageReady*(storage: ptr Storage_1157629491): bool {.cdecl,
      importc: "SDL_StorageReady".}
else:
  static :
    hint("Declaration of " & "StorageReady" & " already exists, not redeclaring")
when not declared(GetStorageFileSize):
  proc GetStorageFileSize*(storage: ptr Storage_1157629491; path: cstring;
                           length: ptr Uint64_1157628449): bool {.cdecl,
      importc: "SDL_GetStorageFileSize".}
else:
  static :
    hint("Declaration of " & "GetStorageFileSize" &
        " already exists, not redeclaring")
when not declared(ReadStorageFile):
  proc ReadStorageFile*(storage: ptr Storage_1157629491; path: cstring;
                        destination: pointer; length: Uint64_1157628449): bool {.
      cdecl, importc: "SDL_ReadStorageFile".}
else:
  static :
    hint("Declaration of " & "ReadStorageFile" &
        " already exists, not redeclaring")
when not declared(WriteStorageFile):
  proc WriteStorageFile*(storage: ptr Storage_1157629491; path: cstring;
                         source: pointer; length: Uint64_1157628449): bool {.
      cdecl, importc: "SDL_WriteStorageFile".}
else:
  static :
    hint("Declaration of " & "WriteStorageFile" &
        " already exists, not redeclaring")
when not declared(CreateStorageDirectory):
  proc CreateStorageDirectory*(storage: ptr Storage_1157629491; path: cstring): bool {.
      cdecl, importc: "SDL_CreateStorageDirectory".}
else:
  static :
    hint("Declaration of " & "CreateStorageDirectory" &
        " already exists, not redeclaring")
when not declared(EnumerateStorageDirectory):
  proc EnumerateStorageDirectory*(storage: ptr Storage_1157629491;
                                  path: cstring;
                                  callback: EnumerateDirectoryCallback_1157629081;
                                  userdata: pointer): bool {.cdecl,
      importc: "SDL_EnumerateStorageDirectory".}
else:
  static :
    hint("Declaration of " & "EnumerateStorageDirectory" &
        " already exists, not redeclaring")
when not declared(RemoveStoragePath):
  proc RemoveStoragePath*(storage: ptr Storage_1157629491; path: cstring): bool {.
      cdecl, importc: "SDL_RemoveStoragePath".}
else:
  static :
    hint("Declaration of " & "RemoveStoragePath" &
        " already exists, not redeclaring")
when not declared(RenameStoragePath):
  proc RenameStoragePath*(storage: ptr Storage_1157629491; oldpath: cstring;
                          newpath: cstring): bool {.cdecl,
      importc: "SDL_RenameStoragePath".}
else:
  static :
    hint("Declaration of " & "RenameStoragePath" &
        " already exists, not redeclaring")
when not declared(CopyStorageFile):
  proc CopyStorageFile*(storage: ptr Storage_1157629491; oldpath: cstring;
                        newpath: cstring): bool {.cdecl,
      importc: "SDL_CopyStorageFile".}
else:
  static :
    hint("Declaration of " & "CopyStorageFile" &
        " already exists, not redeclaring")
when not declared(GetStoragePathInfo):
  proc GetStoragePathInfo*(storage: ptr Storage_1157629491; path: cstring;
                           info: ptr PathInfo_1157629073): bool {.cdecl,
      importc: "SDL_GetStoragePathInfo".}
else:
  static :
    hint("Declaration of " & "GetStoragePathInfo" &
        " already exists, not redeclaring")
when not declared(GetStorageSpaceRemaining):
  proc GetStorageSpaceRemaining*(storage: ptr Storage_1157629491): Uint64_1157628449 {.
      cdecl, importc: "SDL_GetStorageSpaceRemaining".}
else:
  static :
    hint("Declaration of " & "GetStorageSpaceRemaining" &
        " already exists, not redeclaring")
when not declared(GlobStorageDirectory):
  proc GlobStorageDirectory*(storage: ptr Storage_1157629491; path: cstring;
                             pattern: cstring; flags: GlobFlags_1157629075;
                             count: ptr cint): ptr cstring {.cdecl,
      importc: "SDL_GlobStorageDirectory".}
else:
  static :
    hint("Declaration of " & "GlobStorageDirectory" &
        " already exists, not redeclaring")
when not declared(SetX11EventHook):
  proc SetX11EventHook*(callback: X11EventHook_1157629495; userdata: pointer): void {.
      cdecl, importc: "SDL_SetX11EventHook".}
else:
  static :
    hint("Declaration of " & "SetX11EventHook" &
        " already exists, not redeclaring")
when not declared(SetLinuxThreadPriority):
  proc SetLinuxThreadPriority*(threadID: Sint64_1157628447; priority: cint): bool {.
      cdecl, importc: "SDL_SetLinuxThreadPriority".}
else:
  static :
    hint("Declaration of " & "SetLinuxThreadPriority" &
        " already exists, not redeclaring")
when not declared(SetLinuxThreadPriorityAndPolicy):
  proc SetLinuxThreadPriorityAndPolicy*(threadID: Sint64_1157628447;
                                        sdlPriority: cint; schedPolicy: cint): bool {.
      cdecl, importc: "SDL_SetLinuxThreadPriorityAndPolicy".}
else:
  static :
    hint("Declaration of " & "SetLinuxThreadPriorityAndPolicy" &
        " already exists, not redeclaring")
when not declared(IsTablet):
  proc IsTablet*(): bool {.cdecl, importc: "SDL_IsTablet".}
else:
  static :
    hint("Declaration of " & "IsTablet" & " already exists, not redeclaring")
when not declared(IsTV):
  proc IsTV*(): bool {.cdecl, importc: "SDL_IsTV".}
else:
  static :
    hint("Declaration of " & "IsTV" & " already exists, not redeclaring")
when not declared(GetSandbox):
  proc GetSandbox*(): Sandbox_1157629499 {.cdecl, importc: "SDL_GetSandbox".}
else:
  static :
    hint("Declaration of " & "GetSandbox" & " already exists, not redeclaring")
when not declared(OnApplicationWillTerminate):
  proc OnApplicationWillTerminate*(): void {.cdecl,
      importc: "SDL_OnApplicationWillTerminate".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillTerminate" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidReceiveMemoryWarning):
  proc OnApplicationDidReceiveMemoryWarning*(): void {.cdecl,
      importc: "SDL_OnApplicationDidReceiveMemoryWarning".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidReceiveMemoryWarning" &
        " already exists, not redeclaring")
when not declared(OnApplicationWillEnterBackground):
  proc OnApplicationWillEnterBackground*(): void {.cdecl,
      importc: "SDL_OnApplicationWillEnterBackground".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillEnterBackground" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidEnterBackground):
  proc OnApplicationDidEnterBackground*(): void {.cdecl,
      importc: "SDL_OnApplicationDidEnterBackground".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidEnterBackground" &
        " already exists, not redeclaring")
when not declared(OnApplicationWillEnterForeground):
  proc OnApplicationWillEnterForeground*(): void {.cdecl,
      importc: "SDL_OnApplicationWillEnterForeground".}
else:
  static :
    hint("Declaration of " & "OnApplicationWillEnterForeground" &
        " already exists, not redeclaring")
when not declared(OnApplicationDidEnterForeground):
  proc OnApplicationDidEnterForeground*(): void {.cdecl,
      importc: "SDL_OnApplicationDidEnterForeground".}
else:
  static :
    hint("Declaration of " & "OnApplicationDidEnterForeground" &
        " already exists, not redeclaring")
when not declared(GetDateTimeLocalePreferences):
  proc GetDateTimeLocalePreferences*(dateFormat: ptr DateFormat_1157629507;
                                     timeFormat: ptr TimeFormat_1157629511): bool {.
      cdecl, importc: "SDL_GetDateTimeLocalePreferences".}
else:
  static :
    hint("Declaration of " & "GetDateTimeLocalePreferences" &
        " already exists, not redeclaring")
when not declared(GetCurrentTime):
  proc GetCurrentTime*(ticks: ptr Time_1157628451): bool {.cdecl,
      importc: "SDL_GetCurrentTime".}
else:
  static :
    hint("Declaration of " & "GetCurrentTime" &
        " already exists, not redeclaring")
when not declared(TimeToDateTime):
  proc TimeToDateTime*(ticks: Time_1157628451; dt: ptr DateTime_1157629503;
                       localTime: bool): bool {.cdecl,
      importc: "SDL_TimeToDateTime".}
else:
  static :
    hint("Declaration of " & "TimeToDateTime" &
        " already exists, not redeclaring")
when not declared(DateTimeToTime):
  proc DateTimeToTime*(dt: ptr DateTime_1157629503; ticks: ptr Time_1157628451): bool {.
      cdecl, importc: "SDL_DateTimeToTime".}
else:
  static :
    hint("Declaration of " & "DateTimeToTime" &
        " already exists, not redeclaring")
when not declared(TimeToWindows):
  proc TimeToWindows*(ticks: Time_1157628451; dwLowDateTime: ptr Uint32_1157628445;
                      dwHighDateTime: ptr Uint32_1157628445): void {.cdecl,
      importc: "SDL_TimeToWindows".}
else:
  static :
    hint("Declaration of " & "TimeToWindows" &
        " already exists, not redeclaring")
when not declared(TimeFromWindows):
  proc TimeFromWindows*(dwLowDateTime: Uint32_1157628445; dwHighDateTime: Uint32_1157628445): Time_1157628451 {.
      cdecl, importc: "SDL_TimeFromWindows".}
else:
  static :
    hint("Declaration of " & "TimeFromWindows" &
        " already exists, not redeclaring")
when not declared(GetDaysInMonth):
  proc GetDaysInMonth*(year: cint; month: cint): cint {.cdecl,
      importc: "SDL_GetDaysInMonth".}
else:
  static :
    hint("Declaration of " & "GetDaysInMonth" &
        " already exists, not redeclaring")
when not declared(GetDayOfYear):
  proc GetDayOfYear*(year: cint; month: cint; day: cint): cint {.cdecl,
      importc: "SDL_GetDayOfYear".}
else:
  static :
    hint("Declaration of " & "GetDayOfYear" & " already exists, not redeclaring")
when not declared(GetDayOfWeek):
  proc GetDayOfWeek*(year: cint; month: cint; day: cint): cint {.cdecl,
      importc: "SDL_GetDayOfWeek".}
else:
  static :
    hint("Declaration of " & "GetDayOfWeek" & " already exists, not redeclaring")
when not declared(GetTicks):
  proc GetTicks*(): Uint64_1157628449 {.cdecl, importc: "SDL_GetTicks".}
else:
  static :
    hint("Declaration of " & "GetTicks" & " already exists, not redeclaring")
when not declared(GetTicksNS):
  proc GetTicksNS*(): Uint64_1157628449 {.cdecl, importc: "SDL_GetTicksNS".}
else:
  static :
    hint("Declaration of " & "GetTicksNS" & " already exists, not redeclaring")
when not declared(GetPerformanceCounter):
  proc GetPerformanceCounter*(): Uint64_1157628449 {.cdecl,
      importc: "SDL_GetPerformanceCounter".}
else:
  static :
    hint("Declaration of " & "GetPerformanceCounter" &
        " already exists, not redeclaring")
when not declared(GetPerformanceFrequency):
  proc GetPerformanceFrequency*(): Uint64_1157628449 {.cdecl,
      importc: "SDL_GetPerformanceFrequency".}
else:
  static :
    hint("Declaration of " & "GetPerformanceFrequency" &
        " already exists, not redeclaring")
when not declared(Delay):
  proc Delay*(ms: Uint32_1157628445): void {.cdecl, importc: "SDL_Delay".}
else:
  static :
    hint("Declaration of " & "Delay" & " already exists, not redeclaring")
when not declared(DelayNS):
  proc DelayNS*(ns: Uint64_1157628449): void {.cdecl, importc: "SDL_DelayNS".}
else:
  static :
    hint("Declaration of " & "DelayNS" & " already exists, not redeclaring")
when not declared(DelayPrecise):
  proc DelayPrecise*(ns: Uint64_1157628449): void {.cdecl,
      importc: "SDL_DelayPrecise".}
else:
  static :
    hint("Declaration of " & "DelayPrecise" & " already exists, not redeclaring")
when not declared(AddTimer):
  proc AddTimer*(interval: Uint32_1157628445; callback: TimerCallback_1157629515;
                 userdata: pointer): TimerID_1157629513 {.cdecl,
      importc: "SDL_AddTimer".}
else:
  static :
    hint("Declaration of " & "AddTimer" & " already exists, not redeclaring")
when not declared(AddTimerNS):
  proc AddTimerNS*(interval: Uint64_1157628449; callback: NSTimerCallback_1157629517;
                   userdata: pointer): TimerID_1157629513 {.cdecl,
      importc: "SDL_AddTimerNS".}
else:
  static :
    hint("Declaration of " & "AddTimerNS" & " already exists, not redeclaring")
when not declared(RemoveTimer):
  proc RemoveTimer*(id: TimerID_1157629513): bool {.cdecl,
      importc: "SDL_RemoveTimer".}
else:
  static :
    hint("Declaration of " & "RemoveTimer" & " already exists, not redeclaring")
when not declared(GetVersion):
  proc GetVersion*(): cint {.cdecl, importc: "SDL_GetVersion".}
else:
  static :
    hint("Declaration of " & "GetVersion" & " already exists, not redeclaring")
when not declared(GetRevision):
  proc GetRevision*(): cstring {.cdecl, importc: "SDL_GetRevision".}
else:
  static :
    hint("Declaration of " & "GetRevision" & " already exists, not redeclaring")
when not declared(compiler_LITTLE_ENDIAN):
  when 1234 is static:
    const
      compiler_LITTLE_ENDIAN* = 1234 ## Generated based on /usr/include/bits/endian.h:30:9
  else:
    let compiler_LITTLE_ENDIAN* = 1234 ## Generated based on /usr/include/bits/endian.h:30:9
else:
  static :
    hint("Declaration of " & "compiler_LITTLE_ENDIAN" &
        " already exists, not redeclaring")